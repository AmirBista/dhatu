{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/api-settings/api-settings.component.css","webpack:///./src/app/components/api-settings/api-settings.component.html","webpack:///./src/app/components/api-settings/api-settings.component.ts","webpack:///./src/app/components/common/header/header.component.css","webpack:///./src/app/components/common/header/header.component.html","webpack:///./src/app/components/common/header/header.component.ts","webpack:///./src/app/components/common/loading-mask/loading-mask.component.css","webpack:///./src/app/components/common/loading-mask/loading-mask.component.html","webpack:///./src/app/components/common/loading-mask/loading-mask.component.ts","webpack:///./src/app/components/common/ng-alert/ng-alert.component.css","webpack:///./src/app/components/common/ng-alert/ng-alert.component.html","webpack:///./src/app/components/common/ng-alert/ng-alert.component.ts","webpack:///./src/app/components/common/side-bar/side-bar.component.css","webpack:///./src/app/components/common/side-bar/side-bar.component.html","webpack:///./src/app/components/common/side-bar/side-bar.component.ts","webpack:///./src/app/components/fund-transfer/fund-transfer.component.css","webpack:///./src/app/components/fund-transfer/fund-transfer.component.html","webpack:///./src/app/components/fund-transfer/fund-transfer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/home/ticker-datagrid/ticker-datagrid.component.css","webpack:///./src/app/components/home/ticker-datagrid/ticker-datagrid.component.html","webpack:///./src/app/components/home/ticker-datagrid/ticker-datagrid.component.ts","webpack:///./src/app/components/home/trade-log-datagrid/trade-log-datagrid.component.css","webpack:///./src/app/components/home/trade-log-datagrid/trade-log-datagrid.component.html","webpack:///./src/app/components/home/trade-log-datagrid/trade-log-datagrid.component.ts","webpack:///./src/app/components/min-spred-modal/min-spred-modal.component.css","webpack:///./src/app/components/min-spred-modal/min-spred-modal.component.html","webpack:///./src/app/components/min-spred-modal/min-spred-modal.component.ts","webpack:///./src/app/components/ng-modal/modal.component.css","webpack:///./src/app/components/ng-modal/modal.component.html","webpack:///./src/app/components/ng-modal/modal.component.ts","webpack:///./src/app/components/order-detail-modal/order-detail-modal.component.css","webpack:///./src/app/components/order-detail-modal/order-detail-modal.component.html","webpack:///./src/app/components/order-detail-modal/order-detail-modal.component.ts","webpack:///./src/app/components/trade-form-data/trade-form-data.component.css","webpack:///./src/app/components/trade-form-data/trade-form-data.component.html","webpack:///./src/app/components/trade-form-data/trade-form-data.component.ts","webpack:///./src/app/components/trade-log/trade-log.component.css","webpack:///./src/app/components/trade-log/trade-log.component.html","webpack:///./src/app/components/trade-log/trade-log.component.ts","webpack:///./src/app/components/user-settings/general-settings/general-settings.component.css","webpack:///./src/app/components/user-settings/general-settings/general-settings.component.html","webpack:///./src/app/components/user-settings/general-settings/general-settings.component.ts","webpack:///./src/app/components/user-settings/password-info/password-info.component.css","webpack:///./src/app/components/user-settings/password-info/password-info.component.html","webpack:///./src/app/components/user-settings/password-info/password-info.component.ts","webpack:///./src/app/components/user-settings/user-info/user-info.component.css","webpack:///./src/app/components/user-settings/user-info/user-info.component.html","webpack:///./src/app/components/user-settings/user-info/user-info.component.ts","webpack:///./src/app/components/user-settings/user-settings.component.css","webpack:///./src/app/components/user-settings/user-settings.component.html","webpack:///./src/app/components/user-settings/user-settings.component.ts","webpack:///./src/app/config/constant.ts","webpack:///./src/app/config/lang.ts","webpack:///./src/app/pipes/bit-number.pipe.ts","webpack:///./src/app/services/frontend.service.ts","webpack:///./src/app/services/socket-io.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACU;AACuB;AACT;AACY;AACA;AAE3F,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAG,EAAE,EAAG,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAC;IACzD,EAAE,IAAI,EAAG,WAAW,EAAG,SAAS,EAAG,6EAAa,EAAC;IACjD,EAAE,IAAI,EAAG,aAAa,EAAG,SAAS,EAAG,oGAAoB,EAAC;IACvD,EAAE,IAAI,EAAG,UAAU,EAAG,SAAS,EAAG,2FAAiB,EAAC;IACpD,EAAE,IAAI,EAAG,eAAe,EAAG,SAAS,EAAG,uGAAqB,EAAC;IAC7D,EAAE,IAAI,EAAG,eAAe,EAAG,SAAS,EAAG,uGAAqB,EAAC;IACjE,oFAAoF;IACpF,mFAAmF;CACnF,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAC,OAAO,EAAG,IAAI,EAAC,CAAC,CAAC;YACzD,OAAO,EAAE,CAAE,4DAAY,CAAC;YACxB,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACxB7B,mB;;;;;;;;;;;ACAA,wDAAwD,SAAS,gU;;;;;;;;;;;;;;;;;;;;;;;;;ACAvB;AAC8B;AAQxE;IAGE,sBAAmB,MAAc,EAAU,cAA8B;QAAzE,iBAQD;QARoB,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAFzE,UAAK,GAAG,qBAAqB,CAAC;QAC9B,YAAO,GAAG,WAAW,CAAC;QAEpB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAU;YACtC,EAAE,CAAC,CAAC,KAAK,YAAY,6DAAa,CAAC,CAAC,CAAC;gBACnC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;gBACpE,iCAAiC;YACnC,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAXY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAI2B,sDAAM,EAA0B,8DAAc;OAH9D,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgB;AACiB;AACD;AACS;AACnB;AACU;AACqB;AACK;AAClB;AACuB;AACT;AACjB;AACC;AACP;AACF;AACtD,uDAAuD;AACyC;AACS;AACV;AACxB;AACY;AACmB;AACN;AACc;AAC9G,2FAA2F;AACA;AACE;AACqB;AACT;AACd;AAqC3F;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0FAAe;gBACf,+FAAgB;gBAChB,6EAAa;gBACb,oGAAoB;gBACpB,4FAAiB;gBACjB,qEAAa;gBACb,6GAAsB;gBACtB,sHAAyB;gBACzB,4GAAoB;gBACpB,oFAAc;gBACd,gGAAgB;gBAChB,mHAAuB;gBACvB,6GAAsB;gBACtB,2HAAyB;gBACzB,0GAAiB;gBACjB,+HAAwB;gBACxB,sHAAqB;gBACrB,wGAAqB;gBACrB,wGAAqB;aACtB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,oEAAgB;gBAChB,kEAAmB;gBACnB,0DAAW;gBACX,oEAAgB;aAEjB;YACD,SAAS,EAAE,CAAC,2EAAe,EAAE,4EAAe,CAAC;YAC7C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AClEtB,yBAAyB,6BAA6B,KAAK,C;;;;;;;;;;;ACA3D,wcAAwc,iGAAiG,2GAA2G,kGAAkG,4GAA4G,kHAAkH,yOAAyO,iJAAiJ,6MAA6M,wEAAwE,2BAA2B,iTAAiT,2BAA2B,+bAA+b,sBAAsB,SAAS,yBAAyB,WAAW,cAAc,uMAAuM,sBAAsB,eAAe,2BAA2B,gBAAgB,2BAA2B,iOAAiO,2BAA2B,gDAAgD,2CAA2C,6UAA6U,8BAA8B,+CAA+C,8CAA8C,0TAA0T,sPAAsP,6NAA6N,8IAA8I,wHAAwH,qLAAqL,wvDAAwvD,wBAAwB,8TAA8T,6DAA6D,kd;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA50N;AACK;AACsC;AAC3B;AACjB;AAQjD;IAME,8BAAmB,MAAc,EAAS,KAAoB,EACrD,WAA2B,EAAS,EAAgB;QAD1C,WAAM,GAAN,MAAM,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAe;QACrD,gBAAW,GAAX,WAAW,CAAgB;QAAS,OAAE,GAAF,EAAE,CAAc;QAH7D,qCAAqC;QAC9B,2BAAsB,GAAS,IAAI,CAAC;IAEsB,CAAC;IAElE,uCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,iCAAiC;IACnC,CAAC;IAED,iDAAkB,GAAlB;QAAA,iBAYC;QAXC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACnD,KAAI,CAAC,cAAc,GAAG,GAAG,CAAC,IAAI,CAAC;YAC/B,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YACtB,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAS,IAAI;gBACvC,0BAA0B;gBAC1B,IAAM,OAAO,GAAc,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;gBACjE,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;IAYD,sBAAI,oDAAkB;QAVtB,4BAA4B;QAC5B,yEAAyE;QACzE,uCAAuC;QACvC,yCAAyC;QACzC,2CAA2C;QAC3C,mFAAmF;QACnF,QAAQ;QACR,QAAQ;QACR,IAAI;aAEJ;YACC,MAAM,CAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACtD,CAAC;;;OAAA;IAED,yCAAU,GAAV;QACG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,OAAO,EAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;YACjD,kBAAkB,EAAG,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACnE,CAAC,CAAC;QACH,kCAAkC;IACrC,CAAC;IAED,6BAA6B;IAC7B,iFAAiF;IACjF,yBAAyB;IACzB,QAAQ;IACR,IAAI;IAEJ,6CAAc,GAAd,UAAe,IAAa;QAAb,gCAAa;QAC1B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnB,EAAE,EAAiB,IAAI,CAAC,EAAE,IAAI,EAAE;YAChC,SAAS,EAAU,IAAI,CAAC,SAAS,IAAI,EAAE;YACvC,OAAO,EAAY,EAAE;YACrB,UAAU,EAAS,EAAE;YACrB,MAAM,EAAa,CAAC;YACpB,SAAS,EAAU,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,4CAAa,GAAb,UAAc,GAAU;QACtB,+BAA+B;QAC/B,IAAM,OAAO,GAAc,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACnE,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED,6CAAc,GAAd,UAAe,KAAK,EAAE,GAAG;QACvB,IAAM,OAAO,GAAc,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAChE,UAAU,GAAO,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAEzC,EAAE,EAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACnB,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvE,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAC,IAAI,CAAC;QACrD,CAAC;QACD,IAAI,EAAC;YACH,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,eAAe,EAAE,CAAC;YACpD,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;QAC/F,CAAC;QACD,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,sBAAsB,EAAE,CAAC;IAC7D,CAAC;IAED,gDAAiB,GAAjB,UAAkB,KAAK,EAAE,GAAG;QAC1B,IAAM,OAAO,GAAc,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,EAClE,UAAU,GAAO,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAEvC,EAAE,EAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAC;YACnB,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpE,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAC,IAAI,CAAC;QACrD,CAAC;QACD,IAAI,EAAC;YACH,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YACjD,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC;QAC/F,CAAC;QACD,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,sBAAsB,EAAE,CAAC;IAC1D,CAAC;IAED,uCAAQ,GAAR;QACE,IAAI,EAAE,GAAE,IAAI,CAAC;QACb,EAAE,EAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAC;YAC5B,IAAI,SAAS,GAAc,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC;YAC7D,IAAI,UAAQ,GAAG,EAAE,CAAC;YAClB,SAAS,CAAC,OAAO,CAAC,UAAS,IAAI;gBAC7B,EAAE,EAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,EAAC;oBACpB,UAAQ,CAAC,IAAI,CAAC;wBACZ,EAAE,EAAW,IAAI,CAAC,EAAE;wBACpB,SAAS,EAAI,IAAI,CAAC,SAAS;wBAC3B,OAAO,EAAM,IAAI,CAAC,OAAO;wBACzB,UAAU,EAAG,IAAI,CAAC,UAAU;qBAC7B,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,EAAC,UAAQ,CAAC,MAAM,IAAE,CAAC,yEAAwE,CAAC,CAC9F,CAAC;gBACC,QAAQ,CAAC,KAAK,CAAC,yDAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC9C,MAAM,CAAC;YACT,CAAC;YACD,QAAQ,CAAC,OAAO,CAAC,yDAAY,CAAC,OAAO,CAAC,IAAI,EAAC;gBACzC,EAAE,EAAC,UAAQ,CAAC,MAAM,GAAC,CAAC,CAAC,EAAC;oBAClB,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC,UAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;wBAC7D,EAAE,EAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;4BACnB,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;4BAClC,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC;4BACvB,EAAE,CAAC,UAAU,EAAE,CAAC;4BAChB,EAAE,CAAC,kBAAkB,EAAE,CAAC;4BACxB,+BAA+B;wBACjC,CAAC;wBACD,IAAI,EAAC;4BACH,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;wBAClC,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC;gBACH,2DAA2D;gBAC3D,2EAA2E;gBAC3E,gDAAgD;gBAChD,mBAAmB;gBACnB,MAAM;gBACN,qCAAqC;gBACrC,+EAA+E;gBAC/E,4DAA4D;gBAC5D,mCAAmC;gBACnC,MAAM;gBACN,UAAU;gBACV,sFAAsF;gBACtF,wCAAwC;gBACxC,UAAU;gBACV,mEAAmE;gBACnE,iDAAiD;gBACjD,UAAU;gBACV,aAAa;gBACb,UAAU;gBACV,+CAA+C;gBAC/C,UAAU;gBACV,qCAAqC;gBACrC,UAAU;gBACV,MAAM;gBACN,IAAI;YACN,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,gDAAiB,GAAjB,UAAkB,KAAK,EAAC,MAAM,EAAC,UAAU,EAAC,KAAK;QAC7C,EAAE,EAAC,KAAK,KAAG,IAAI,CAAC,EAAC;YACf,oEAAoE;YACpE,QAAQ,CAAC,KAAK,CAAC,yDAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC;QACD,IAAI,CACJ,CAAC;YACC,IAAI,cAAc,GAAG,eAAe,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,EAAC,cAAc,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC/D,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,IAAE,IAAI,CAAC,CACxB,CAAC;oBACC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnC,CAAC;gBACD,IAAI,EAAC;oBACH,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,sCAAO,GAAP;QAEE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;YACpD,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACrF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClF,CAAC;QACD,iCAAiC;IACnC,CAAC;IAED,+CAAgB,GAAhB,UAAiB,KAAK,EAAC,MAAM,EAAC,UAAU,EAAC,KAAK;QAA9C,iBAsCC;QArCC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC;QACrC,IAAI,CAAC;YACH,IAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YACzE,EAAE,EAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAC;gBACvD,iEAAiE;gBACjE,QAAQ,CAAC,KAAK,CAAC,yDAAY,CAAC,MAAM,CAAC,WAAW,GAAC,UAAU,CAAC,CAAC;gBAC3D,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,MAAM,CAAC;YACT,CAAC;YACD,IAAI,MAAM,GAAG;gBACX,aAAa,EAAG,UAAU;gBAC1B,kBAAkB,EAAG,KAAK;gBAC1B,QAAQ,EAAG,GAAG,CAAC,MAAM;gBACrB,SAAS,EAAG,GAAG,CAAC,OAAO;gBACvB,YAAY,EAAG,GAAG,CAAC,UAAU;aAC9B,CAAC;YACF,EAAE,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAClD,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;gBACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;gBACb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAClD,EAAE,EAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,EAAC;wBACtC,GAAG,GAAG,CAAC,CAAC;oBACV,CAAC;gBACH,CAAC;gBACD,EAAE,EAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAC;oBACpB,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBACpC,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAClD,CAAC;gBACD,IAAI,EAAC;oBACH,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClC,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,EAAE;QACJ,CAAC;IACH,CAAC;IAjPU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAO2B,sDAAM,EAAe,8DAAc;YACzC,0EAAe,EAAc,0DAAW;OAPlD,oBAAoB,CAkPhC;IAAD,2BAAC;CAAA;AAlPgC;;;;;;;;;;;;ACZjC,mB;;;;;;;;;;;ACAA,+SAA+S,wNAAwN,sBAAsB,0OAA0O,0DAA0D,oGAAoG,KAAK,WAAW,6fAA6f,4iBAA4iB,eAAe,iK;;;;;;;;;;;;;;;;;;;;;;;;;;ACA37D;AACW;AACC;AAU9D;IAKE,yBAAmB,WAA4B,EAAS,aAA8B;QAAnE,gBAAW,GAAX,WAAW,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAiB;QAH/E,sBAAiB,GAAY,KAAK,CAAC,cAAc,CAAC,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC/F,eAAU,GAAwB,EAAE,CAAC;IAE8C,CAAC;IAE3F,kCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,qCAAW,GAAX;QACE,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,CAAC;IAC5C,CAAC;IAED;;OAEG;IACH,uCAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,aAAG;YAC/C,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,2CAAiB,GAAjB,UAAkB,UAAU;QAC1B,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAClD,4EAA4E;QAC5E,0DAA0D;QAC1D,qDAAqD;QACrD,MAAM;IACR,CAAC;IAED;;;OAGG;IACH,6CAAmB,GAAnB,UAAoB,OAAgB;QAClC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,kBAAkB,GAAG,OAAO,CAAC;IACvE,CAAC;IAED;;OAEG;IACH,0CAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;IACnE,CAAC;IApDU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAMgC,0EAAe,EAAwB,2EAAe;OAL3E,eAAe,CAsD3B;IAAD,sBAAC;CAAA;AAtD2B;;;;;;;;;;;;ACZ5B,mB;;;;;;;;;;;ACAA,2EAA2E,sBAAsB,+CAA+C,WAAW,yB;;;;;;;;;;;;;;;;;;;;;;;;;ACAlG;AACY;AAOrE;IAEE,8BAAmB,WAA4B;QAA5B,gBAAW,GAAX,WAAW,CAAiB;IAAI,CAAC;IAGpD,uCAAQ,GAAR;IACA,CAAC;IAHQ;QAAR,2DAAK,EAAE;;2DAAe;IAHZ,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAGgC,0EAAe;OAFpC,oBAAoB,CAQhC;IAAD,2BAAC;CAAA;AARgC;;;;;;;;;;;;ACRjC,mB;;;;;;;;;;;ACAA,iHAAiH,YAAY,6HAA6H,YAAY,2CAA2C,YAAY,aAAa,cAAc,SAAS,iIAAiI,qM;;;;;;;;;;;;;;;;;;;;;;;;ACAnZ;AAO/E;IAWE;QAVA,oCAAoC;QAC1B,oBAAe,GAAI,IAAI,0DAAY,EAAE,CAAC;QAKxC,kBAAa,GAAQ;YAC3B,KAAK,EAAG,yBAAyB;SAClC,CAAC;QACK,eAAU,GAAG,EAAE,CAAC;IACP,CAAC;IAEjB,mCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC;IAEH,CAAC;IACD;;;;OAIG;IACH,2CAAgB,GAAhB;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED;;;;OAIG;IACH,wCAAa,GAAb;QACE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAjCS;QAAT,4DAAM,EAAE;;6DAAuC;IAEvC;QAAR,2DAAK,EAAE;;qDAAiB;IAEhB;QAAR,2DAAK,EAAE;;wDAAoB;IANjB,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,gBAAgB,CAoC5B;IAAD,uBAAC;CAAA;AApC4B;;;;;;;;;;;;ACP7B,mB;;;;;;;;;;;ACAA,6EAA6E,mCAAmC,u3EAAu3E,sIAAsI,oNAAoN,mQ;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/tF;AAC5B;AACE;AAUxE;IAEE,0BAAmB,WAA4B,EAAS,aAA6B,EAAU,WAAuB;QAAnG,gBAAW,GAAX,WAAW,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAY;IAAI,CAAC;IAE3H,mCAAQ,GAAR;IACA,CAAC;IAED,sCAAW,GAAX,UAAY,GAAG;IAEf,CAAC;IAED,qCAAU,GAAV;QACE,IAAI,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,OAAO,GAAG,wBAAwB,CAAC;QACvC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YACjC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;gBACL,EAAE,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,aAAG;oBACnC,IAAI,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;oBAClC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACP,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;;;OAOG;IAEI,kCAAO,GAAd,UAAe,KAAiB,EAAE,aAA0B;QAC1D,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC;QACtD,EAAE,CAAC,CAAC,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC;QACT,CAAC;QACD,IAAI,EAAC;YACH,IAAI,sBAAsB,GAAG,SAAS,CAAC;YACvC,IAAI,oBAAoB,GAAG,cAAc,CAAC;YAC1C;;;eAGG;YACH,IAAI,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YACnD,EAAE,EAAC,SAAS,CAAC,OAAO,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,IAAI,SAAS,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAE,CAAC,EAAC;gBAClG,MAAM,CAAC;YACT,CAAC;QACH,CAAC;QACD,IAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC7E;;WAEG;QACH,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACnB,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAC;gBACjC,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,KAAK,CAAC;YACzC,CAAC;QACH,CAAC;QAID,IAAI,EAAC;YACH,IAAI,sBAAsB,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;YAChF,IAAI,mBAAiB,GAAW,KAAK,CAAC;YACtC,IAAI,iBAAe,GAAU,aAAa,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAChE,sBAAsB,CAAC,OAAO,CAAC,UAAS,OAAO;gBAC7C,EAAE,EAAC,iBAAe,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC;oBACxC,mBAAiB,GAAG,IAAI,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC;YACH;;;eAGG;YACH,EAAE,EAAC,mBAAiB,CAAC,EAAC;gBACpB,MAAM,CAAC;YACT,CAAC;YACD,IAAI,EAAC;gBACH,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,KAAK,CAAC;YACzC,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,sCAAW,GAAX,UAAY,OAAc;QACxB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,EAAC,OAAO,IAAI,WAAW,CAAC,EAAC;YACzB;;;;;;;;;;;;;;;;;;;;;;;;eAwBG;QACL,CAAC;IACH,CAAC;IAED,wCAAa,GAAb;QACE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAxFD;QADC,kEAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;;yCACtC,UAAU,EAAiB,WAAW;;mDAiD3D;IAlFU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAGgC,0EAAe,EAAuB,2EAAe,EAAuB,wDAAU;OAF3G,gBAAgB,CA2H5B;IAAD,uBAAC;CAAA;AA3H4B;;;;;;;;;;;;ACZ7B,sBAAsB,yBAAyB,KAAK,YAAY,kBAAkB,KAAK,C;;;;;;;;;;;ACAvF,shBAAshB,yCAAyC,2CAA2C,0CAA0C,uMAAuM,0CAA0C,2CAA2C,yCAAyC,oGAAoG,yCAAyC,4CAA4C,0CAA0C,0LAA0L,kIAAkI,sBAAsB,aAAa,YAAY,WAAW,WAAW,yKAAyK,sBAAsB,mBAAmB,cAAc,gBAAgB,cAAc,mFAAmF,mBAAmB,+BAA+B,oBAAoB,gKAAgK,eAAe,gS;;;;;;;;;;;;;;;;;;;;;;;;;;ACAjlE;AACgB;AACJ;AAQ9D;IAQE,+BAAmB,WAA2B,EAAS,aAA8B;QAArF,iBAIC;QAJkB,gBAAW,GAAX,WAAW,CAAgB;QAAS,kBAAa,GAAb,aAAa,CAAiB;QAJ9E,SAAI,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC;QACpD,UAAK,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC;QACtD,kBAAa,GAAG,CAAC,CAAE;QAGzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACjE,KAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,wCAAQ,GAAR;QACC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEA,yDAAyB,GAAzB;QACC,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAM,MAAM,GAAQ,EAAC,MAAM,EAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAC,CAAC;QAC/E,EAAE,CAAC,WAAW,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzD,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1D,EAAE,CAAC,cAAc,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAgB,GAAhB,UAAiB,CAAC,EAAC,MAAM;QACxB,wBAAwB;QACxB,kEAAkE;QAClE,SAAS;QACT,kEAAkE;QAClE,IAAI;IACL,CAAC;IAED,qDAAqB,GAArB,UAAsB,CAAC;QACtB,4GAA4G;IAC7G,CAAC;IAEA,0CAAU,GAAV;QACC,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjH,sEAAsE;QACtE,IAAM,MAAM,GAAQ,EAAE,KAAK,EAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAG,KAAK,EAAC,CAAC;QAEnE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACpD,IAAM,IAAI,GAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,EACrD,KAAK,GAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAEtD,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1H,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChI,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAU,GAAV;IAEA,CAAC;IAzDU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAS+B,0EAAe,EAAwB,2EAAe;OAR1E,qBAAqB,CA2DjC;IAAD,4BAAC;CAAA;AA3DiC;;;;;;;;;;;;ACVlC,yBAAyB,6BAA6B,KAAK,C;;;;;;;;;;;ACA3D,oFAAoF,sBAAsB,+iDAA+iD,0CAA0C,4yBAA4yB,0CAA0C,mXAAmX,+HAA+H,iCAAiC,kJAAkJ,iCAAiC,gDAAgD,iCAAiC,mDAAmD,qDAAqD,gaAAga,0CAA0C,suBAAsuB,0CAA0C,gQAAgQ,0CAA0C,0PAA0P,uBAAuB,05BAA05B,msCAAmsC,0CAA0C,2FAA2F,iFAAiF,SAAS,cAAc,UAAU,iBAAiB,yFAAyF,kBAAkB,qrBAAqrB,6GAA6G,0BAA0B,yCAAyC,iBAAiB,+BAA+B,s1CAAs1C,2DAA2D,giBAAgiB,8F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt4U;AACqB;AAC1B;AACK;AACC;AAEhB;AACW;AAUzD;IAwBE,uBAAmB,MAAc,EAAS,KAAqB,EACtD,WAA4B,EAAS,aAA8B,EAAS,EAAe;QADjF,WAAM,GAAN,MAAM,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QACtD,gBAAW,GAAX,WAAW,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAiB;QAAS,OAAE,GAAF,EAAE,CAAa;QArB7F,iBAAY,GAAG,IAAI,CAAC;QAGpB,iBAAY,GAAe,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAC1D,mCAAmC;QAE5B,UAAK,GAAQ;YAClB,OAAO,EAAU,IAAI,IAAI,EAAE;YAC3B,SAAS,EAAQ,CAAC;YAClB,cAAc,EAAG,EAAE;SACpB,CAAC;QAEK,oBAAe,GAAQ,IAAI,KAAK,EAAE,CAAC;QACnC,iBAAY,GAAQ,IAAI,KAAK,EAAE,CAAC;QAChC,eAAU,GAAQ,IAAI,KAAK,EAAE,CAAC;QAC9B,iBAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC;QACtD,oBAAe,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,mBAAmB,CAAC,CAAC;QAC7D,mBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,kEAAiB,GAAC,GAAG,CAAC,GAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAIuB,CAAC;IAE1G,gCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,EAAE,GAAG,IAAI,EACT,GAAG,GAAO;YACJ,KAAK,EAAgB,EAAE;YACvB,UAAU,EAAW,EAAE;YACvB,UAAU,EAAW,EAAE;YACvB,gBAAgB,EAAI,EAAE;YACtB,iBAAiB,EAAM,EAAE;YACzB,2BAA2B;YAC3B,OAAO,EAAc,EAAE;YACvB,cAAc,EAAO,EAAE;YACvB,cAAc,EAAO,EAAE;YACvB,kBAAkB,EAAE,CAAC;YACrB,mBAAmB,EAAI,CAAC;YACxB,0BAA0B;YAC1B,aAAa,EAAS,CAAC;YACvB,cAAc,EAAS,CAAC;YACxB,MAAM,EAAe,KAAK,CAAC,YAAY,CAAC,MAAM;YAC9C,kBAAkB,EAAG,IAAI;SAC1B,CAAC;QACR,EAAE,CAAC,aAAa,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAC7C,EAAE,CAAC,aAAa,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC3C,uCAAuC;QACvC,aAAa,CAAC,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;QACpD,EAAE,CAAC,aAAa,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;QAClG,EAAE,EAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,EAAC;YAC1B,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;QAC1C,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,iCAAS,GAAT;QACE,EAAE,EAAC,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,gCAAgC,CAAC,CAAC,EAAC;YAC3E,IAAI,CAAC,eAAe,CAAC,GAAG,GAAI,MAAM,CAAC,UAAU,CAAC,GAAG,uBAAuB,CAAC;YACzE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC9B,CAAC;QACD,EAAE,EAAC,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,oBAAoB,CAAC,CAAC,EAAC;YAC/D,IAAI,CAAC,YAAY,CAAC,GAAG,GAAI,MAAM,CAAC,UAAU,CAAC,GAAG,mBAAmB,CAAC;YAClE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAEzB,IAAI,CAAC,UAAU,CAAC,GAAG,GAAI,MAAM,CAAC,UAAU,CAAC,GAAG,iBAAiB,CAAC;YAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACzB,CAAC;QACD,EAAE,EAAC,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,wBAAwB,CAAC,CAAC,EAAC;YACnE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,GAAI,MAAM,CAAC,UAAU,CAAC,GAAG,kBAAkB,CAAC;YACpF,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;QAC9C,CAAC;IAEH,CAAC;IAED,gDAAwB,GAAxB;QACE,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,EAAC;YACvF,IAAI,CAAC,gBAAgB,GAAI,sDAAS,CAAC,MAAM,CAAC,kBAAkB,CAAC;QAC/D,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,gBAAgB,GAAG,sDAAS,CAAC,MAAM,CAAC,qBAAqB,CAAC;QACjE,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,2CAAmB,GAAnB;QACE,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,wCAAgB,GAAhB;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,sCAAc,GAAd;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAED,mDAA2B,GAA3B,UAA4B,OAAO,EAAE,UAAU;QAC7C,IAAM,YAAY,GAAO,KAAK,CAAC,cAAc,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;QACrB,IAAI,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,EACrD,cAAc,GAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,EAC1D,QAAQ,GAAG,CAAC,EACZ,SAAS,GAAG,YAAY,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,CAAC;QACnD;;WAEG;QACH,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,EAAC;YAC/E,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC;YAChD,EAAE,EAAC,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAC;gBACtC,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YAChD,CAAC;QACH,CAAC;QACD,IAAI,EAAC;YAAA,MAAM,CAAC;QAAA,CAAC;QAEb,EAAE,EAAC,cAAc,IAAI,EAAE,IAAI,cAAc,IAAI,OAAQ,CAAC,EAAC;YACrD,6CAA6C;YAC7C,QAAQ,CAAC,KAAK,CAAC,sDAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAChD,MAAM,CAAC;QACT,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAC,CAAC,CAAC,CACtC,CAAC;YACC,QAAQ,CAAC,KAAK,CAAC,sDAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;YAC/C,MAAM,CAAC;QACT,CAAC;QACD,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,eAAe,CAAC,EAAC;YAC3C,QAAQ,CAAC,KAAK,CAAC,sDAAS,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;YACtD,MAAM,CAAC;QACX,CAAC;QACD,gEAAgE;QAChE,yEAAyE;QACzE,0DAA0D;QAC1D,cAAc;QACd,IAAI;QAEJ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEvD,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QAChF,EAAE,EAAC,CAAC,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,iCAAiC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,EAAC;YAChJ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC;QACD,OAAO,CAAC,IAAI,EAAE,CAAC;IACjB,CAAC;IAED;;OAEG;IACH,0CAAkB,GAAlB,UAAmB,KAAK;QACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,KAAK,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;IAED,uCAAuC;IACvC,8CAAsB,GAAtB;QACE,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAC,yCAAyC,CAC5F,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CAAC;QACjE,EAAE,EAAE,eAAe,GAAG,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,UAAW,CAAC,EAAC;YACjF,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAAA,IAAI,EAAC;YACJ,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,2CAA2C;IAC3C,2CAAmB,GAAnB,UAAoB,CAAC;QACnB,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;QACpC,EAAE,EAAC,MAAM,CAAC,EAAC;YACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC5B,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC;IACH,CAAC;IAED,yCAAiB,GAAjB;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,WAAW,EAAU,CAAC,EAAC,KAAK,EAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YACnK,aAAa,EAAQ,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,cAAc,EAAO,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,aAAa,EAAQ,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,cAAc,EAAO,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,WAAW,EAAU,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,eAAe,EAAM,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,mBAAmB,EAAM,CAAC,EAAC,KAAK,EAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,QAAQ,EAAG,IAAI,EAAC,CAAC;YACxF,aAAa,EAAU,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3E,YAAY,EAAU,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1E,YAAY,EAAS,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,aAAa,EAAQ,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzE,gBAAgB,EAAM,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1E,gBAAgB,EAAM,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1E,oBAAoB,EAAG,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAChG,kBAAkB,EAAG,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,CAAC;YACpD,YAAY,EAAS,CAAC,EAAC,KAAK,EAAG,EAAE,EAAE,QAAQ,EAAG,IAAI,EAAC,CAAC;YACpD,mBAAmB,EAAE,CAAC,EAAC,KAAK,EAAG,KAAK,EAAE,QAAQ,EAAG,IAAI,EAAC,CAAC;YACvD,mBAAmB,EAAE,CAAC,EAAC,KAAK,EAAG,KAAK,EAAE,QAAQ,EAAG,IAAI,EAAC,CAAC;SACxD,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAClF,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,mCAAQ;aAAZ;YACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QACrD,CAAC;;;OAAA;IAED;;OAEG;IACH,uCAAe,GAAf;QAAA,iBAKC;QAJC,IAAI,MAAM,GAAG,EAAC,SAAS,EAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAC,CAAC;QACzE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAChD,KAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,qCAAa,GAAb;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC;QAC3D,EAAE,EAAC,YAAY,IAAI,IAAI,IAAI,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAC;YACxD,wBAAwB;QAC1B,CAAC;QAAA,IAAI,EAAC;YACJ,yBAAyB;QAC3B,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,mCAAW,GAAX,UAAY,GAAW;QACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAM,aAAa,GAAW,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,EACnF,aAAa,GAAa,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAC7E,aAAa,GAAa,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAC7E,SAAS,GAAe,aAAa,GAAG,GAAG,EAC3C,WAAW,GAAY,UAAU,CAAC,SAAS,CAAC,CAAC;QAEjD,sDAAsD;QACtD,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACxG,wBAAwB;IAC1B,CAAC;IAEH;;;SAGK;IACH,oCAAY,GAAZ,UAAa,GAAG;QACd,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAM,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC;QAChF,EAAE,CAAC,CAAC,CAAC,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9B,kDAAkD;YAClD,QAAQ,CAAC,KAAK,CAAC,sDAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAM,SAAS,GAAW,aAAa,GAAG,GAAG,EAC3C,aAAa,GAAW,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAC3E,aAAa,GAAW,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAC3E,WAAW,GAAU,UAAU,CAAC,SAAS,CAAC,CAAC;YAC7C,sDAAsD;YACtD,IAAI,CAAC,aAAa,CAAC,2BAA2B,CAAC,aAAa,EAAE,aAAa,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACxG,wBAAwB;QAC1B,CAAC;IACH,CAAC;IAED,kCAAU,GAAV,UAAW,WAAmB;QAC5B,IAAI,IAAwB,CAAC;QAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE,CAAC;YAC/E,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjC,qDAAqD;gBACrD,MAAM,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACvD,CAAC;QACH,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC;IACjB,CAAC;IAED,0CAAkB,GAAlB;QAAA,iBAiJC;QAhJC,EAAE,EAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,EAAC;YAC5B,aAAa;QAEf,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,IAAE,GAAG,IAAI,CAAC;YACd,IAAI,aAAa,GAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;YACvD,IAAI,UAAU,GAAiB,aAAa,CAAC,YAAY,CAAC;YACxD,uDAAuD;YACvD,gEAAgE;YAChE,2DAA2D;YAC3D,QAAQ,GAAe,aAAa,CAAC,mBAAmB,CAAC,EAAC,yDAAyD;YACnH,YAAY,GAAW,IAAI,CAAC,WAAW,EAAE,EACzC,SAAS,GAAc,IAAI,CAAC,gBAAgB,EAAE,EAC9C,IAAI,GAAmB;gBACrB,UAAU,EAAQ,aAAa,CAAC,YAAY,CAAC;gBAC7C,MAAM,EAAY,IAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM;gBAC9D,gBAAgB,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa;aAQnD,CAAC;YACE,sDAA+E,EAA7E,qBAAa,EAAE,oBAAY,CAAmD;YACpF,IAAI,QAAQ,GAAO;gBACjB,aAAa,EAAQ,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;gBAC9E,eAAe,EAAM,aAAa,CAAC,cAAc,CAAC;gBAClD,aAAa,EAAQ,aAAa,CAAC,aAAa,CAAC;gBACjD,mBAAmB,EAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;gBAClF,oBAAoB,EAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACvF,eAAe,EAAM,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnG,WAAW,EAAU,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5H,aAAa,EAAU,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,GAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG;gBACxG,YAAY,EAAU,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,GAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG;gBACtG,kBAAkB,EAAG,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnI,cAAc,EAAO,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtE,WAAW,EAAU,aAAa,CAAC,WAAW,CAAC;gBAC/C,cAAc,EAAO,YAAY;gBACjC,eAAe,EAAM,aAAa;gBAClC,cAAc,EAAO,YAAY;gBACjC,UAAU,EAAW,EAAE,GAAC,SAAS;aAClC,CAAC;YACF,iDAA+E,EAA7E,qBAAa,EAAE,oBAAY,CAAmD;YAChF,IAAI,QAAQ,GAAO;gBACjB,aAAa,EAAQ,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;gBAC9E,eAAe,EAAM,aAAa,CAAC,cAAc,CAAC;gBAClD,YAAY,EAAS,aAAa,CAAC,YAAY,CAAC;gBAChD,mBAAmB,EAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;gBAClF,oBAAoB,EAAG,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBACvF,eAAe,EAAM,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnG,WAAW,EAAU,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5H,aAAa,EAAU,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,GAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG;gBACxG,YAAY,EAAU,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE,GAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG;gBACtG,kBAAkB,EAAG,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnI,cAAc,EAAO,aAAa,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtE,WAAW,EAAU,aAAa,CAAC,WAAW,CAAC;gBAC/C,cAAc,EAAO,YAAY;gBACjC,eAAe,EAAM,aAAa;gBAClC,cAAc,EAAO,YAAY;gBACjC,UAAU,EAAW,EAAE,GAAC,SAAS;aAClC,CAAC;YACJ,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACpC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAEpC,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAE1C,iDAAiD;YACjD,EAAE,EAAC,IAAI,CAAC,EAAC;gBACP,EAAE,EAAC,UAAU,IAAI,UAAU,CAAC,EAAC;oBAC3B,IAAE,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;oBACjF,IAAE,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAE,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;oBAC/E,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;oBAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;gBAC9B,CAAC;gBAAA,IAAI,CAAC,EAAE,EAAC,UAAU,IAAI,MAAM,CAAC,EAAC;oBAC7B,IAAE,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;oBACjF,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;gBAC9B,CAAC;gBAAA,IAAI,EAAC;oBACJ,IAAE,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAE,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;oBAC/E,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC;gBAE9B,CAAC;gBACD,yBAAyB;gBAEzB,+CAA+C;gBAC/C,IAAI,MAAM,GAAG;oBACX,SAAS,EAAG,IAAI;oBAChB,gBAAgB,EAAG,IAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK;oBAC9D,OAAO,EAAG,IAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,cAAc;iBAC/D,CAAC;gBACF,IAAE,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACtC,IAAE,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;oBAC7C,IAAI,SAAS,GAAM,IAAE,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,EAC1C,UAAU,GAAK,IAAE,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC;oBAClD,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,EAAC;wBACzB,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;wBACvC,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,GAAG,GAAG,CAAC,aAAa,CAAC,CAAC;wBAC5D,KAAI,CAAC,wBAAwB,EAAE,CAAC;wBAChC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC7E,IAAI,qBAAqB,GAAsB,IAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC9F,EAAE,EAAC,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAC;gCAC7C,IAAI,UAAU,GAAG,qBAAqB,CAAC,MAAM,CAAC,CAAC;gCAC/C,IAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;4BAChD,CAAC;wBACH,CAAC;wBACD,KAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACnC,CAAC;oBAAA,IAAI,EAAC;wBACJ,KAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACjC,CAAC;oBACD,IAAE,CAAC,WAAW,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBACzC,IAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;oBAChB,IAAE,CAAC,eAAe,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;gBAEC,6CAA6C;gBAC7C,eAAe;gBACf,oCAAoC;gBACpC,qFAAqF;gBACrF,uFAAuF;gBACvF,sCAAsC;gBACtC,uFAAuF;gBACvF,aAAa;gBACb,qFAAqF;gBACrF,QAAQ;gBAEJ,+CAA+C;gBAC/C,iBAAiB;gBACjB,sBAAsB;gBACtB,oEAAoE;gBACpE,4DAA4D;gBAC5D,KAAK;gBACL,yCAAyC;gBAG3C,SAAS;gBACT,iBAAiB;gBACjB,IAAI;gBACN,KAAK;YACT,CAAC;QAEH,CAAC;;IACH,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,WAAW,GAAG,IAAI,IAAI,EAAG,EACzB,IAAI,GAAI,WAAW,CAAC,WAAW,EAAE,EACjC,KAAK,GAAG,EAAE,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EACzC,GAAG,GAAK,EAAE,GAAG,WAAW,CAAC,UAAU,EAAE,EACrC,IAAI,GAAI,EAAE,GAAG,WAAW,CAAC,QAAQ,EAAE,EACnC,GAAG,GAAK,EAAE,GAAG,WAAW,CAAC,UAAU,EAAE,EACrC,GAAG,GAAK,EAAE,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;QACtC,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACjD,GAAG,GAAK,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC3C,GAAG,GAAK,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/C,IAAI,IAAI,GAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE;QACxE,MAAM,CAAC,IAAI,CAAC;IAClB,CAAC;IAED,wCAAgB,GAAhB;QACE,IAAI,WAAW,GAAG,IAAI,IAAI,EAAG,EACzB,IAAI,GAAI,WAAW,CAAC,WAAW,EAAE,EACjC,KAAK,GAAG,EAAE,GAAG,CAAC,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EACzC,GAAG,GAAK,EAAE,GAAG,WAAW,CAAC,UAAU,EAAE,EACrC,IAAI,GAAI,EAAE,GAAG,WAAW,CAAC,QAAQ,EAAE,EACnC,GAAG,GAAK,EAAE,GAAG,WAAW,CAAC,UAAU,EAAE,EACrC,GAAG,GAAK,EAAE,GAAG,WAAW,CAAC,UAAU,EAAE,CAAC;QACtC,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACjD,GAAG,GAAK,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC3C,GAAG,GAAK,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC/C,IAAI,IAAI,GAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAE,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE;QACxE,MAAM,CAAC,IAAI,CAAC;IAClB,CAAC;IAED,8CAAsB,GAAtB,UAAuB,UAAU,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW;QAClE,IAAI,YAAY,EACZ,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC;QAC1C,EAAE,EAAC,UAAU,IAAI,KAAK,IAAI,UAAU,IAAI,MAAM,CAAC,EAAC;YAC5C,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC;YACjD,EAAE,EAAC,UAAU,IAAI,MAAM,CAAC,EAAC;gBACvB,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC;YACnD,CAAC;YACD,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC;QACL,IAAI,GAAG,GAAO;YACV,KAAK,EAAe,UAAU,GAAE,MAAM,GAAE,MAAM;YAC9C,IAAI,EAAgB,SAAS;YAC7B,6CAA6C;YAC7C,YAAY,EAAQ,YAAY;YAChC,YAAY,EAAQ,YAAY;YAChC,aAAa,EAAO,EAAE;YACtB,UAAU,EAAU,UAAU;YAC9B,iBAAiB,EAAI,YAAY;YACjC,aAAa,EAAO,MAAM;YAC1B,UAAU,EAAU,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACrD,OAAO,EAAa,CAAC,WAAW,IAAI,CAAC,IAAI,UAAU,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,YAAY,EAAQ,WAAW;SAChC,CAAC;QACF,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,IAAI,EAAE,CAAC,EAAC;YAC/C,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,IAAI,UAAU,CAAC,EAAC;gBAC5C,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAClD,CAAC;YAAA,IAAI,CAAC,EAAE,EAAC,UAAU,IAAI,KAAK,IAAI,UAAU,IAAI,MAAM,CAAC,EAAC;gBAClD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAClD,CAAC;QACL,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACnD,CAAC;IAED;;;;;OAKG;IACH,qCAAa,GAAb,UAAc,SAAoB;QAAlC,iBAWC;QAVC,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;YAC3C,IAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,OAAO,YAAY,0DAAW,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,YAAY,wDAAS,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,8CAAsB,GAAtB,UAAuB,KAAK;QAC1B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAa,GAAb,UAAc,KAAK;QAEjB,IAAI,QAAQ,GAAM,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC;QACxD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAC7F,CAAC;IAED,sCAAc,GAAd,UAAe,aAAa,EAAE,QAAQ;QACpC,IAAI,EAAE,GAAG,IAAI,CAAC;QACb,2CAA2C;QAC5C,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,EAAE,EAAC,QAAQ,KAAK,MAAM,CAAC,EAAC;YACtB,GAAG,GAAG,4DAA4D,CAAC;YACnE,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC;QAC5D,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,QAAQ,KAAK,OAAO,CAAC,EAAC;YAC5B,GAAG,GAAG,2DAA2D,CAAC;QACpE,CAAC;QACD,EAAE,EAAC,WAAW,CAAC,CACf,CAAC;YACC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;gBACpB,EAAE,CAAC,mBAAmB,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;gBAC3C,MAAM,CAAC;YACT,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,2CAAmB,GAAnB,UAAoB,aAAa,EAAE,GAAG;QACrC,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACvD,EAAE,EAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CACvB,CAAC;gBACC,EAAE,CAAC,eAAe,GAAG,GAAG,CAAC;gBACzB,EAAE,CAAC,WAAW,CAAC,iBAAiB,GAAG,GAAG,CAAC;gBACvC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YACxC,CAAC;YACD,IAAI,EAAC;gBACH,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YACtC,CAAC;YACD,aAAa,CAAC,IAAI,EAAE,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAU,GAAV;QACE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;IAC7F,CAAC;IACD,yCAAiB,GAAjB;QACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;QAC1C,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IA7kBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAyB2B,sDAAM,EAAgB,8DAAc;YACzC,0EAAe,EAAwB,2EAAe,EAAa,0DAAW;OAzBzF,aAAa,CA8kBzB;IAAD,oBAAC;CAAA;AA9kByB;;;;;;;;;;;;ACjB1B,mB;;;;;;;;;;;ACAA,8LAA8L,qCAAqC,eAAe,uCAAuC,4CAA4C,cAAc,sBAAsB,yCAAyC,KAAK,sEAAsE,iBAAiB,sBAAsB,0CAA0C,KAAK,uEAAuE,iMAAiM,gGAAgG,4IAA4I,qGAAqG,4FAA4F,yCAAyC,0CAA0C,8DAA8D,wCAAwC,yCAAyC,8DAA8D,+FAA+F,wMAAwM,mHAAmH,qHAAqH,gIAAgI,gEAAgE,WAAW,8NAA8N,WAAW,kcAAkc,oBAAoB,0DAA0D,sBAAsB,SAAS,YAAY,WAAW,WAAW,+MAA+M,sBAAsB,eAAe,cAAc,eAAe,cAAc,kIAAkI,WAAW,2CAA2C,4CAA4C,2GAA2G,WAAW,yCAAyC,2CAA2C,uGAAuG,8BAA8B,sCAAsC,WAAW,+CAA+C,iBAAiB,uCAAuC,yHAAyH,KAAK,gEAAgE,MAAM,kMAAkM,gBAAgB,+HAA+H,8BAA8B,sCAAsC,WAAW,+CAA+C,iBAAiB,qCAAqC,2HAA2H,2BAA2B,iEAAiE,MAAM,8LAA8L,gBAAgB,6QAA6Q,u8CAAu8C,4EAA4E,wFAAwF,2EAA2E,iK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApgO;AACI;AACC;AACrB;AAUzC;IASE,iCAAmB,WAA4B,EAAS,aAA8B;QAAtF,iBAKC;QALkB,gBAAW,GAAX,WAAW,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAiB;QAN/E,UAAK,GAAQ;YAClB,OAAO,EAAU,IAAI,IAAI,EAAE;YAC3B,SAAS,EAAQ,CAAC;YAClB,cAAc,EAAG,EAAE;SACpB,CAAC;QAGE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACrE,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC9C,KAAI,CAAC,yBAAyB,EAAE,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,2DAAyB,GAAzB;QACE,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAM,MAAM,GAAQ,EAAC,MAAM,EAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAC,CAAC;QAC/E,EAAE,CAAC,WAAW,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzD,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1D,EAAE,CAAC,OAAO,EAAE,CAAC;YAEb,0FAA0F;YAC1F,UAAU,CAAC;gBACT,IAAM,EAAE,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACjE,IAAM,OAAO,GAAG,oDAAY,CAAC,EAAE,EAAE;wBAC/B,IAAI,EAAE,KAAK;wBACX,WAAW,EAAE,gBAAgB;wBAC7B,QAAQ,EAAE,IAAI;wBACd,SAAS,EAAE,GAAG;qBACf,CAAC,CAAC;oBACH,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE,EAAE;wBAClC,EAAE,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;oBAC9B,CAAC,CAAC,CAAC;gBACL,CAAC;YACH,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAO,GAAP;QACE,IAAM,EAAE,GAAG,IAAI,CAAC;QACnB,8BAA8B;QAC3B,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QACrC,EAAE,CAAC,UAAU,EAAE,CAAC;QAEhB,0CAA0C;QAC1C,EAAE,CAAC,aAAa,CAAC,mBAAmB,GAAG,WAAW,CAAC;YACjD,EAAE,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrD,EAAE,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC;gBAC9B,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;gBACvB,EAAE,CAAC,UAAU,EAAE,CAAC;YAClB,CAAC;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED;;;;;;OAMG;IACH,gDAAc,GAAd,UAAe,IAAY,EAAE,EAAU;QACrC,IAAM,QAAQ,GAAW,IAAI,GAAG,CAAC,CAAC;QAClC,IAAM,MAAM,GAAW,EAAE,GAAG,CAAC,CAAC;QAC9B,IAAM,eAAe,GAAQ,EAAE,CAAC;QAChC,IAAM,qBAAqB,GAA8B,EAAE,CAAC;QAE5D,8BAA8B;QAC9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/E,IAAM,IAAI,GAAuB,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClF,oCAAoC;YACpC,EAAE,EAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;gBACb,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACnB,eAAe,CAAC,IAAI,CAAC,EAAC,EAAE,EAAG,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,EAAG,EAAE,EAAC,CAAC,CAAC;oBAC5D,qBAAqB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;gBAEvC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;oBACtB,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;oBAChC,cAAc;gBAChB,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC;oBACrC,eAAe,CAAC,IAAI,CAAC,EAAC,EAAE,EAAG,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,EAAG,CAAC,EAAC,CAAC,CAAC;oBAC3D,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACxC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;oBACpB,cAAc;oBACd,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAClC,CAAC;YAEH,CAAC;YAED,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACnB,eAAe,CAAC,IAAI,CAAC,EAAC,EAAE,EAAG,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,EAAG,EAAE,EAAC,CAAC,CAAC;oBAC5D,qBAAqB,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;gBACvC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;oBACpB,cAAc;oBACd,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAClC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;oBACtB,eAAe,CAAC,IAAI,CAAC,EAAC,EAAE,EAAG,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,EAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC;oBACjE,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACxC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;oBACrC,eAAe,CAAC,IAAI,CAAC,EAAC,EAAE,EAAG,IAAI,CAAC,IAAI,CAAC,EAAE,aAAa,EAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC;oBACjE,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBACxC,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAC;oBACrB,cAAc;oBACd,qBAAqB,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;gBAClC,CAAC;YACH,CAAC;QACH,CAAC;QACD,mFAAmF;QACnF,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,GAAG,qBAAqB,CAAC;QAEtE,kDAAkD;QAClD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7D,EAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACnB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAU,GAAV;QACE,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjH,IAAM,MAAM,GAAQ,EAAE,KAAK,EAAG,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,EAAG,KAAK,EAAC,CAAC;QAEnE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACpD,IAAM,IAAI,GAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,EACrD,KAAK,GAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC;YAEtD,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1H,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9H,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7E,IAAM,IAAI,GAAuB,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAChF,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAM,UAAU,GAAW,IAAI,CAAC,MAAM,CAAC,CAAC;oBACxC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;OAMG;IACH,mDAAiB,GAAjB,UAAkB,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK;QAChD,IAAM,cAAc,GAAG,sBAAsB,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC;QAEjE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,UAAU,GAAG,EAAE,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,UAAU,GAAG,EAAE,CAAC;QAExD,IAAM,IAAI,GAAG,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC;QAC/E,kCAAkC;QAClC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/E,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;oBACzE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;oBACrE,KAAK,CAAC;gBACR,CAAC;YACH,CAAC;YACD,eAAe;YACf,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClC,2CAA2C;YAC3C,0BAA0B;YAC1B,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QAClD,CAAC;QAED,IAAI,CAAC,CAAC;YACJ,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;YACb,IAAI,kBAAkB,GAAG,CAAC,CAAC;YAC3B,qDAAqD;YACrD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC/E,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;oBAC7B,GAAG,GAAG,CAAC,CAAC;oBACR,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;oBACrE,SAAS;gBACX,CAAC;gBACD,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,CAAC,CAAC,CAAC;oBACzD,kBAAkB,EAAE,CAAC;gBACvB,CAAC;YACH,CAAC;YACD,0FAA0F;YAC1F,EAAE,EAAC,kBAAkB,IAAI,CAAC,CAAC,EAAC;gBAC1B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAChD,CAAC;YACD,gBAAgB;YAChB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAEnC,sCAAsC;YACtC,IAAM,GAAG,GAAQ;gBACf,GAAG,EAAG,IAAI;gBACV,GAAG,EAAG,IAAI;gBACV,UAAU,EAAG,IAAI;gBACjB,UAAU,EAAG,IAAI;gBACjB,aAAa,EAAG,IAAI;gBACpB,sBAAsB;gBACtB,YAAY,EAAG,IAAI;gBACnB,SAAS,EAAG,EAAE;gBACd,SAAS,EAAG,CAAC;aACd,CAAC;YACF,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC1H,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;YAChE,CAAC;YACD,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC1H,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;YAChE,CAAC;YACD,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;YAE5H,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;YAC5E,OAAO,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YAC7E,+EAA+E;YAC/E,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QACtC,CAAC;IACH,CAAC;IA5OQ;QAAR,2DAAK,EAAE;;4DAAS;IAFN,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAUgC,0EAAe,EAAwB,2EAAe;OAT3E,uBAAuB,CAgPnC;IAAD,8BAAC;CAAA;AAhPmC;;;;;;;;;;;;ACbpC,qBAAqB,iBAAiB,EAAE,C;;;;;;;;;;;ACAxC,2cAA2c,wGAAwG,wGAAwG,qGAAqG,6GAA6G,sGAAsG,sGAAsG,4FAA4F,+FAA+F,4LAA4L,yDAAyD,iBAAiB,4LAA4L,sBAAsB,SAAS,YAAY,WAAW,qBAAqB,4EAA4E,WAAW,+BAA+B,mBAAmB,2BAA2B,mBAAmB,2BAA2B,oBAAoB,2BAA2B,iBAAiB,2BAA2B,wBAAwB,mGAAmG,sBAAsB,6OAA6O,iCAAiC,iCAAiC,iCAAiC,iCAAiC,iCAAiC,iCAAiC,uP;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhkF;AACW;AACC;AAO9D;IAEE,mCAAmB,WAA4B,EAAS,aAA8B;QAAtF,iBAOC;QAPkB,gBAAW,GAAX,WAAW,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAiB;QACrF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACpE,IAAI,MAAM,GAAG,EAAC,SAAS,EAAG,KAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAC,CAAC;YACzE,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC/C,KAAI,CAAC,WAAW,CAAC,gBAAgB,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,4CAAQ,GAAR;IACA,CAAC;IAED,gDAAY,GAAZ;QACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,WAAW,EAAE,eAAe,EAAE,4BAA4B,CAAC,CAAC;IAC9F,CAAC;IAhBU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAGgC,0EAAe,EAAwB,2EAAe;OAF3E,yBAAyB,CAkBrC;IAAD,gCAAC;CAAA;AAlBqC;;;;;;;;;;;;ACTtC,mB;;;;;;;;;;;ACAA,sLAAsL,+BAA+B,qGAAqG,yIAAyI,+HAA+H,8D;;;;;;;;;;;;;;;;;;;;;;;;;ACAzgB;AACI;AAS7D;IAEE,gCAAmB,WAA2B;QAA3B,gBAAW,GAAX,WAAW,CAAgB;IAAI,CAAC;IAGnD,yCAAQ,GAAR;IACA,CAAC;IAED,6CAAY,GAAZ,UAAa,QAAQ;QACpB,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,CAAC,kBAAkB,GAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC7C,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACvE,EAAE,EAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CACvB,CAAC;gBACC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YACxC,CAAC;YACD,IAAI,EAAC;gBACH,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;YACtC,CAAC;YACF,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAa,GAAb;QACC,IAAI,EAAE,GAAE,IAAI,CAAC;QACb,QAAQ,CAAC,OAAO,CAAC,iDAAiD,EAAC;YAClE,8BAA8B;YAC9B,EAAE,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACvD,EAAE,EAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CACvB,CAAC;oBACC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxC,CAAC;gBACD,IAAI,EAAC;oBACH,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtC,CAAC;gBACD,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,+CAAc,GAAd,UAAe,QAAQ;QACtB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;IAvCQ;QAAR,2DAAK,EAAE;;yDAAW;IAHR,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAG+B,0EAAe;OAFnC,sBAAsB,CA4ClC;IAAD,6BAAC;CAAA;AA5CkC;;;;;;;;;;;;ACVnC,mDAAmD,oBAAoB,sBAAsB,cAAc,aAAa,KAAK,uBAAuB,kBAAkB,mBAAmB,2CAA2C,KAAK,eAAe,sBAAsB,oBAAoB,gCAAgC,iBAAiB,kFAAkF,KAAK,sBAAsB,yBAAyB,wBAAwB,gCAAgC,mBAAmB,gCAAgC,gCAAgC,gCAAgC,gCAAgC,oBAAoB,0BAA0B,wBAAwB,0BAA0B,KAAK,oBAAoB,yBAAyB,yBAAyB,sCAAsC,uBAAuB,wCAAwC,KAAK,sBAAsB,oBAAoB,KAAK,kBAAkB,oBAAoB,0BAA0B,mBAAmB,mBAAmB,uBAAuB,KAAK,qBAAqB,sBAAsB,KAAK,oBAAoB,oBAAoB,0BAA0B,KAAK,cAAc,sBAAsB,kBAAkB,mBAAmB,8BAA8B,uBAAuB,KAAK,oBAAoB,oBAAoB,KAAK,eAAe,mBAAmB,4BAA4B,iBAAiB,4EAA4E,gCAAgC,6BAA6B,6BAA6B,6BAA6B,KAAK,eAAe,gCAAgC,6BAA6B,6BAA6B,6BAA6B,KAAK,sBAAsB,wBAAwB,wBAAwB,mBAAmB,kBAAkB,eAAe,gBAAgB,KAAK,qBAAqB,wBAAwB,uBAAuB,mBAAmB,iBAAiB,kBAAkB,aAAa,KAAK,qBAAqB,wBAAwB,uBAAuB,kBAAkB,kBAAkB,mBAAmB,cAAc,KAAK,C;;;;;;;;;;;ACA5tE,yGAAyG,oDAAoD,qHAAqH,sCAAsC,ufAAuf,YAAY,ykG;;;;;;;;;;;;;;;;;;;;;;;;ACGpyB;AAOvB;IA4CE,wBAAoB,OAAmB,EAAU,MAAc;QAA3C,YAAO,GAAP,OAAO,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAvCtD,aAAQ,GAAW,GAAG,CAAC;QACvB,cAAS,GAAW,GAAG,CAAC;QACxB,cAAS,GAAY,IAAI,CAAC;QAE1B,aAAQ,GAAY,IAAI,CAAC;QAGxB,UAAK,GAA0B,IAAI,0DAAY,EAAE,CAAC;IAiC5D,CAAC;IAzBD,sBAAI,oCAAQ;aAAZ;YACE,IAAI,GAAG,GAAG,WAAW,CAAC;YACtB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;YAC/B,CAAC;YACD,MAAM,CAAC,GAAG,CAAC;QACb,CAAC;;;OAAA;IAqBD,iCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACvC,CAAC;IAED,2CAAkB,GAAlB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC;YACnC,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;QACzC,CAAC;IACH,CAAC;IAED,0CAAiB,GAAjB;QAAA,iBASC;QARC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YACvE,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAElE,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,KAAK,CAAC,CAAC;YAClF,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAmB,GAAnB;QACE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1E,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAErE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9E,CAAC;IAGD,kCAAS,GAAT,UAAU,KAAK;QACb,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,oCAAW,GAAX,UAAY,KAAiB;QAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,kCAAS,GAAT;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,oCAAW,GAAX,UAAY,KAAiB;QAC3B,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,mCAAU,GAAV;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,6BAAI,GAAJ;QAAA,iBAUC;QATC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,UAAU,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YACrC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7C,CAAC;QACH,CAAC,EAAE,CAAC,CAAC,CAAC;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,6BAAI,GAAJ;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC;QAC5D,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;QAE9D,EAAE,CAAC,CAAC,YAAY,KAAK,CAAC,IAAI,aAAa,KAAK,CAAC,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;YACrD,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC;YACxD,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;YAC1D,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YACpD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5D,CAAC;QAED,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAU,GAAG,YAAY,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9D,IAAM,CAAC,GAAG,EAAE,CAAE,2DAA0D;QAExE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;IACpD,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAa,EAAE,KAAa;QACnC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzD,CAAC;IACH,CAAC;IAED,+BAAM,GAAN,UAAO,KAAa,EAAE,KAAa;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,IAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACpE,IAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAElE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,GAAG,MAAM,GAAG,IAAI,CAAC;YAClE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;YAEhE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IAED,gCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC;IAED,oCAAW,GAAX,UAAY,KAAa,EAAE,KAAa;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzD,CAAC;IAED,oCAAW,GAAX,UAAY,KAAa,EAAE,KAAa;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzD,CAAC;IAED,qCAAY,GAAZ,UAAa,KAAa,EAAE,KAAa;QACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACzD,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAa,EAAE,KAAa;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACxD,IAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAM,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;YACtC,IAAM,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC;YAChE,IAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;YAClE,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;YAChE,IAAM,QAAQ,GAAG,cAAc,GAAG,MAAM,CAAC;YACzC,IAAM,SAAS,GAAG,eAAe,GAAG,MAAM,CAAC;YAE3C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC7B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,GAAG,IAAI,CAAC;gBAC7D,CAAC;YACH,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtC,EAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC;oBAC7D,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,GAAG,MAAM,GAAG,IAAI,CAAC;oBAC1E,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;gBACxD,CAAC;YACH,CAAC;YAED,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;IACH,CAAC;IAED,kCAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC;IAED,uCAAc,GAAd;QACE,IAAM,YAAY,GAAG,MAAM,CAAC,WAAW,CAAC;QACxC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;QAC1E,CAAC;IACH,CAAC;IAED,yCAAgB,GAAhB;QACE,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAM,MAAM,GAAG,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;QACtD,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,KAAK;YACrC,IAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC;gBAC1B,MAAM,GAAG,YAAY,CAAC;YACxB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,uCAAc,GAAd;QACE,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QACzE,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,qCAAY,GAAZ,UAAa,EAAE,EAAE,GAAG;QAClB,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;QAChE,CAAC;QACD,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,oCAAW,GAAX,UAAY,KAAY;QACtB,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAED,uCAAc,GAAd,UAAe,KAAK;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;QACD,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3E,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC5E,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,CAAC;QACrE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;QACvE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,YAAY,CAAC;QAEvE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;QACpD,IAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC;QAC7G,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,eAAe,GAAG,UAAU,GAAG,KAAK,CAAC;QACjF,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;QAEtD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,uCAAc,GAAd;QACI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACtE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAC5E,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAC9E,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;QAE9E,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,kCAAS,GAAT;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACvC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;IACH,CAAC;IA9TQ;QAAR,2DAAK,EAAE;;sDAAoB;IACnB;QAAR,2DAAK,EAAE;;iDAAY;IACX;QAAR,2DAAK,EAAE;;kDAAgB;IACf;QAAR,2DAAK,EAAE;;oDAAwB;IACvB;QAAR,2DAAK,EAAE;;qDAAyB;IACxB;QAAR,2DAAK,EAAE;;qDAA2B;IAC1B;QAAR,2DAAK,EAAE;;uDAAsB;IACrB;QAAR,2DAAK,EAAE;;oDAA0B;IACzB;QAAR,2DAAK,EAAE;;sDAAoB;IAElB;QAAT,4DAAM,EAAE;kCAAQ,0DAAY;iDAA+B;IAEpC;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;qDAAC;IACtB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;qDAAC;IACpB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,wDAAU;uDAAC;IACxB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAc,wDAAU;uDAAC;IAGlD;QADC,iEAAW,CAAC,OAAO,CAAC;;;kDAOpB;IAyDD;QADC,kEAAY,CAAC,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;mDAKvC;IAvFU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCA6C6B,wDAAU,EAAkB,oDAAM;OA5CpD,cAAc,CAkU1B;IAAD,qBAAC;CAAA;AAlU0B;;;;;;;;;;;;ACV3B,mB;;;;;;;;;;;ACAA,0IAA0I,sBAAsB,sdAAsd,kOAAkO,uBAAuB,oCAAoC,2XAA2X,sBAAsB,iBAAiB,yCAAyC,eAAe,yCAAyC,8GAA8G,yDAAyD,wGAAwG,+DAA+D,2GAA2G,kEAAkE,sEAAsE,2DAA2D,oCAAoC,mEAAmE,sEAAsE,0DAA0D,oCAAoC,kEAAkE,+FAA+F,2DAA2D,2lBAA2lB,SAAS,gGAAgG,2BAA2B,iGAAiG,cAAc,+FAA+F,WAAW,+FAA+F,WAAW,uEAAuE,2DAA2D,8BAA8B,YAAY,+FAA+F,WAAW,wEAAwE,0DAA0D,8BAA8B,aAAa,wEAAwE,0DAA0D,8BAA8B,aAAa,oGAAoG,gBAAgB,iGAAiG,aAAa,qEAAqE,mCAAmC,8BAA8B,8BAA8B,gNAAgN,8e;;;;;;;;;;;;;;;;;;;;;;;;;ACAxqJ;AACS;AAQlE;IAEE,mCAAmB,WAA4B;QAA5B,gBAAW,GAAX,WAAW,CAAiB;IAAI,CAAC;IAEpD,4CAAQ,GAAR;IACA,CAAC;IACF,4DAAwB,GAAxB;QAAA,iBAqBC;QApBA,IAAI,EAAE,GAAG,IAAI,EACZ,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC;QAClD,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;QACnD,IAAI,YAAY,GAAO;YAChB,cAAc,EAAG,WAAW,CAAC,QAAQ,CAAC;SACvC,CAAC;QACJ,IAAI,MAAM,GAAO;YACb,cAAc,EAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;YAC7C,kBAAkB,EAAG,WAAW,CAAC,kBAAkB,CAAC;SACrD,CAAC;QACP,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAChG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACtD,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC;gBACjB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACnC,CAAC;YACD,IAAI,EAAC;gBACH,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACjC,CAAC;YACD,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAxBS;QAAR,2DAAK,EAAE;;4DAAW;IAHR,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;;;SAGnC,CAAC;yCAGgC,0EAAe;OAFpC,yBAAyB,CA4BrC;IAAD,gCAAC;CAAA;AA5BqC;;;;;;;;;;;;ACTtC,mB;;;;;;;;;;;ACAA,+LAA+L,sLAAsL,yHAAyH,sCAAsC,sFAAsF,wCAAwC,6FAA6F,+DAA+D,kFAAkF,sLAAsL,0HAA0H,uCAAuC,sFAAsF,wCAAwC,6FAA6F,+DAA+D,wLAAwL,8CAA8C,0LAA0L,sCAAsC,iGAAiG,0CAA0C,0GAA0G,4CAA4C,sF;;;;;;;;;;;;;;;;;;;;;;;;;ACAtqE;AACgB;AAOlE;IAEE,gCAAmB,WAA4B;QAA5B,gBAAW,GAAX,WAAW,CAAiB;IAAI,CAAC;IAEpD,yCAAQ,GAAR;QACC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,CAAC,WAAW,CAAC,SAAS,GAAG,oBAAoB,CAAC;IACjD,CAAC;IAPU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAGgC,0EAAe;OAFpC,sBAAsB,CASlC;IAAD,6BAAC;CAAA;AATkC;;;;;;;;;;;;ACRnC,mB;;;;;;;;;;;ACAA,4aAA4a,MAAM,MAAM,MAAM,MAAM,8rBAA8rB,sBAAsB,2BAA2B,uBAAuB,2BAA2B,sBAAsB,2BAA2B,uBAAuB,uIAAuI,0BAA0B,6BAA6B,2BAA2B,6BAA6B,2BAA2B,6BAA6B,4BAA4B,6BAA6B,yBAAyB,wHAAwH,oQAAoQ,kyBAAkyB,iBAAiB,iDAAiD,yPAAyP,eAAe,mEAAmE,sBAAsB,SAAS,YAAY,WAAW,YAAY,2CAA2C,aAAa,6EAA6E,sDAAsD,iBAAiB,+BAA+B,qBAAqB,2BAA2B,qBAAqB,2BAA2B,sBAAsB,2BAA2B,mBAAmB,2BAA2B,0BAA0B,gCAAgC,iBAAiB,uGAAuG,sBAAsB,0eAA0e,4IAA4I,UAAU,KAAK,YAAY,shBAAshB,wIAAwI,UAAU,KAAK,YAAY,++B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1oK;AACT;AACxB;AACY;AACC;AACH;AACgB;AAUrE;IAqCE,2BAAoB,MAAc,EAAU,KAAoB,EACvD,WAA6B,EAAU,aAA8B;QAD1D,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAe;QACvD,gBAAW,GAAX,WAAW,CAAkB;QAAU,kBAAa,GAAb,aAAa,CAAiB;QAlCvE,iBAAY,GAAG,EAAE,CAAC;QAClB,qBAAgB,GAAG,EAAE,CAAC;QAGtB,YAAO,GAAO,IAAI,CAAC;QACnB,WAAM,GAAG,EAAE,CAAC;QACZ,iBAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;QACrC,eAAU,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;QAEjC,aAAQ,GAAQ,IAAI,CAAC;QAEpB,QAAG,GAAO,IAAI,IAAI,EAAE,CAAC;QACtB,cAAS,GAAwB,EAAE,CAAC;QAMpC,SAAI,GAAG;YACZ,EAAE,KAAK,EAAG,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE;YAC5C,EAAE,KAAK,EAAG,QAAQ,EAAE,IAAI,EAAE,iBAAiB,EAAC,QAAQ,EAAC,KAAK,EAAC;YAC3D,EAAE,KAAK,EAAG,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE;YACnC,uCAAuC;YACvC,EAAE,KAAK,EAAG,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE;YACxC,EAAE,KAAK,EAAG,QAAQ,EAAE,IAAI,EAAE,cAAc,EAAE;YAC1C,EAAE,KAAK,EAAG,cAAc,EAAE,IAAI,EAAE,cAAc,EAAE;YAChD,EAAE,KAAK,EAAG,eAAe,EAAE,IAAI,EAAE,eAAe,EAAE;YAClD,EAAE,KAAK,EAAG,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE;YACtC,EAAE,KAAK,EAAG,QAAQ,EAAE,IAAI,EAAE,mBAAmB,EAAE;YAC/C,yCAAyC;YACzC,EAAE,KAAK,EAAG,YAAY,EAAE,IAAI,EAAE,eAAe,EAAE;SAC/C,CAAC;QAIC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YACnE,EAAE,CAAC,YAAY,EAAE;QACnB,CAAC,CAAC;IACJ,CAAC;IAEH,oCAAQ,GAAR;QAAA,iBAkFC;QAjFC,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,uBAAuB;QACvB,EAAE,CAAC,WAAW,CAAC,SAAS,GAAG,yBAAyB,CAAC;QAErD,kDAAkD;QAClD,IAAI,IAAI,GAAU,IAAI,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC1E,IAAI,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,GAAO,IAAI,IAAI,EAAE,CAAC;QAC7B,wDAAwD;QAExD,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,gBAAgB;YAC5B,UAAU,EAAE,8DAAa;YACzB,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI;YAChB,aAAa,EAAE,IAAI;YACnB,SAAS,EAAE,CAAC,CAAE,CAAC,EAAE,MAAM,CAAE,CAAC;YAC1B,UAAU,EAAE,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,GAAG,EAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,GAAG,EAAC,GAAG,CAAC,CAAE;YAC1D,QAAQ,EAAE;gBACR,aAAa,EAAE,GAAG;gBAClB,YAAY,EAAE,kBAAkB;gBAChC,QAAQ,EAAC,GAAG;gBACZ,YAAY,EAAE,mBAAmB;aAClC;YACD,GAAG,EAAE,mCAAmC;YACxC,IAAI,EAAE,UAAC,oBAAyB,EAAE,QAAQ;gBACxC,IAAI,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;gBAClC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,cAAc,EAAE,UAAU,CAAC;oBAC7C,EAAE,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC3B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,GAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;gBACzC,CAAC,CAAC,CAAC;gBACH,oBAAoB,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAClF,oBAAoB,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC;gBAC/D,oBAAoB,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;gBACnE,oBAAoB,CAAC,SAAS,CAAC,GAAG,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;gBAC/D,oBAAoB,CAAC,SAAS,CAAC,GAAG,KAAI,CAAC,OAAO,CAAC;gBAC/C,oBAAoB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACnG,oBAAoB,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;gBAChD,oBAAoB,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC5F,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,aAAG;oBAC9D,EAAE,CAAC,WAAW,CAAC,YAAY,GAAG,GAAG,CAAC,IAAI,CAAC;oBACvC,QAAQ,CAAC;wBACP,YAAY,EAAE,GAAG,CAAC,YAAY;wBAC9B,eAAe,EAAE,GAAG,CAAC,eAAe;wBACpC,IAAI,EAAE,EAAE;qBACT,CAAC,CAAC;oBACH,CAAC,CAAC,qBAAqB,CAAC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;gBACxD,CAAC,CAAC,CAAC;gBAEH,IAAI,MAAM,GAAU,KAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM,EAClE,SAAS,GAAU,KAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,EAC7D,MAAM,GAAO;oBACX,QAAQ,EAAG,MAAM;oBACjB,WAAW,EAAG,SAAS;oBACvB,YAAY,EAAG,oBAAoB,CAAC,WAAW,CAAC;oBAChD,UAAU,EAAG,oBAAoB,CAAC,SAAS,CAAC;oBAC5C,SAAS,EAAG,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;iBAC5D,CAAC;gBACF,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;gBAClC,KAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;oBACxD,KAAI,CAAC,YAAY,GAAa,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC1C,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC;oBACzG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC;oBAC5G,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC;oBAC5G,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,GAAG,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC;oBAC/G,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAK,GAAG,CAAC,MAAM,CAAC,CAAC;oBAC1C,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAI,GAAG,CAAC,OAAO,CAAC,CAAC;oBAC3C,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;oBAC5C,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAE,GAAG,CAAC,SAAS,CAAC,CAAC;oBAC7C,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,EAAC;wBAC1B,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACjC,CAAC;gBACH,CAAC,CAAC;YAEJ,CAAC;YACD,OAAO,EAAC,IAAI,CAAC,IAAI;SAChB,CAAC;QAEJ,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAE5B,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IAED,qDAAyB,GAAzB;QACE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,UAA0B;YAC/D,UAAU,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC;gBACzB,IAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC;oBAC/C,EAAE,EAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,EAAC;wBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;4BACpC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,IAAI,mBAAmB,IAAI,EAAE,CAAC,OAAO,IAAI,eAAe,EAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;4BACpG,IAAI;iCACF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iCACrB,IAAI,EAAE,CAAC;wBACZ,CAAC;oBACH,CAAC;oBAAA,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC,EAAC;wBAC1C,EAAE,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAC;4BACxB,kBAAkB;4BAClB,0BAA0B;4BACzB,IAAI;iCACF,MAAM,CAAC,EAAE,CAAC;iCACV,IAAI,EAAE,CAAC;wBACZ,CAAC;oBACH,CAAC;gBACH,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,oBAAoB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;oBAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACpC,mHAAmH;wBACnH,8BAA8B;wBAC9B,SAAS;wBACT,gCAAgC;wBAChC,IAAI;wBACF,IAAI;6BACH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BACrB,IAAI,EAAE,CAAC;oBACZ,CAAC;oBACD,uBAAuB;oBACvB,+CAA+C;oBAC/C,+BAA+B;oBAC/B,yBAAyB;oBACzB,8BAA8B;oBAC9B,kDAAkD;oBAClD,MAAM;oBACN,IAAI;gBACN,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;oBACtD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACpC,wGAAwG;wBACxG,IAAI;6BACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BACrB,IAAI,EAAE,CAAC;oBACZ,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;oBACpD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;wBACpC,wGAAwG;wBACxG,IAAI;6BACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BACrB,IAAI,EAAE,CAAC;oBACZ,CAAC;gBACL,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAkB,GAAlB;QACE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,CAAC,CAAE,aAAa,CAAE,CAAC,UAAU,CAAC;YAC5B,UAAU,EAAE,UAAU;YACtB,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,WAAW;YACrB,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,IAAI;YACrB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,OAAO;YAClB,OAAO,EAAE,IAAI,IAAI,EAAE;SACpB,CAAC,CAAC;QAEH,oBAAoB;QACpB,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,oCAAoC;QACpC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE7B,YAAY;QACZ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,sBAAsB,EAAE;YAC9C,CAAC,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACzB,EAAE,CAAC,iBAAiB,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,uDAAuD;QACvD,sCAAsC;QACtC,MAAM;QAEN,+BAA+B;QAC/B,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAE,QAAQ,EAAE,UAAU,CAAC;YACpC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC;QACpB,CAAC,CAAC;QACF,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAE,QAAQ,EAAE,UAAU,CAAC;YAClC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;QAEF,oCAAoC;QACpC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,wBAAwB,EAAE,UAAS,CAAC;YAC1D,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5B,EAAE,EAAC,EAAE,CAAC,iBAAiB,IAAI,UAAU,CAAC,EAAC;gBACrC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC;YAAA,IAAI,CAAC,EAAE,EAAC,EAAE,CAAC,iBAAiB,IAAI,QAAQ,CAAC,EAAC;gBACzC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC;YAAA,IAAI,EAAC;gBACJ,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACjF,mCAAmC;gBACnC,mCAAmC;gBACnC,gCAAgC;YAClC,CAAC;YACA,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC;IAEJ,CAAC;IAED,qDAAyB,GAAzB,UAA0B,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,iDAAqB,GAArB;QACE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,CAAC,CAAC,eAAe,CAAC,CAAC,KAAK,CAAC;YACrB,CAAC,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACtC,EAAE,CAAC,iBAAiB,GAAG,cAAc,CAAC;QAC1C,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;YACtB,CAAC,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACvC,EAAE,CAAC,iBAAiB,GAAG,eAAe,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;YACjB,CAAC,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAClC,EAAE,CAAC,iBAAiB,GAAG,UAAU,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;YACf,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,EAAE,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAiB,GAAjB;QACI,qCAAqC;QACrC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QACzB,CAAC,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;IACvC,CAAC;IAED,0CAAc,GAAd;QACE,CAAC,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,wCAAY,GAAZ;QACE,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACrC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC;QAC9E,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC;IACrC,CAAC;IAED,0CAAc,GAAd,UAAe,KAAK,EAAE,IAAI,EAAE,GAAG;QAC7B,IAAI,QAAQ,GAAM,EAAC,cAAc,EAAE,mBAAmB,EAAC,CAAC;QACxD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,eAAe,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,sBAAsB,GAAG,IAAI,CAAC;QAC/C,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IAC/C,CAAC;IACD,iDAAqB,GAArB,UAAsB,KAAK,EAAE,IAAI,EAAG,MAAM;QAA1C,iBA6BC;QA5BC,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,EACpB,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,EAC1B,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,EACzB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EACrB,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5B,0BAAwC,EAAtC,cAAM,EAAE,eAAO,CAAwB;QAE7C,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAK,EAAC,OAAO,EAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG;YACtE,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC;gBACjB,2DAA2D;gBAC3D,KAAI,CAAC,WAAW,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBAChD,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,WAAW,GAAC,GAAG,CAAC,WAAW,CAAC;gBAC7D,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,GAAC,GAAG,CAAC,MAAM,CAAC;gBACnD,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC,GAAG,GAAG,CAAC,oBAAoB,CAAC,CAAC;gBACnF,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,qBAAqB,CAAC,GAAG,GAAG,CAAC,qBAAqB,CAAC,CAAC;gBACrF,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;gBACnF,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;gBAC7E,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;gBAC1E,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;gBAC1E,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;gBAE5E,0DAA0D;YAC5D,CAAC;YACD,IAAI,EAAC;gBACD,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC/B,KAAK,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAmB,GAAnB,UAAoB,IAAI,EAAE,EAAE;QAA5B,iBAoBC;QAnBC,IAAI,MAAM,GAAU,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,MAAM,EAC9D,SAAS,GAAU,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,EAC7D,MAAM,GAAO;YACX,QAAQ,EAAG,MAAM;YACjB,WAAW,EAAG,SAAS;YACvB,YAAY,EAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACpC,UAAU,EAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAChC,SAAS,EAAG,IAAI,CAAC,QAAQ;SAC1B,CAAC;QACN,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACtD,KAAI,CAAC,YAAY,GAAa,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1C,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAK,GAAG,CAAC,MAAM,CAAC,CAAC;YAC1C,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAI,GAAG,CAAC,OAAO,CAAC,CAAC;YAC3C,KAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC5C,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAE,GAAG,CAAC,SAAS,CAAC,CAAC;YAC7C,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,EAAC;gBAC1B,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACjC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,6BAA6B;IAC7B,gEAAgE;IAChE,+BAA+B;IAC/B,qHAAqH;IACrH,kCAAkC;IAClC,uDAAuD;IACvD,WAAW;IACX,0BAA0B;IAC1B,MAAM;IACN,IAAI;IAEJ,sCAAU,GAAV,UAAW,CAAC;QACV,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,uEAAuE;IACzE,CAAC;IAED,oCAAQ,GAAR,UAAS,CAAC;QACR,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,uEAAuE;IACzE,CAAC;IAED,sCAAU,GAAV,UAAW,IAAI;QAEb,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5F,IAAI,CAAC,MAAM,GAAC,IAAI,CAAC,cAAc,CAAC;IAClC,CAAC;IAED,+CAAmB,GAAnB;QAAA,iBAIC;QAHC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACnE,KAAI,CAAC,WAAW,CAAC,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAC9C,CAAC,CAAC;IACJ,CAAC;IAEF,8CAAkB,GAAlB;QACC,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,IAAI,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,cAAc,IAAG,CAAC,CAAC;QAC7E,IAAI,GAAG,GAAG;YACR,SAAS,EAAC,SAAS;YACnB,OAAO,EAAC,OAAO;SAChB,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACA,4CAAgB,GAAhB;QAAA,iBAkBC;QAjBC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC3C,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;QACjD,IAAI,MAAM,GAAO;YACb,iDAAiD;YACjD,WAAW,EAAG,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,QAAQ,CAAC;YACxC,SAAS,EAAG,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC;SACrC,CAAC;QACJ,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAC9C,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC;gBACjB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACnC,CAAC;YACD,IAAI,EAAC;gBACH,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;YACjC,CAAC;YACD,KAAI,CAAC,WAAW,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,sCAAU,GAAjB,UAAkB,MAAM;QACtB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,EACpB,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAC/B,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,EACtB,IAAI,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACvB,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QACjD,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QACzC,MAAM,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAED,sCAAU,GAAV,UAAW,OAAO;QAChB,IAAI,SAAS,GAAG,IAAI,IAAI,EAAE,EAAE,MAAY,EAAE,IAAS,EAAE,WAAgB,EAAE,UAAe,EAAC,IAAI,EAAG,KAAK,CAAC;QACpG,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;QACzB,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC1B,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAExB,EAAE,EAAC,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,CAAC,CAAC;YACnC,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3B,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7B,IAAI,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;YAC5B,KAAK,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC5B,CAAC;QACD,WAAW,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,UAAU,GAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,EAAE,EAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,EAAC;YACpC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;YACvC,EAAE,EAAC,IAAI,CAAC,gBAAgB,IAAI,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBACxE,WAAW,GAAG,MAAM,CAAC;gBACrB,UAAU,GAAI,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7C,CAAC;YACD,EAAE,EAAC,UAAU,CAAC,OAAO,EAAE,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBAC9C,UAAU,GAAI,IAAI,IAAI,EAAE,CAAC;YAC3B,CAAC;QACH,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IACD,8CAAkB,GAAlB,UAAmB,IAAI,EAAE,GAAG;QAC1B,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,IAAI,OAAO,GAAG,+BAA+B,GAAC,IAAI,CAAC,QAAQ,GAAC,GAAG,CAAC;QAChE,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;YAClC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;gBACL,IAAI,MAAM,GAAO;oBACf,IAAI,EAAW,IAAI,CAAC,EAAE;oBACtB,aAAa,EAAE,IAAI,CAAC,IAAI;oBACxB,QAAQ,EAAO,IAAI,CAAC,IAAI;oBACxB,UAAU,EAAK,IAAI,CAAC,QAAQ;iBAC7B,CAAC;gBACF,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;oBAC9C,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC;wBACjB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;wBACjC,EAAE,CAAC,iBAAiB,EAAE,CAAC;oBACzB,CAAC;oBACD,IAAI,EAAC;wBACH,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBACjC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAA,IAAI,EAAC;gBACJ,GAAG;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAhfD;QADC,+DAAS,CAAC,qEAAkB,CAAC;sDACJ,wDAAU,oBAAV,wDAAU;+DAAC;IAF1B,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAsC4B,sDAAM,EAAgB,8DAAc;YACzC,0EAAe,EAAyB,2EAAe;OAtCnE,iBAAiB,CAmf7B;IAAD,wBAAC;;CAAA;AAnf6B;;;;;;;;;;;;AChB9B,yBAAyB,6BAA6B,KAAK,C;;;;;;;;;;;ACA3D,+6DAA+6D,kDAAkD,2uB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/6D;AACmB;AACuB;AAU5F;IAKE,kCAAoB,WAA6B,EAAS,EAAe;QAArD,gBAAW,GAAX,WAAW,CAAkB;QAAS,OAAE,GAAF,EAAE,CAAa;QAFlE,aAAQ,GAAgB,EAAE,CAAC;IAE2C,CAAC;IAE9E,2CAAQ,GAAR;QACC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAED,8CAAW,GAAX,UAAY,GAAG;IAEf,CAAC;IAEA,oDAAiB,GAAjB;QACC,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAM,IAAI,GAAO,KAAK,CAAC,YAAY,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,UAAU,EAAyB,CAAC,EAAC,KAAK,EAAG,EAAE,EAAC,QAAQ,EAAG,IAAI,EAAC,CAAC;YACjE,gBAAgB,EAAmB,CAAC,IAAI,CAAC,SAAS,EAAC,yDAAU,CAAC,QAAQ,CAAC;YACvE,eAAe,EAAoB,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC3D,WAAW,EAAwB,EAAE;YACrC,OAAO,EAA4B,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9E,iCAAiC,EAAE,EAAE;YACrC,wBAAwB,EAAW,EAAE;YACrC,oBAAoB,EAAe,EAAE;YACrC,gCAAgC,EAAG,EAAE;YACrC,SAAS,EAA0B,EAAE;YACrC,eAAe,EAAoB,IAAI,CAAC,aAAa,CAAC,aAAa;YACnE,mBAAmB,EAAgB,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAChF,CAAC,CAAC;IACJ,CAAC;IAED,+CAAY,GAAZ;QAAA,iBAwBA;QAvBC,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YAClB,IAAI,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;YAC7D,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAClC,IAAI,IAAI,GAAG;gBACT,gCAAgC,EAAE,SAAS,CAAC,8BAA8B,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACjG,oBAAoB,EAAc,SAAS,CAAC,kBAAkB,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrF,iCAAiC,EAAC,SAAS,CAAC,+BAA+B,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClG,wBAAwB,EAAU,SAAS,CAAC,sBAAsB,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzF,eAAe,EAAmB,SAAS,CAAC,aAAa,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChF,mBAAmB,EAAe,SAAS,CAAC,iBAAiB;aAC/D;YACD,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;gBACvD,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC;oBACf,QAAQ,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;oBAC/C,KAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,QAAQ,CAAC,OAAO,CAAC,kCAAkC,EAAE,UAAS,CAAC;wBAC7D,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;4BACH,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;wBAC3B,CAAC;oBACF,CAAC,CAAC,CAAC;gBACV,CAAC;YACD,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,8CAAW,GAAX;QAAA,iBAKC;QAJA,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YAC3C,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC3B,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,kDAAe,GAAf;QACC,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,gCAAgC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,8BAA8B,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QAClJ,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,oBAAoB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QAC1H,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,iCAAiC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,+BAA+B,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG;QACrJ,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,wBAAwB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,sBAAsB,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QAClI,KAAK,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;IACjH,CAAC;IAED,mDAAgB,GAAhB;QAEE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,EAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CACjB,CAAC;YACC,QAAQ,CAAC,OAAO,CAAC,sCAAsC,EAAE,UAAS,CAAC;gBACjE,EAAE,EAAC,CAAC,CAAC,EAAC;oBACJ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;oBAC9B,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAxFU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAMkC,0EAAe,EAAa,0DAAW;OAL9D,wBAAwB,CA0FpC;IAAD,+BAAC;CAAA;AA1FoC;;;;;;;;;;;;ACZrC,mB;;;;;;;;;;;ACAA,sdAAsd,4BAA4B,yVAAyV,4BAA4B,iWAAiW,gCAAgC,0V;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtrC;AACmB;AACa;AAUlF;IAIE,+BAAmB,WAA6B,EAAS,EAAe;QAArD,gBAAW,GAAX,WAAW,CAAkB;QAAS,OAAE,GAAF,EAAE,CAAa;QAFjE,eAAU,GAAO,EAAE,CAAC;IAEiD,CAAC;IAE7E,wCAAQ,GAAR;QACC,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEA,iDAAiB,GAAjB;QACA,IAAI,EAAE,GAAG,IAAI,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,cAAc,EAAK,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC3C,cAAc,EAAM,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5C,kBAAkB,EAAG,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAC9C,CAAC,CAAC;IACJ,CAAC;IAED,gDAAgB,GAAhB;QACE,EAAE,EAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAC;YACpE,QAAQ,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;YACjE,MAAM,CAAC;QACT,CAAC;QACD,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,0CAA0C;YAC1C,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,oDAAoD;QACtD,CAAC;QAAA,IAAI,EAAC;YACL,IAAI,EAAE,GAAE,IAAI,CAAC;YACb,IAAI,MAAI,GAAG;gBACR,cAAc,EAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY;gBAC/C,cAAc,EAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY;gBAC/C,kBAAkB,EAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB;aAC1D,EACD,OAAO,GAAG,qCAAqC,CAAC;YAChD,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,UAAS,CAAC;gBAClC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;oBACP,EAAE,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAI,CAAC,CAAC,SAAS,CAAC,aAAG;wBACtD,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC;4BAClB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;4BACjC,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;4BAChB,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;4BACnB,QAAQ,CAAC,OAAO,CAAC,kCAAkC,EAAE,UAAS,CAAC;gCACxD,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;oCACH,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gCAC3B,CAAC;4BACF,CAAC,CAAC,CAAC;wBACZ,CAAC;wBAAA,IAAI,EAAC;4BACL,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;wBAChC,CAAC;wBACD,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;wBAChB,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;oBACnB,CAAC,CAAC,CAAC;gBACL,CAAC;YACJ,CAAC,CAAC,CAAC;QAED,CAAC;IACH,CAAC;IAED,+CAAe,GAAf;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE3C,GAAG,EAAC,IAAI,GAAG,IAAI,MAAM,CAAC,EAAC;YACrB,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAC;gBACtB,IAAI,GAAG,GAAO,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,EAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,yBAAyB,CAAC;gBACnD,CAAC;gBACD,IAAI,CAAC,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,qCAAqC,CAAC;gBAC/D,CAAC;gBACD,IAAI,CAAC,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,2CAA2C,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAC/F,CAAC;gBACD,IAAI,EAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACF,6CAAa,GAAb,UAAc,SAAoB;QAAlC,iBAWC;QAVC,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;YAC3C,IAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,OAAO,YAAY,0DAAW,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,YAAY,wDAAS,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,gDAAgB,GAAhB;QAEC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,EAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CACjB,CAAC;YACC,QAAQ,CAAC,OAAO,CAAC,sCAAsC,EAAE,UAAS,CAAC;gBACjE,EAAE,EAAC,CAAC,CAAC,EAAC;oBACR,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;QACJ,CAAC;IACH,CAAC;IAzGU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAKiC,0EAAe,EAAa,0DAAW;OAJ7D,qBAAqB,CA2GjC;IAAD,4BAAC;CAAA;AA3GiC;;;;;;;;;;;;ACZlC,2CAA2C,gCAAgC,kBAAkB,yBAAyB,yBAAyB,KAAK,C;;;;;;;;;;;ACApJ,+oBAA+oB,8BAA8B,iTAAiT,6BAA6B,+UAA+U,mBAAmB,iGAAiG,uBAAuB,qhBAAqhB,qBAAqB,sV;;;;;;;;;;;;;;;;;;;;;;;;;;ACA78D;AACmB;AACa;AAUlF;IAME,2BAAoB,WAA6B,EAAS,EAAe;QAArD,gBAAW,GAAX,WAAW,CAAkB;QAAS,OAAE,GAAF,EAAE,CAAa;QAJlE,eAAU,GAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;IAI0B,CAAC;IAE/E,oCAAQ,GAAR;QAAA,iBAWC;QAVA,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,gBAAM;YAC9C,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACzC,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC5B,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,6CAAiB,GAAjB;QACC,IAAI,EAAE,GAAG,IAAI,CAAC;QACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,UAAU,EAAyB,CAAC,EAAC,KAAK,EAAG,EAAE,EAAC,QAAQ,EAAG,IAAI,EAAC,CAAC;YACjE,gBAAgB,EAAmB,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC3D,eAAe,EAAoB,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC3D,WAAW,EAAwB,EAAE;YACrC,OAAO,EAA4B,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAC,yDAAU,CAAC,KAAK,CAAC,CAAC;YAC9E,iCAAiC,EAAe,EAAE;YAClD,wBAAwB,EAAW,EAAE;YACrC,oBAAoB,EAAa,EAAE;YACnC,gCAAgC,EAAG,EAAE;YACrC,SAAS,EAA0B,EAAE;YACrC,eAAe,EAAoB,EAAE;YACrC,mBAAmB,EAAgB,CAAC,EAAE,EAAC,CAAC,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,EAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAChF,CAAC,CAAC;IACJ,CAAC;IAEF,wCAAY,GAAZ;QAAA,iBA4BC;QA3BC,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC;YACnB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,0CAA0C;YAC1C,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,oDAAoD;QACtD,CAAC;QAAA,IAAI,EAAC;YACL,IAAI,IAAI,GAAG;gBACP,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc;gBAC7C,SAAS,EAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa;gBAC5C,WAAW,EAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS;gBACxC,OAAO,EAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK;gBACnC,SAAS,EAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO;aAC1C;YACD,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;gBACpD,EAAE,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAC;oBACf,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC;oBACtB,QAAQ,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;oBAC7C,KAAK,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAE;oBACrE,QAAQ,CAAC,OAAO,CAAC,kCAAkC,EAAE,UAAS,CAAC;wBAC7D,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;4BACH,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;wBAC3B,CAAC;oBACF,CAAC,CAAC,CAAC;gBACV,CAAC;YACD,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,2CAAe,GAAf;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE3C,GAAG,EAAC,IAAI,GAAG,IAAI,MAAM,CAAC,EAAC;YACrB,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAC;gBACtB,IAAI,GAAG,GAAO,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC1B,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,EAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,yBAAyB,CAAC;gBACnD,CAAC;gBACD,IAAI,CAAC,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,EAAC;oBACnC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,qCAAqC,CAAC;gBAC/D,CAAC;gBACD,IAAI,CAAC,EAAE,EAAC,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAC;oBACjC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,2CAA2C,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAC/F,CAAC;gBACD,IAAI,EAAC;gBACL,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,yCAAa,GAAb,UAAc,SAAoB;QAAlC,iBAWC;QAVC,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,eAAK;YAC3C,IAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,OAAO,YAAY,0DAAW,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,YAAY,wDAAS,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YAC9C,CAAC;QACH,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,4CAAgB,GAAhB;QAEE,IAAI,EAAE,GAAG,IAAI,CAAC;QACd,EAAE,EAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CACjB,CAAC;YACC,QAAQ,CAAC,OAAO,CAAC,sCAAsC,EAAE,UAAS,CAAC;gBACjE,EAAE,EAAC,CAAC,CAAC,EAAC;oBACJ,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;oBAC9B,EAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC3B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAnHU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAOkC,0EAAe,EAAa,0DAAW;OAN9D,iBAAiB,CAoH7B;IAAD,wBAAC;CAAA;AApH6B;;;;;;;;;;;;ACZ9B,mB;;;;;;;;;;;ACAA,2+C;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAQlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;ACRlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsB;AACf,IAAM,aAAa,GAAG,EAAE,CAAC;AAEhC,wCAAwC;AACjC,IAAM,4BAA4B,GAAG,EAAE,CAAC;AAE/C,0BAA0B;AACnB,IAAM,iBAAiB,GAAG,EAAE,CAAC;AAEpC,kDAAkD;AAC3C,IAAM,gCAAgC,GAAG,KAAK,CAAC;AAC/C,IAAM,gCAAgC,GAAG,MAAM,CAAC;;;;;;;;;;;;;ACXvD;AAAA;AAAA;AAAA;AAAO,IAAM,SAAS,GAAG;IACxB,cAAc;IACd,2BAA2B;IAC3B,2BAA2B;IAC3B,sCAAsC;IACtC,oCAAoC;IACpC,wBAAwB;IACxB,wBAAwB;IACxB,2BAA2B;IAC3B,iCAAiC;IACjC,kCAAkC;IAClC,yBAAyB;IACzB,2BAA2B;IAC3B,8BAA8B;IAC9B,KAAK;IACL,WAAW;IACX,gCAAgC;IAChC,qCAAqC;IACrC,oCAAoC;IACpC,sCAAsC;IACtC,wCAAwC;IACxC,KAAK;IACL,MAAM,EAAG;QACR,cAAc,EAAI,yBAAyB;QAC3C,iBAAiB,EAAC,gDAAgD;QAClE,cAAc,EAAI,8BAA8B;QAChD,iBAAiB,EAAE,4FAA4F;QAC/G,uBAAuB,EAAE,wCAAwC;QACjE,kBAAkB,EAAG,gCAAgC;QACrD,qBAAqB,EAAG,0BAA0B;QAClD,aAAa,EAAE,gCAAgC;KAC/C;CACD,CAAC;AAEK,IAAM,YAAY,GAAG;IAC3B,cAAc;IACd,yBAAyB;IACzB,yBAAyB;IACzB,2BAA2B;IAC3B,8BAA8B;IAC9B,iDAAiD;IACjD,KAAK;IACL,MAAM,EAAG;QACR,gBAAgB,EAAC,qDAAqD;QACtE,OAAO,EAAU,gDAAgD;QACjE,WAAW,EAAM,kCAAkC;QACnD,SAAS,EAAQ,2CAA2C;KAC5D;IACD,OAAO,EAAE;QACR,IAAI,EAAC,kCAAkC;KACvC;CACD,CAAC;AAEK,IAAM,SAAS,GAAG;IACxB,cAAc;IACd,2BAA2B;IAC3B,4BAA4B;IAC5B,wCAAwC;IACxC,0BAA0B;IAC1B,8BAA8B;IAC9B,8BAA8B;IAC9B,gCAAgC;IAChC,8BAA8B;IAC9B,oCAAoC;IACpC,qCAAqC;IACrC,4BAA4B;IAC5B,+BAA+B;IAC/B,iCAAiC;IACjC,KAAK;IACL,WAAW;IACX,6BAA6B;IAC7B,wBAAwB;IACxB,KAAK;IACL,MAAM,EAAG;QACR,WAAW,EAAC,+BAA+B;KAC3C;IACD,OAAO,EAAC;QACP,aAAa,EAAC,kCAAkC;KAChD;CACD,CAAC;AAEF,0BAA0B;AAC1B,8BAA8B;AAC9B,+BAA+B;AAC/B,gCAAgC;AAChC,kCAAkC;AAClC,sCAAsC;AACtC,mCAAmC;AACnC,sCAAsC;AACtC,mCAAmC;AACnC,gCAAgC;AAChC,kCAAkC;AAClC,oCAAoC;AACpC,6BAA6B;AAC7B,8BAA8B;AAC9B,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FkE;AACzB;AAI7C;IACC,uBAAuC,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;IAC1D,iCAAS,GAAT,UAAU,KAAU,EAAE,UAAmB,EAAE,QAAiB,EAAE,QAAgB,EAAE,QAAgB,EAAE,MAAe;QAChH,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,KAAK,CAAC,EAAC;YAClD,MAAM,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC/C,CAAC;QACD,IAAI,CAAC;YACJ,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC;YAC9B,IAAM,GAAG,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;YAC/B,MAAM,CAAC,oEAAY,CAAC,GAAG,EAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAC/C,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACb,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QACD;;WAEG;QACH,qBAAqB,KAAsB;YACxC,6BAA6B;YAC7B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3E,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC9B,MAAM,IAAI,KAAK,CAAI,KAAK,qBAAkB,CAAC,CAAC;YAC9C,CAAC;YACD,MAAM,CAAC,KAAK,CAAC;QAChB,CAAC;IACF,CAAC;IA1BW,aAAa;QAHzB,0DAAI,CAAC;YACJ,IAAI,EAAE,WAAW;SAClB,CAAC;QAEY,uEAAM,CAAC,uDAAS,CAAC;;OADlB,aAAa,CA2BzB;IAAD,oBAAC;CAAA;AA3ByB;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiB;AACgC;AAQ3E,IAAM,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAEpC;IAeC,yBAAmB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAb3B,aAAQ,GAAU,MAAM,CAAC,UAAU,CAAC,CAAC;QACrC,kBAAa,GAAO,EAAE,CAAC;QACvB,iBAAY,GAAc,EAAE,CAAC;QAC7B,oBAAe,GAAO,EAAE,CAAC;QACzB,2BAAsB,GAAW,IAAI,CAAC;QACtC,kBAAa,GAAW,KAAK,CAAC;QAC9B,sBAAiB,GAAW,KAAK,CAAC;QAClC,eAAU,GAAQ,EAAE,CAAC;QACrB,uBAAkB,GAAW,KAAK,CAAC;QACnC,qBAAgB,GAAoC,EAAE,CAAC;QAErD,sBAAiB,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,mBAAmB,CAAC,CAAC;QAC/D,eAAU,GAAG,EAAE,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChE,CAAC;IAED,sGAAsG;IAC/F,oCAAU,GAAjB,UAAkB,GAAG,EAAE,MAAM;QAC5B,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE;aAChC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC3C,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACvB,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;YACxB,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAC1C,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/F,CAAC;IAEM,qCAAW,GAAlB,UAAmB,GAAW,EAAE,IAAS;QACxC,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE;aAChC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC3C,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACtC,EAAE,EAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC;gBACvB,GAAG,EAAC,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;oBACjC,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACtB,GAAG,EAAC,IAAI,CAAC,IAAI,MAAM,CAAC,EAAC;wBACnB,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EACjB,OAAO,GAAG,GAAG,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,CAAC,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,GAAG,GAAC,CAAC,CAAC,QAAQ,EAAE,GAAC,GAAG,CAAC;wBACrE,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;oBAC1C,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,EAAC;gBACH,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QACD,yDAAyD;QACzD,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/F,CAAC;IAEM,sCAAY,GAAnB,UAAoB,GAAW,EAAE,IAAS;QACzC,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE;aAChC,GAAG,CAAC,cAAc,EAAE,kDAAkD,CAAC,CAAC;QAC3E,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAElC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACrB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACtB,EAAE,EAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAC;gBACvB,GAAG,EAAC,IAAI,CAAC,GAAE,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;oBACjC,IAAI,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBACtB,GAAG,EAAC,IAAI,CAAC,IAAI,MAAM,CAAC,EAAC;wBACnB,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EACjB,OAAO,GAAG,GAAG,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,CAAC,CAAC,QAAQ,EAAE,GAAC,GAAG,GAAC,GAAG,GAAC,CAAC,CAAC,QAAQ,EAAE,GAAC,GAAG,CAAC;wBACrE,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;oBAC5C,CAAC;gBACH,CAAC;YACH,CAAC;YACD,IAAI,EAAC;gBACH,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QACD,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,GAA0B,CAAC,CAAC;IAC1G,CAAC;IAEM,kCAAQ,GAAf,UAAgB,GAAW,EAAE,IAAS;QACrC,IAAI,WAAW,GAAG,IAAI,gEAAW,EAAE;aAChC,GAAG,CAAC,cAAc,EAAE,kDAAkD,CAAC;QAC1E,IAAI,UAAU,GAAG,IAAI,+DAAU,EAAE,CAAC;QAClC,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACtD,UAAU,GAAG,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,oGAAoG;IAEpG,iGAAiG;IACjG;;OAEG;IACI,0CAAgB,GAAvB;QACA,IAAI,GAAG,GAAG,QAAQ,GAAG,+BAA+B,CAAC;QACrD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAChC,CAAC;IAEM,gCAAM,GAAb;QACA,IAAI,GAAG,GAAG,QAAQ,GAAG,aAAa,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAClC,CAAC;IACD,+FAA+F;IAE/F,oGAAoG;IAE7F,gDAAsB,GAA7B,UAA8B,MAAe;QAAf,oCAAe;QAC5C,IAAI,GAAG,GAAG,QAAQ,GAAC,+BAA+B,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAEM,qCAAW,GAAlB,UAAmB,MAAU;QAC9B,IAAI,GAAG,GAAG,QAAQ,GAAG,oBAAoB,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC;IAEM,oCAAU,GAAjB,UAAkB,MAAU;QAC3B,IAAM,GAAG,GAAG,mDAAmD,CAAC;QAChE,sFAAsF;QACxF,+EAA+E;QAC/E,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,0CAAgB,GAAvB,UAAwB,UAAiB;QACxC,IAAI,MAAM,GAAO,EAAC,MAAM,EAAG,UAAU,EAAC,CAAC;QACvC,IAAM,GAAG,GAAG,QAAQ,GAAC,yCAAyC,CAAC;QAC/D,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,yCAAe,GAAtB,UAAuB,KAAY,EAAC,OAAc,EAAC,UAAiB;QACnE,IAAI,MAAM,GAAO,EAAC,EAAE,EAAG,KAAK,EAAE,QAAQ,EAAG,OAAO,EAAE,WAAW,EAAG,UAAU,EAAC,CAAC;QAC5E,IAAM,GAAG,GAAG,QAAQ,GAAC,sBAAsB,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IACM,2CAAiB,GAAxB,UAAyB,WAAkB;QAC1C,IAAM,GAAG,GAAG,QAAQ,GAAC,mCAAmC,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IACM,qCAAW,GAAlB,UAAmB,MAAa;QAC/B,IAAM,GAAG,GAAG,QAAQ,GAAC,4BAA4B,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IACM,mCAAS,GAAhB,UAAiB,WAAkB;QAClC,mDAAmD;QACnD,IAAM,GAAG,GAAG,QAAQ,GAAC,+BAA+B,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED;;;;OAIG;IACI,sCAAY,GAAnB,UAAoB,MAAU;QAC7B,IAAI,GAAG,GAAG,QAAQ,GAAG,4BAA4B,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAEM,yCAAe,GAAtB,UAAuB,MAAU;QAChC,IAAI,GAAG,GAAG,QAAQ,GAAG,wCAAwC,CAAC;QAC9D,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,kGAAkG;IAElG,uGAAuG;IAEhG,4CAAkB,GAAzB,UAA0B,MAAe;QAAf,oCAAe;QACxC,IAAI,GAAG,GAAG,QAAQ,GAAC,oBAAoB,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,gDAAsB,GAA7B,UAA8B,UAAiB;QAC9C,IAAM,GAAG,GAAU,UAAU,GAAC,gBAAgB,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEM,6CAAmB,GAA1B,UAA2B,MAAU;QACpC,IAAI,GAAG,GAAG,QAAQ,GAAG,6BAA6B,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAEM,6CAAmB,GAA1B,UAA2B,MAAW;QACrC,IAAI,GAAG,GAAG,QAAQ,GAAG,kCAAkC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAEM,sCAAY,GAAnB,UAAoB,MAAW;QAC9B,IAAM,GAAG,GAAG,QAAQ,GAAG,6BAA6B,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;IAED,qGAAqG;IACrG;;;;OAIG;IACI,sCAAY,GAAnB,UAAoB,EAAU,EAAE,UAAkB;QAC9C,IAAM,GAAG,GAAW,QAAQ,GAAG,UAAU,GAAG,gBAAgB,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,EAAC,EAAE,EAAG,EAAE,EAAC,CAAC,CAAC;IAC7C,CAAC;IAEM,6CAAmB,GAA1B,UAA2B,MAAM;QAChC,IAAM,GAAG,GAAG,QAAQ,GAAG,iCAAiC,CAAC;QACzD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IAEM,qCAAW,GAAlB;QACC,IAAM,GAAG,GAAG,QAAQ,GAAG,sBAAsB,CAAC;QAC9C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC/B,CAAC;IACM,0CAAgB,GAAvB,UAAwB,MAAM;QAC7B,IAAM,GAAG,GAAG,QAAQ,GAAG,2BAA2B,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IACM,6CAAmB,GAA1B,UAA2B,MAAM;QAChC,IAAM,GAAG,GAAG,QAAQ,GAAG,8BAA8B,CAAC;QACtD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IACM,8CAAoB,GAA3B,UAA4B,MAAM;QACjC,IAAM,GAAG,GAAG,QAAQ,GAAG,+BAA+B,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IACM,wCAAc,GAArB;QACI,IAAM,GAAG,GAAU,sBAAsB,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IACM,6CAAmB,GAA1B;QACC,IAAM,GAAG,GAAU,4BAA4B,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IACM,8CAAoB,GAA3B,UAA4B,IAAI,EAAC,EAAE;QAClC,IAAI,MAAM,GAAO,EAAC,IAAI,EAAG,IAAI,EAAE,oBAAoB,EAAG,EAAE,EAAC,CAAC;QAC1D,IAAM,GAAG,GAAU,yCAAyC,CAAC;QAC7D,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAnPS,eAAe;QAD3B,gEAAU,EAAE;yCAgBY,+DAAU;OAftB,eAAe,CA2P3B;IAAD,sBAAC;CAAA;AA3P2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACZ;AAI8B;AACwE;AAC1F;AAEJ;AAKvC,IAAM,UAAU,GAAW,MAAM,CAAC,YAAY,CAAC,CAAC;AAIhD;IA+BG,yBAAmB,WAA4B;QAA/C,iBAIC;QAJkB,gBAAW,GAAX,WAAW,CAAiB;QA5B1C,yBAAoB,GAAU,6EAA4B,CAAC;QAC3D,sBAAiB,GAAU,IAAI,CAAC;QAChC,wBAAmB,GAAW,KAAK,CAAC;QAEpC,sBAAiB,GAAU,iFAAgC,CAAC;QAC5D,yBAAoB,GAA+B,KAAK,CAAC,cAAc,CAAC,CAAC,gBAAgB,CAAC,CAAC;QAC3F,iBAAY,GAAqB,IAAI,4CAAO,EAAW,CAAC;QACxD,mBAAc,GAAY,KAAK,CAAC;QAChC,yBAAoB,GAA+B;YACzD,KAAK,EAAgB,EAAE;YACvB,UAAU,EAAW,EAAE;YACpB,UAAU,EAAW,EAAE;YACvB,gBAAgB,EAAM,EAAE;YACxB,iBAAiB,EAAM,EAAE;YAC5B,2BAA2B;YAC3B,OAAO,EAAc,EAAE;YACvB,cAAc,EAAO,EAAE;YACpB,cAAc,EAAO,EAAE;YACvB,kBAAkB,EAAI,CAAC;YACvB,mBAAmB,EAAG,CAAC;YACvB,0BAA0B;YAC1B,aAAa,EAAQ,CAAC;YACtB,cAAc,EAAO,CAAC;YACzB,MAAM,EAAe,KAAK,CAAC,YAAY,CAAC,MAAM;YAC9C,kBAAkB,EAAG,IAAI;SACvB,CAAC;QACM,sBAAiB,GAAQ,IAAI,KAAK,EAAE,CAAC;QAG5C,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAK;YAC7B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;IACR,CAAC;IAEC;;;GAGA;IACF,+CAAqB,GAArB;QACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IACD;;;;;;;;KAQE;IACF,4CAAkB,GAAlB,UAAmB,aAAa;QAC7B,IAAM,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,CAAC;QACvC,0BAAkC,EAAjC,YAAI,EAAE,aAAK,CAAuB;QACzC,IAAM,eAAe,GAA8B;YACjD,EAAE,EAAO,aAAa,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAG,aAAa,CAAC,MAAM,CAAC;YAC9B,IAAI,EAAK,IAAI;YACb,KAAK,EAAI,KAAK,CAAC,wBAAwB;SACxC,CAAC;QACF,KAAK,CAAC,YAAY,CAAC,cAAc,GAAG,eAAe,CAAC;QACpD,IAAI,CAAC,oBAAoB,GAAG,eAAe,CAAC;QAC5C,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IAED,kDAAwB,GAAxB;QACC,IAAI,EAAE,GAAG,IAAI,EACV,GAAG,GAAO;YACJ,KAAK,EAAgB,EAAE;YACvB,UAAU,EAAW,EAAE;YACvB,UAAU,EAAW,EAAE;YACvB,gBAAgB,EAAI,EAAE;YACtB,iBAAiB,EAAM,EAAE;YACzB,2BAA2B;YAC3B,OAAO,EAAc,EAAE;YACvB,cAAc,EAAO,EAAE;YACvB,cAAc,EAAO,EAAE;YACvB,kBAAkB,EAAE,CAAC;YACrB,mBAAmB,EAAI,CAAC;YACxB,0BAA0B;YAC1B,aAAa,EAAS,CAAC;YACvB,cAAc,EAAS,CAAC;YACxB,MAAM,EAAe,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;YACxD,kBAAkB,EAAG,IAAI;SAC1B,CAAC;QACR,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,uCAAuC;QACvC,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACxC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;QAC1E,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,EAAC;YACd,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAEH;;;OAGG;IACF,iCAAO,GAAP,UAAQ,OAAO;QAChB,IAAI,EAAE,GAAG,IAAI,CAAC;QACX,IAAI,IAAI,GAAO,KAAK,CAAC,YAAY,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,6CAAE,CAAC,UAAU,EAAE;YAC5B,YAAY,EAAE,IAAI;YAClB,iBAAiB,EAAE,EAAE,CAAC,iBAAiB;YACvC,+BAA+B;YAC/B,oBAAoB,EAAE,EAAE,CAAC,oBAAoB;YAC7C,KAAK,EAAE,YAAY,GAAC,IAAI,CAAC,OAAO,GAAC,gBAAgB,GAAC,IAAI,CAAC,YAAY;SAChE,CAAC,CAAC;QAEN,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE;YAClC,EAAE,CAAC,oBAAoB,GAAG,sDAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC7D,EAAE,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAC9B,8BAA8B;YACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChE,IAAI,GAAG,GAAO;oBAChB,GAAG,EAAG,IAAI;oBACV,GAAG,EAAG,IAAI;oBACV,UAAU,EAAG,IAAI;oBACjB,UAAU,EAAG,IAAI;oBACjB,SAAS,EAAG,EAAE;oBACd,SAAS,EAAG,CAAC;iBACd,CAAC;gBACF,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;gBAEvF,EAAE,CAAC,oBAAoB,CAAC,UAAU,GAAG,EAAE,CAAC;gBAC9C,EAAE,CAAC,oBAAoB,CAAC,UAAU,GAAG,EAAE,CAAC;gBAC5B,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;oBAC5F,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;gBACrD,CAAC;gBACD,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;oBACtF,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC/C,CAAC;YACO,CAAC;YAAA,CAAC;YACR,qBAAqB;YAClB,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YACtB,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;YAC1B,UAAU,CAAC;gBACb,EAAE,CAAC,iBAAiB,IAAI,KAAK,CAAC;gBAC9B,EAAE,EAAC,iFAAgC,GAAG,EAAE,CAAC,iBAAiB,CAAC,EAAC;oBAC3D,EAAE,CAAC,iBAAiB,GAAG,iFAAgC,CAAC;gBACzD,CAAC;gBACD,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACxB,CAAC,EAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,IAAI;YACzC,EAAE,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC7B,EAAE,CAAC,mBAAmB,GAAG,KAAK,CAAC;YAC5B,EAAE,CAAC,iBAAiB,GAAG,iFAAgC,CAAC;QACzD,CAAC,CAAC,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAS,IAAI;YACrC,0BAA0B;YAC1B,IAAG,CAAC;gBACH,IAAI,IAAI,GAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChC,EAAE,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC;gBACrD,EAAE,CAAC,WAAW,CAAC,EAAE,EAAC,IAAI,EAAC,IAAI,CAAC,YAAY,CAAC,EAAC,OAAO,CAAC,CAAC;gBACnD,eAAe;YAChB,CAAC;YACD,KAAK,EAAC,CAAC,CAAC,EAAC;gBACR,qCAAqC;YACtC,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,UAAS,IAAI;YAC1C,IAAG,CAAC;gBACH,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACrB,IAAI,kBAAkB,GAAG,CAAC,CAAC;gBAE9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACvD,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAC;wBACtH,IAAI,GAAG,GAAO;4BAClB,GAAG,EAAG,IAAI;4BACV,GAAG,EAAG,IAAI;4BACV,UAAU,EAAG,IAAI;4BACjB,UAAU,EAAG,IAAI;4BACjB,SAAS,EAAG,IAAI,CAAC,SAAS;4BAC1B,SAAS,EAAG,CAAC;yBACd,CAAC;wBACF,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;wBAEjF,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;4BAC5F,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;wBACrD,CAAC;wBACD,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;4BACtF,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC/C,CAAC;wBACK,OAAO,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC1F,OAAO,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1E,CAAC;oBACZ,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAE,CAAC,EAAC;wBACzG,kBAAkB,EAAE,CAAC;oBACvB,CAAC;gBACC,CAAC;gBAAA,CAAC;gBACX,EAAE,EAAC,kBAAkB,IAAI,CAAC,CAAC,EAAC;oBACrB,qBAAqB;oBACrB,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAC;gBACL,eAAe;YAChB,CAAC;YACD,KAAK,EAAC,CAAC,CAAC,EAAC;gBACR,qCAAqC;YACtC,CAAC;QACI,CAAC,CAAC,CAAC;QACT,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAS,IAAI;YAC/C,IAAG,CAAC;gBACH,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACrB,IAAI,kBAAkB,GAAG,CAAC,CAAC;gBAE9B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACrD,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAC;wBACvH,IAAI,GAAG,GAAO;4BACb,GAAG,EAAG,IAAI;4BAChB,GAAG,EAAG,IAAI;4BACV,UAAU,EAAG,IAAI;4BACjB,UAAU,EAAG,IAAI;4BACjB,SAAS,EAAG,IAAI,CAAC,SAAS;4BAC1B,SAAS,EAAG,CAAC;yBACd,CAAC;wBACF,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;wBACjF,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;4BAC5F,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;wBACrD,CAAC;wBACD,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;4BACtF,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC/C,CAAC;wBACK,OAAO,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBAC1F,OAAO,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1E,CAAC;oBACZ,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAE,CAAC,EAAC;wBACzG,kBAAkB,EAAE,CAAC;oBACvB,CAAC;gBACC,CAAC;gBAAA,CAAC;gBACF,EAAE,EAAC,kBAAkB,IAAI,CAAC,CAAC,EAAC;oBAC9B,qBAAqB;oBACrB,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;gBAChC,CAAC;gBACD,eAAe;YAChB,CAAC;YACD,KAAK,EAAC,CAAC,CAAC,EAAC;gBACR,qCAAqC;YACtC,CAAC;QACF,CAAC,CAAC,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAS,IAAI;YACjD,IAAG,CAAC;gBACH,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC9B,kCAAkC;gBACjC,EAAE,CAAC,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,2CAA2C;gBAC/E,EAAE,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBAC9B,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;gBAC3B,IAAI;YAEL,CAAC;YACD,KAAK,EAAC,CAAC,CAAC,EAAC;gBACR,qCAAqC;YACtC,CAAC;QACF,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAS,IAAI;YACnD,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,OAAO,CAAC,UAAS,YAAY;gBAC1D,EAAE,EAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAC;oBACrC,IAAI,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC;oBACnC,IAAI,IAAI,GAAG,UAAU,GAAC,GAAG,GAAC,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC;oBACzD,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACnB,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACD,CAAC;IAEJ,sCAAY,GAAZ,UAAa,MAAM;QACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACH,kCAAQ,GAAR,UAAS,IAAI;QACT,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAC,EAAC,IAAI,EAAG,IAAI,EAAC,CAAC,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACH,mCAAS,GAAT,UAAU,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAC,EAAC,IAAI,EAAG,IAAI,EAAC,CAAC,CAAC;IAChD,CAAC;IAED,qCAAW,GAAX,UAAY,EAAE,EAAC,MAAM,EAAC,UAAU,EAAC,OAAO;QACvC,IAAG,CAAC;YACN,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;YAEb,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChE,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,EAAC;oBAC1D,GAAG,GAAG,CAAC,CAAC;oBACR,KAAK,CAAC;gBACP,CAAC;YACF,CAAC;YAAA,CAAC;YAEF,IAAI,GAAG,GAAU,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,GAAG,GAAU,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACxC,IAAI,UAAU,GAAU,MAAM,CAAC,SAAS,CAAC;YACzC,IAAI,UAAU,GAAU,MAAM,CAAC,SAAS,CAAC;YAEzC,EAAE,EAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAC;gBAChB,IAAI,KAAG,GAAO;oBACN,GAAG,EAAG,IAAI;oBACV,GAAG,EAAG,IAAI;oBACV,UAAU,EAAG,IAAI;oBACjB,UAAU,EAAG,IAAI;oBACjB,SAAS,EAAG,EAAE;oBACd,SAAS,EAAG,CAAC;iBACd,CAAC;gBACH,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAG,CAAC,CAAC;gBAC5F,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;oBACvF,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;gBACrD,CAAC;gBACD,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;oBACxF,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC/C,CAAC;gBACD,MAAM,CAAC;YACR,CAAC;YAED,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YACrD,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;YAErD,IAAI,SAAO,GAAO,CAAC,CAAC;YACpB,IAAI,SAAO,GAAO,CAAC,CAAC;YAEpB,IAAI,iBAAe,GAAG,EAAE,CAAC;YACzB,IAAI,iBAAe,GAAG,EAAE,CAAC;YAEzB,mCAAmC;YACnC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG;gBACnE,EAAE,EAAC,SAAO,GAAG,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAC;oBACrD,iBAAe,GAAG,GAAG,CAAC;oBACtB,SAAO,GAAG,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACnD,CAAC;YACF,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,iBAAe,CAAC;YAEzD,mCAAmC;YACnC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG;gBACnE,EAAE,EAAC,SAAO,GAAG,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,SAAO,IAAI,CAAC,CAAC,EAAC;oBACrE,iBAAe,GAAG,GAAG,CAAC;oBACtB,SAAO,GAAG,EAAE,CAAC,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;gBACnD,CAAC;YACF,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,oBAAoB,CAAC,cAAc,GAAG,iBAAe,CAAC;YAEzD,8CAA8C;YACrC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC7D,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YACrD,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;YAChD,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;YAE9D,8CAA8C;YAC9C,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;YAChD,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC;YAE9D,IAAI,WAAW,GAAO,EAAE,CAAC,oBAAoB,CAAC,MAAM,IAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,SAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,SAAO,GAAE,CAAC,EAAE,CAAC,oBAAoB,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;YACnL,IAAI,WAAW,GAAO,EAAE,CAAC,oBAAoB,CAAC,MAAM,IAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,SAAO,GAAC,CAAC,EAAE,CAAC,oBAAoB,CAAC,cAAc,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;YACjL,IAAI,aAAa,GAAO,EAAE,CAAC,oBAAoB,CAAC,MAAM,IAAE,SAAS,CAAC,CAAC,CAAC,SAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5G,IAAI,aAAa,GAAQ,EAAE,CAAC,oBAAoB,CAAC,MAAM,IAAE,SAAS,CAAC,CAAC,CAAE,SAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9G,IAAI,QAAQ,GAAO,aAAa,GAAG,aAAa,CAAC;YACjD,IAAI,YAAY,GAAO,CAAC,CAAC,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC,IAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAEvE,sDAAsD;YAC1D,IAAI,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC;YAClE,EAAE,CAAC,2BAA2B,CAAC,aAAa,EAAC,aAAa,EAAC,MAAM,EAAC,OAAO,CAAC,CAAC;YAE3E,SAAO,GAAG,EAAE,CAAC,oBAAoB,CAAC,MAAM,IAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAO,CAAC,CAAC,CAAC,CAAC,SAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/F,SAAO,GAAG,EAAE,CAAC,oBAAoB,CAAC,MAAM,IAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAO,CAAC,CAAC,CAAC,CAAC,SAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC9F,QAAQ,GAAG,EAAE,CAAC,oBAAoB,CAAC,MAAM,IAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACnG,oDAAoD;YACpD,wFAAwF;YAExF,IAAI,WAAW,GAAG,CAAC,CAAC,EACnB,WAAW,GAAG,CAAC,CAAC,CAAC;YAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAChE,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;oBACtF,WAAW,GAAG,CAAC,CAAC;gBACjB,CAAC;gBACD,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,oBAAoB,CAAC,cAAc,CAAC,EAAC;oBACtF,WAAW,GAAG,CAAC,CAAC;gBACjB,CAAC;YACF,CAAC;YAAA,CAAC;YACF,IAAI,iBAAiB,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,EAC9E,iBAAiB,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,EACvE,iBAAiB,GAAG,iBAAiB,GAAG,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC;YAElG,iBAAiB,GAAG,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,iBAAiB,IAAI,EAAE,CAAC,WAAW,CAAC,iBAAiB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,iBAAiB,CAAC;YAC7J,IAAI,GAAG,GAAG;gBACT,YAAY,EAAS,EAAE,CAAC,oBAAoB,CAAC,cAAc;gBAC3D,aAAa,EAAQ,EAAE,CAAC,oBAAoB,CAAC,cAAc;gBAC3D,cAAc,EAAO,SAAO;gBAC5B,cAAc,EAAO,SAAO;gBAC5B,aAAa,EAAQ,WAAW;gBAChC,aAAa,EAAQ,WAAW;gBAChC,WAAW,EAAU,QAAQ;gBAC7B,eAAe,EAAM,YAAY;gBACjC,aAAa,EAAU,QAAQ;gBAC/B,mBAAmB,EAAE,iBAAiB;gBACtC,mBAAmB,EAAE,iBAAiB;gBACtC,mBAAmB,EAAE,iBAAiB;aAEtC,CAAC;YACF,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAC,OAAO,CAAC,CAAC;QAChC,CAAC;QACD,KAAK,EAAC,CAAC,CAAC,EAAC;YACX,wCAAwC;QACtC,CAAC;IACF,CAAC;IAED,2CAAiB,GAAjB,UAAkB,QAAQ,EAAC,OAAO;QACjC,IAAG,CAAC;YACN,IAAI,GAAG,GAAO,OAAO,CAAC,KAAK,CAAC;YAC5B,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YACnC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACtB,gCAAgC;QAC9B,CAAC;QACD,KAAK,EAAC,CAAC,CAAC,EAAC;YACN,8CAA8C;QAChD,CAAC;QACF,4GAA4G;QAC5G,EAAE,EAAC,IAAI,CAAC,oBAAoB,IAAI,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,EAAC;YAC7D,CAAC;gBACE,oEAAoE;gBACpE,uEAAuE;gBACvE,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC;gBACxD,EAAE,EAAC,OAAO,CAAC,KAAK,CAAC,iBAAiB,GAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC;oBAC7D,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC/B,CAAC;QACJ,CAAC;IACL,CAAC;IAEE,sCAAY,GAAZ,UAAa,OAAO;QACnB,qBAAqB;QAChB,IAAI,GAAG,GAAG;YACR,oBAAoB,EAAK,EAAE;YAC3B,gBAAgB,EAAQ,EAAE;YAC1B,gBAAgB,EAAQ,EAAE;YAC1B,YAAY,EAAQ,EAAE;YACtB,kBAAkB,EAAK,EAAE;YACzB,YAAY,EAAW,EAAE;YACzB,aAAa,EAAU,EAAE;YACzB,cAAc,EAAS,EAAE;YACzB,cAAc,EAAS,EAAE;YACzB,aAAa,EAAU,EAAE;YACzB,aAAa,EAAU,EAAE;YACzB,WAAW,EAAY,EAAE;YACzB,eAAe,EAAQ,EAAE;YACzB,aAAa,EAAY,EAAE;YAC3B,mBAAmB,EAAI,EAAE;YACzB,mBAAmB,EAAI,EAAE;YACzB,mBAAmB,EAAI,EAAE;SAC1B,CAAC;QACJ,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAEF,qDAA2B,GAA3B,UAA4B,aAAa,EAAE,aAAa,EAAE,MAAM,EAAE,OAAO;QACvE,IAAI,cAAc,GAAW,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAC,aAAa,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAC3G,cAAc,GAAW,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAC,aAAa,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACrG,UAAU,GAAe,cAAc,GAAG,cAAc,EACxD,SAAS,GAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC;QAEzE,IAAI,GAAG,GAAG;YACN,oBAAoB,EAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACzC,gBAAgB,EAAO,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAChD,gBAAgB,EAAO,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;YAChD,YAAY,EAAK,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACtC,kBAAkB,EAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;SACpE,CAAC;QACJ,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAC,OAAO,CAAC,CAAC;IACtC,CAAC;IACH,iCAAO,GAAP,UAAQ,KAAK;QACZ,IAAI,MAAM,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;QACpE,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IACD,0CAAgB,GAAhB,UAAiB,UAAU;QACvB,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC;YACH,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,gBAAM;gBAC1D,EAAE,EAAC,MAAM,CAAC,SAAS,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC;oBACtC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;oBACf,6DAA6D;oBAC3D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC/D,IAAM,qBAAqB,GAAuB,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnF,EAAE,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC;4BACjD,EAAE,CAAC,CAAC,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gCAC/C,MAAM,CAAC,KAAK,CAAC;4BACf,CAAC;4BACD,GAAG,GAAG,CAAC,CAAC;4BACR,KAAK,CAAC;wBACR,CAAC;oBACH,CAAC;oBACD,IAAM,IAAI,GAAQ,MAAM,CAAC,MAAM,CAAC,EAC9B,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACjE,YAAY,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAGlE,EAAE,EAAC,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAC;wBACrC,4GAA4G;wBAE5G,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,GAAG,aAAa,CAAC;wBACpE,EAAE,CAAC,oBAAoB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,GAAG,YAAY,CAAC;oBACpE,CAAC;oBACF,EAAE,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,UAAU,CAAC,GAAG,aAAa,CAAC;oBACtE,EAAE,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC;oBACpE,+GAA+G;oBAC/G,EAAE,CAAC,cAAc,EAAE,CAAC;gBACtB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,4CAA4C;gBAC9C,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACX,EAAE;QACJ,CAAC;IACL,CAAC;IACC;;;KAGE;IACF,wCAAc,GAAd;QACE,IAAM,EAAE,GAAG,IAAI,CAAC;QAChB,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG;YACxE,UAAU,IAAI,EAAE,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QACH,IAAI,WAAW,GAAG,CAAC,CAAC;QACpB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG;YACzE,WAAW,IAAI,EAAE,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;QACH,6BAA6B;QAC7B,+EAA+E;QAC/E,iEAAiE;QACjE,MAAM;QAEN,EAAE,CAAC,oBAAoB,CAAC,kBAAkB,GAAG,UAAU,CAAC;QACxD,EAAE,CAAC,oBAAoB,CAAC,mBAAmB,GAAG,WAAW,CAAC;QAC1D,2DAA2D;IAC7D,CAAC;IAhiBS,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAgCiC,0EAAe;OA/BrC,eAAe,CAiiB3B;IAAD,sBAAC;CAAA;AAjiB2B;;;;;;;;;;;;;AClB5B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXlC,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ApiSettingsComponent } from './components/api-settings/api-settings.component';\r\nimport { TradeLogComponent } from './components/trade-log/trade-log.component';\r\nimport { UserSettingsComponent } from './components/user-settings/user-settings.component';\r\nimport { FundTransferComponent } from './components/fund-transfer/fund-transfer.component';\r\n\r\nconst routes: Routes = [\r\n\t\t{ path : '' , redirectTo: 'dashboard', pathMatch: 'full'},\r\n\t\t{ path : 'dashboard' , component : HomeComponent},\r\n\t\t{ path : 'apiSettings' , component : ApiSettingsComponent},\r\n\t    { path : 'tradeLog' , component : TradeLogComponent},\r\n\t    { path : 'user-settings' , component : UserSettingsComponent},\r\n\t    { path : 'fund-transfer' , component : FundTransferComponent}\r\n\t// \t{ path : 'user', loadChildren: () => FrontendModule, canActivate : [AuthGuard]},\r\n\t// { path : 'login' , component : LoginComponent, data: {title : 'Login | Orbit'}},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash : true})],\r\n  exports: [ RouterModule],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"right_col page-wrapper {{pageCls}}\\\" role=\\\"main\\\">\\r\\n  <div class=\\\"outer-wrap\\\">\\r\\n    <app-side-bar></app-side-bar>\\r\\n    <div id=\\\"main-content\\\" class = \\\"main-content home\\\">\\r\\n    <app-header></app-header>\\r\\n      <div class=\\\"contents-wrapper\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\ndeclare var alertify;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ng-bitbase-frontend';\r\n  pageCls = 'dashboard';\r\n  constructor(public router: Router, public  activatedRoute: ActivatedRoute) {\r\n    this.router.events.subscribe((event: any) => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.pageCls = this.router.url.substring(1, this.router.url.length);\r\n        //alertify.success(this.pageCls);\r\n      }\r\n    }\r\n  );\r\n}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule }  from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './/app-routing.module';\r\nimport { HeaderComponent } from './components/common/header/header.component';\r\nimport { SideBarComponent } from './components/common/side-bar/side-bar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ApiSettingsComponent } from './components/api-settings/api-settings.component';\r\nimport { TradeLogComponent } from './components/trade-log/trade-log.component';\r\nimport { FrontendService } from './services/frontend.service';\r\nimport { SocketIoService } from './services/socket-io.service';\r\nimport { BitNumberPipe } from './pipes/bit-number.pipe';\r\nimport { DataTablesModule } from 'angular-datatables';\r\n// import { NgDatepickerModule } from 'ng2-datepicker';\r\nimport { TradeFormDataComponent } from './components/trade-form-data/trade-form-data.component';\r\nimport { OrderDetailModalComponent } from './components/order-detail-modal/order-detail-modal.component';\r\nimport { LoadingMaskComponent } from './components/common/loading-mask/loading-mask.component';\r\nimport { ModalComponent } from './components/ng-modal/modal.component';\r\nimport { NgAlertComponent } from './components/common/ng-alert/ng-alert.component';\r\nimport { TickerDatagridComponent } from './components/home/ticker-datagrid/ticker-datagrid.component';\r\nimport { MinSpredModalComponent } from './components/min-spred-modal/min-spred-modal.component';\r\nimport { TradeLogDatagridComponent } from './components/home/trade-log-datagrid/trade-log-datagrid.component';\r\n// import { ProfileComponent } from './components/user-settings/profile/profile.component';\r\nimport { UserSettingsComponent } from './components/user-settings/user-settings.component';\r\nimport { UserInfoComponent } from './components/user-settings/user-info/user-info.component';\r\nimport { GeneralSettingsComponent } from './components/user-settings/general-settings/general-settings.component';\r\nimport { PasswordInfoComponent } from './components/user-settings/password-info/password-info.component';\r\nimport { FundTransferComponent } from './components/fund-transfer/fund-transfer.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    SideBarComponent,\r\n    HomeComponent,\r\n    ApiSettingsComponent,\r\n    TradeLogComponent,\r\n    BitNumberPipe,\r\n    TradeFormDataComponent,\r\n    OrderDetailModalComponent,\r\n    LoadingMaskComponent,\r\n    ModalComponent,\r\n    NgAlertComponent,\r\n    TickerDatagridComponent,\r\n    MinSpredModalComponent,\r\n    TradeLogDatagridComponent,\r\n    UserInfoComponent,\r\n    GeneralSettingsComponent,\r\n    PasswordInfoComponent,\r\n    UserSettingsComponent,\r\n    FundTransferComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    DataTablesModule,\r\n    // NgDatepickerModule,\r\n  ],\r\n  providers: [FrontendService, SocketIoService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".error{\\r\\n\\tborder:  3px solid red;\\r\\n}\"","module.exports = \"<div class=\\\"container container-fx\\\">\\r\\n\\t<form  [formGroup]=\\\"apiSettingForm\\\" method=\\\"POST\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"market-view api-settings-table secondary-tble\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 80px;\\\"><label class=\\\"on-off head\\\">On/Off</label></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 80px;\\\"><label class=\\\"crypt-market-img head\\\">Market</label></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 40px;\\\"><label class=\\\"country-flag head\\\"></label></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 170px;\\\"><label class=\\\"api-keys-input head\\\">API KEYS</label></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 170px;\\\"><label class=\\\"secret-keys-input head\\\">SECRET KEYS</label></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 100px;\\\"><label class=\\\"verify-btn-input head\\\"></label></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr formArrayName=\\\"apiKeys\\\" *ngFor=\\\"let control of apiSettingFormData.controls;let i=index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container [formGroupName]=\\\"i\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"apiSettingData?.length > 0;else defaultTemplate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"switch select-area\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"apiSettingData[i]['is_locked'] == '0'; else offExchangeMarket\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"{{apiSettingData[i]['code']}}\\\" (change)=\\\"onOffStatusChange($event,i,apiSettingData[i]['code'],apiSettingData[i]['id'])\\\" type=\\\"checkbox\\\" checked  formControlName=\\\"is_locked\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #offExchangeMarket>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"{{apiSettingData[i]['code']}}\\\" (change)=\\\"onOffStatusChange($event,i,apiSettingData[i]['code'],apiSettingData[i]['id'])\\\" type=\\\"checkbox\\\"  formControlName=\\\"is_locked\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"slider\\\"></span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"crypt-market-img\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"{{frontendApi.BASE_URL}}images/{{apiSettingData[i].image}}\\\" alt=\\\"{{control.code}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"country-flag\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"{{frontendApi.BASE_URL}}images/flags/{{apiSettingData[i].country}}.png\\\" alt=\\\" {{apiSettingData[i].country}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"api-keys-input form-control btn-sq\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"{{apiSettingData[i].api_key}}\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass] = \\\"{ 'error' : control.get('api_key').invalid }\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"api_key\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"onApiKeyChange($event.target.value, i)\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"secret-keys-input form-control btn-sq\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"{{apiSettingData[i].secret_key}}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass] = \\\"{ 'error' : control.get('secret_key').invalid }\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"secret_key\\\"  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"onSecretKeyChange($event.target.value, i)\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"btn verify-btn \\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'btn-success':apiSettingData[i]['is_valid_api_keys'] == '1',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t'btn-danger':apiSettingData[i]['is_valid_api_keys'] == '0',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t'btn-primary':apiSettingData[i]['is_valid_api_keys']==null}\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"onVerifyBtnClick($event, i,apiSettingData[i]['code'],apiSettingData[i]['id'])\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\\"button\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvalue=\\\"{{apiSettingData[i]['is_valid_api_keys'] == '1' ? 'Verified' : 'Verify' && apiSettingData[i]['is_valid_api_keys']== '0' ? 'Invalid' : 'Verify'}}\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'fa-check-circle verify-success':apiSettingData[i]['is_valid_api_keys']=='1',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t'fa-times-circle verify-fail':apiSettingData[i]['is_valid_api_keys']=='0'}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-spin fa-spinner\\\" *ngIf=\\\"i==verifyLoadingImgRowIdx\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<ng-template #defaultTemplate>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><span class=\\\"on-off head\\\"></span></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><span class=\\\"crypt-market-img\\\"></span></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><span class=\\\"country-flag\\\"></span></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"api-keys-input form-control btn-sq\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"api_key\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"onApiKeyChange($event.target.value, i)\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"secret-keys-input form-control btn-sq\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tformControlName=\\\"secret_key\\\"  \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(change)=\\\"onSecretKeyChange($event.target.value, i)\\\"/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <input class=\\\"btn verify-btn btn-primary\\\" (click)=\\\"onVerifyBtnClick($event, i,apiSettingData[i]['code'],apiSettingData[i]['id'])\\\" type=\\\"button\\\" value=\\\"Verify\\\" /> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- min Spred Percentage Start-->\\r\\n\\t\\t\\t\\t<!-- <div class=\\\"market-view min-spred-table secondary-tble\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 300px; vertical-align: middle;\\\"><label class=\\\"on-off head\\\">MINIMUM SPRED PERCENTAGE</label></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"0.01\\\" class=\\\"api-keys-input form-control btn-sq\\\" formControlName=\\\"minSpredPercentage\\\" placeholder=\\\"minimum spred percentage\\\" [ngClass] = \\\"{ 'error' : apiSettingForm.get('minSpredPercentage').invalid }\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div> -->\\r\\n\\t\\t\\t\\t<!-- min Spred Percentage End -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-3\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"Submit\\\" class=\\\"btn btn-success btn-large\\\" value=\\\"Save\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"button\\\" class=\\\"btn btn-danger btn-large\\\" value=\\\"Reset\\\"  (click)=\\\"onReset()\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router,ActivatedRoute} from '@angular/router';\r\nimport { FormGroup, FormBuilder , FormArray, FormControl, Validators } from '@angular/forms';\r\nimport { FrontendService } from '../../services/frontend.service';\r\nimport { API_SETTINGS } from '../../config/lang';\r\ndeclare let alertify: any;\r\n\r\n@Component({\r\n  selector: 'app-api-settings',\r\n  templateUrl: './api-settings.component.html',\r\n  styleUrls: ['./api-settings.component.css'] \r\n})\r\nexport class ApiSettingsComponent implements OnInit {\r\n\r\n  public apiSettingData: Array<any>;\r\n  public apiSettingForm: FormGroup;\r\n  // public minSpredData  : Array<any>;\r\n  public verifyLoadingImgRowIdx:number= null;\r\n  constructor(public router: Router, public route:ActivatedRoute,\r\n    public frontendApi:FrontendService, public fb : FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n    this.getApiSettingsList();\r\n    // this.getMinimumSpredPercent();\r\n  }\r\n\r\n  getApiSettingsList(){\r\n    let me = this;\r\n    this.frontendApi.getApiSettingsList({}).subscribe(res => {\r\n      this.apiSettingData = res.data;\r\n      this.removeKeyItem(0);\r\n      this.apiSettingData.forEach(function(item){\r\n        // add address to the list\r\n        const control = <FormArray>me.apiSettingForm.controls['apiKeys'];\r\n        control.push(me.createKeyItems(item));\r\n      });\r\n\r\n    }); \r\n  }\r\n\r\n  // getMinimumSpredPercent(){\r\n  //   this.frontendApi.getMinSpredPercentData('client').subscribe(res => {\r\n  //     this.minSpredData = res['data'];\r\n  //     if(res['success'] && res['data']){\r\n  //       let minSpredPercent = res['data'];\r\n  //       this.apiSettingForm.controls.minSpredPercentage.setValue(minSpredPercent);\r\n  //     }\r\n  //   });\r\n  // }\r\n  \r\n  get apiSettingFormData() {\r\n  \treturn <FormArray>this.apiSettingForm.get('apiKeys');\r\n  }\r\n\r\n  createForm(){\r\n     this.apiSettingForm = this.fb.group({\r\n        apiKeys : this.fb.array([ this.createKeyItems()]),\r\n        minSpredPercentage : ['',[Validators.max(100),Validators.min(0)]],\r\n     });\r\n     // this.formControlValueChanged();\r\n  }\r\n\r\n  // formControlValueChanged(){\r\n  //   this.apiSettingForm.get('apiKeys').valueChanges.subscribe((mode:string) => {\r\n  //     console.log(mode);\r\n  //   });\r\n  // }\r\n  \r\n  createKeyItems(data:any = {}) : FormGroup {\r\n    return this.fb.group({\r\n      id               : data.id || '', \r\n      market_id        : data.market_id || '', \r\n      api_key          : '',\r\n      secret_key       : '', \r\n      upsert           : 0,\r\n      is_locked        : data.is_locked ? 0 : 1 ,\r\n      is_valid_api_keys: data.is_valid_api_keys,\r\n    });\r\n  }\r\n\r\n  removeKeyItem(idx:number){\r\n    // remove apiKeys from the list\r\n    const control = <FormArray>this.apiSettingForm.controls['apiKeys'];\r\n    control.removeAt(idx);\r\n  }\r\n\r\n  onApiKeyChange(value, idx){\r\n    const control = <FormArray>this.apiSettingForm.controls['apiKeys'],\r\n      subControl:any = control.controls[idx];\r\n    \r\n    if(value.length > 0){\r\n      subControl.controls['secret_key'].setValidators([Validators.required]);\r\n      subControl.controls['upsert'].setValue(1);\r\n      this.apiSettingData[idx]['is_valid_api_keys']=null;\r\n    }\r\n    else{\r\n      subControl.controls['secret_key'].clearValidators();\r\n      subControl.controls['upsert'].setValue(0);\r\n      this.apiSettingData[idx]['is_valid_api_keys']=subControl.controls['is_valid_api_keys'].value;\r\n    }\r\n    subControl.controls['secret_key'].updateValueAndValidity();\r\n  }\r\n\r\n  onSecretKeyChange(value, idx){\r\n    const control = <FormArray>this.apiSettingForm.controls['apiKeys'],\r\n    subControl:any = control.controls[idx];\r\n    \r\n    if(value.length > 0){\r\n      subControl.controls['api_key'].setValidators([Validators.required]);\r\n      subControl.controls['upsert'].setValue(1);\r\n      this.apiSettingData[idx]['is_valid_api_keys']=null;\r\n    }\r\n    else{\r\n      subControl.controls['api_key'].clearValidators();\r\n      subControl.controls['upsert'].setValue(0);\r\n      this.apiSettingData[idx]['is_valid_api_keys']=subControl.controls['is_valid_api_keys'].value;\r\n    }\r\n    subControl.controls['api_key'].updateValueAndValidity();\r\n  }\r\n\r\n  onSubmit(){\r\n    let me =this;\r\n    if(this.apiSettingForm.valid){\r\n      let formValue:Array<any> = this.apiSettingForm.value.apiKeys;\r\n      let postData = [];\r\n      formValue.forEach(function(item){\r\n        if(item.upsert === 1){\r\n          postData.push({\r\n            id         : item.id,\r\n            market_id  : item.market_id,\r\n            api_key    : item.api_key,\r\n            secret_key : item.secret_key\r\n          });\r\n        }\r\n      });\r\n      if(postData.length==0/* && this.apiSettingForm.value.minSpredPercentage===this.minSpredData*/)\r\n      {\r\n        alertify.error(API_SETTINGS.errors.noChanges);\r\n        return;\r\n      }\r\n      alertify.confirm(API_SETTINGS.confirm.save,function(){\r\n        if(postData.length>0){\r\n            me.frontendApi.saveClientMarketApi(postData).subscribe(response => {\r\n              if(response.success){\r\n                alertify.success(response['msg']);\r\n                me.apiSettingData = [];\r\n                me.createForm();\r\n                me.getApiSettingsList();\r\n                // me.getMinimumSpredPercent();\r\n              }\r\n              else{\r\n                alertify.error(response['msg']);\r\n              }\r\n            });\r\n          }\r\n        // if(me.apiSettingForm.controls.minSpredPercentage.valid){\r\n        //   let min_Spred_Percentage = me.apiSettingForm.value.minSpredPercentage;\r\n        //   if(min_Spred_Percentage===me.minSpredData){\r\n        //     //do nothing\r\n        //   }\r\n        //   else if(min_Spred_Percentage<0){\r\n        //     // alertify.error('Minimum Spred Percentage must be a positive number');\r\n        //     alertify.error(API_SETTINGS.errors.minSpredNegative);\r\n        //     me.getMinimumSpredPercent();\r\n        //   }\r\n        //   else{\r\n        //     me.frontendApi.saveMinSpredPercent(min_Spred_Percentage).subscribe(response =>{\r\n        //       if(response['success'] == true)\r\n        //       {\r\n        //         me.frontendApi.min_spred_percent = min_Spred_Percentage;\r\n        //         alertify.success(response['message']);\r\n        //       }\r\n        //       else\r\n        //       {\r\n        //         alertify.error(response['message']);\r\n        //       }\r\n        //       me.getMinimumSpredPercent();\r\n        //     });\r\n        //   }\r\n        // }\r\n      });\r\n    }\r\n  }\r\n\r\n  onOffStatusChange(event,rowIdx,exchangeId,recId){ // off =1 on=0\r\n    if(recId===null){\r\n      // alertify.error('Record not found please Save the Record First!');\r\n      alertify.error(API_SETTINGS.errors.idEmpty);\r\n    }\r\n    else\r\n    {\r\n      let controllerName = 'client-market';\r\n      this.frontendApi.toggleStatus(recId,controllerName).subscribe(res=>{\r\n        if(res['success']==true)\r\n        {\r\n          alertify.success(res['message']);\r\n        }\r\n        else{\r\n          alertify.error(res['message']);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onReset()\r\n  {\r\n    for (var i = 0; i < this.apiSettingData.length; ++i) {\r\n      this.apiSettingForm.controls.apiKeys['controls'][i].controls.api_key.setValue(\"\")\r\n      this.apiSettingForm.controls.apiKeys['controls'][i].controls.secret_key.setValue(\"\");\r\n      this.apiSettingForm.controls.apiKeys['controls'][i].controls.upsert.setValue(0);\r\n    }\r\n    // this.getMinimumSpredPercent();\r\n  }\r\n\r\n  onVerifyBtnClick(event,rowIdx,exchangeId,recId){\r\n    let me = this;\r\n    this.verifyLoadingImgRowIdx = rowIdx;\r\n    try {\r\n      let rec = this.apiSettingForm.controls.apiKeys['controls'][rowIdx].value;\r\n      if(rec.upsert == 1 && (!rec.api_key || !rec.secret_key)){\r\n        // alertify.error(\"Api/Secret Keys Are Invalid For \"+exchangeId);\r\n        alertify.error(API_SETTINGS.errors.keysInvalid+exchangeId);\r\n        this.verifyLoadingImgRowIdx = null;\r\n        return;\r\n      }\r\n      let params = {\r\n        'market_code' : exchangeId,\r\n        'client_market_id' : recId,\r\n        'upsert' : rec.upsert,\r\n        'api_key' : rec.api_key,\r\n        'secret_key' : rec.secret_key\r\n      };\r\n      me.frontendApi.verifyApiKey(params).subscribe(result => {\r\n        this.verifyLoadingImgRowIdx = null;\r\n        let idx = -1;\r\n        for (var i = 0; i < me.apiSettingData.length; i++) {\r\n          if(me.apiSettingData[i]['id'] == recId){\r\n            idx = i;\r\n          }\r\n        }\r\n        if(result['success']){\r\n          alertify.success(result['message']);\r\n          me.apiSettingData[idx]['is_valid_api_keys'] = 1;\r\n        }\r\n        else{\r\n          alertify.error(result['message']);\r\n          me.apiSettingData[idx]['is_valid_api_keys'] = 0;\r\n        }\r\n      });\r\n    } catch (e) {\r\n      //\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- top navigation -->\\r\\n<div class=\\\"top-bar top_nav\\\">\\r\\n    <div class=\\\"nav_menu\\\">\\r\\n        <div class=\\\"container pos-r\\\">\\r\\n            <nav class=\\\"row\\\" role=\\\"navigation\\\">\\r\\n                <div class=\\\"col-md-9\\\">\\r\\n                    <a href=\\\"javascript:void(0);\\\" class=\\\"toggler\\\" (click)=\\\"toggleSideBaMenu()\\\"><span class=\\\"toggler-span\\\"></span></a>\\r\\n                    <a [routerLink]=\\\"['/dashboard']\\\" class=\\\"app-name logo\\\">\\r\\n                        <img src=\\\"{{frontendApi.BASE_URL}}images/orbit.svg\\\" alt=\\\"Orbit\\\" class=\\\"svg\\\">\\r\\n                    </a>\\r\\n                    <ul class=\\\"float-left nav navbar-nav market-currency\\\">\\r\\n                        <li *ngFor=\\\"let item of walletList\\\" [ngClass]=\\\"{'active':item.id == socketService.activeWalletSelModel.id}\\\" (click)=\\\"onWalletTabChange(item)\\\">\\r\\n                            <a href=\\\"javascript:void(0);\\\">{{item.code}}</a>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <div *ngIf=\\\"enableSingleTrade\\\" class=\\\"trade-action-toggle\\\">\\r\\n                        <span>Trade Action</span>\\r\\n                        <div class=\\\"switch\\\">\\r\\n                            <input type=\\\"checkbox\\\" checked (change)=\\\"onTradeActionToggle($event.target.checked)\\\" *ngIf=\\\"socketService.clientWalletSelModel.tradeActionChecked;else uncheckedToggleBtn\\\">\\r\\n                            <ng-template #uncheckedToggleBtn>\\r\\n                                <input type=\\\"checkbox\\\" (change)=\\\"onTradeActionToggle($event)\\\">\\r\\n                            </ng-template>\\r\\n                            <span class=\\\"slider\\\"></span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <ul class=\\\"navbar float-right user-menu mb-0 p-0\\\">\\r\\n\\r\\n                        <li class=\\\"nav-item\\\">\\r\\n                            <p class=\\\"user-profile\\\">{{getFullName()}}</p>\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </nav>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '@services/frontend.service';\r\nimport { SocketIoService } from '@services/socket-io.service';\r\nimport { WalletMaster } from '@models/wallet-master.model';\r\n\r\ndeclare let Orbit: any;\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  public enableSingleTrade: boolean = Orbit['CURRENT_USER']['enable_single_trade'] === 1 ? true : false;\r\n  public walletList: Array<WalletMaster> = [];\r\n\r\n  constructor(public frontendApi: FrontendService, public socketService: SocketIoService) { }\r\n\r\n  ngOnInit() {\r\n    this.getWalletList();\r\n  }\r\n\r\n  getFullName(){\r\n    return Orbit['CURRENT_USER']['full_name'];\r\n  }\r\n\r\n  /**\r\n   * Fetch Wallet master list.\r\n   */\r\n  getWalletList() {\r\n    this.frontendApi.getDefaultWallet().subscribe(res => {\r\n      if (res['success']) {\r\n        this.walletList = res['data'];\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @author ROHAN\r\n   * On wallet selection change, set active wallet\r\n   * @param {[Object]} walletItem [selected wallet]\r\n   */\r\n  onWalletTabChange(walletItem) {\r\n    this.socketService.changeActiveWallet(walletItem);\r\n    // let params = {wallet_id : this.socketService.activeWalletSelModel['id']};\r\n    // this.frontendApi.getTradeLog(params).subscribe(res => {\r\n    //   this.frontendApi.homeTradeLogData = res['data'];\r\n    // });\r\n  }\r\n\r\n  /**\r\n   * On Trade Action input checkbox change event.\r\n   * @param {[boolean]} checked [trade action checked/unchecked]\r\n   */\r\n  onTradeActionToggle(checked: boolean) {\r\n    this.socketService.clientWalletSelModel.tradeActionChecked = checked;\r\n  }\r\n\r\n  /**\r\n   * Side bar menu toggler event from header\r\n   */\r\n  toggleSideBaMenu() {\r\n    this.frontendApi.sideBarStatus = !this.frontendApi.sideBarStatus;\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"progress-screen\\\">\\n\\t<p>\\n\\t\\t<img src=\\\"{{frontendApi.BASE_URL}}images/processing.gif\\\" alt=\\\"\\\">\\n\\t\\t<span>{{mask_text}}</span>\\n\\t</p>\\n</div> \"","import { Component, OnInit, Input } from '@angular/core';\nimport { FrontendService } from '../../../services/frontend.service';\n\n@Component({\n  selector: 'app-loading-mask',\n  templateUrl: './loading-mask.component.html',\n  styleUrls: ['./loading-mask.component.css']\n})\nexport class LoadingMaskComponent implements OnInit {\n  \n  constructor(public frontendApi: FrontendService) { }\n  @Input() mask_text:any;\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<!-- <div  class=\\\"connection-error-alert\\\" role=\\\"alert\\\"> -->\\r\\n  <div class=\\\"connection-{{alert_type}}-alert\\\" role=\\\"alert\\\">\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t<div class=\\\"alert alert-{{alert_type}} text-center\\\">\\r\\n        <i class=\\\"fa {{messageCls}}\\\"></i>&nbsp;\\r\\n        {{message}}\\r\\n        <span class=\\\"reconnect\\\" (click)=\\\"onReconnectClick()\\\">\\r\\n          Reconnect\\r\\n        </span>\\r\\n        &nbsp;<span>OR</span>\\r\\n        <span class=\\\"reload-text-menu fa fa-repeat\\\" (click)=\\\"onReloadClick()\\\">\\r\\n          Reload\\r\\n        </span>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ng-alert',\r\n  templateUrl: './ng-alert.component.html',\r\n  styleUrls: ['./ng-alert.component.css']\r\n})\r\nexport class NgAlertComponent implements OnInit {\r\n  /* OUTPUTS SOCKET RECONNECT EVENT */\r\n  @Output() reconnectSocket  = new EventEmitter();\r\n  /* MESSAGE TO BE DISPLAYED IN ALERT BAR */\r\n  @Input() message: string;\r\n  /* ALERT TYPE : WARNING | DANGER | INFO | PRIMARY etc. */\r\n  @Input() alert_type: string;\r\n  private messageClsArr: any = {\r\n    error : 'fa-exclamation-triangle'\r\n  };\r\n  public messageCls = '';\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.messageClsArr.hasOwnProperty(this.alert_type)) {\r\n      this.messageCls = this.messageClsArr[this.alert_type];\r\n    }\r\n\r\n  }\r\n  /**\r\n   * @author AMIR\r\n   * \"Reconnect\" link click event handler.\r\n   * @returns Emit \"reconnectSocket\" click event\r\n   */\r\n  onReconnectClick() {\r\n    this.reconnectSocket.emit(true);\r\n  }\r\n\r\n  /**\r\n   * @author AMIR\r\n   * \"Reload\" link click event handler.\r\n   * Reloads the application\r\n   */\r\n  onReloadClick() {\r\n    window.location.reload();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div id=\\\"side-menu\\\" class=\\\"nav side-menu\\\" [ngClass]=\\\"{'open' : frontendApi.sideBarStatus}\\\">\\r\\n\\t<nav class=\\\"navbar d-block px-0 pt-0 w-100\\\">\\r\\n\\t\\t<ul class=\\\"side-nav navbar-nav\\\">\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/dashboard']\\\" class=\\\"nav-link p-3\\\" (click)=\\\"onMenuClick('dashboard')\\\">\\r\\n\\t\\t\\t\\t\\t<span>\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-dashboard\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<label>Dashboard</label>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/apiSettings']\\\" class=\\\"nav-link p-3\\\" (click)=\\\"onMenuClick('apiSettings')\\\">\\r\\n\\t\\t\\t\\t\\t<span>\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-key\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<label>API Keys Settings</label></span></a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/fund-transfer']\\\" class=\\\"nav-link p-3\\\" (click)=\\\"onMenuClick('fundTransfer')\\\">\\r\\n\\t\\t\\t\\t\\t<span><i class=\\\"fa fa-exchange\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<label>Fund Transfer</label>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/tradeLog']\\\" class=\\\"nav-link p-3\\\" (click)=\\\"onMenuClick('tradeLog')\\\">\\r\\n\\t\\t\\t\\t\\t<span><i class=\\\"fa fa-table\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<label>Trade Log</label>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\r\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/user-settings']\\\" class=\\\"nav-link p-3\\\" (click)=\\\"onMenuClick('profile')\\\">\\r\\n\\t\\t\\t\\t\\t<span>\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-gear\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<label>Settings</label>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item\\\" (click)=\\\"onReloadClick()\\\">\\r\\n\\t\\t\\t\\t<a  href=\\\"javascript:void(0)\\\" class=\\\"nav-link p-3\\\">\\r\\n\\t\\t\\t\\t\\t<span>\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-repeat\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<label>Restart</label>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t\\t<li class=\\\"nav-item logout\\\" (click)=\\\"userLogout()\\\">\\r\\n\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" class=\\\"nav-link p-3\\\">\\r\\n\\t\\t\\t\\t\\t<span>\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-sign-out\\\"></i>\\r\\n\\t\\t\\t\\t\\t\\t<label>Logout</label>\\r\\n\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</ul>\\r\\n\\t</nav>\\r\\n\\t<div class=\\\"menu-bottom\\\">\\r\\n\\t\\t<ul class=\\\"nav navbar-nav navbar-right mode-menu\\\">\\r\\n\\t\\t\\t<li><a href=\\\"javascript:void(0);\\\" class=\\\"toggle-mode\\\" data-mode=\\\"day\\\" (click)=\\\"changeTheme('day')\\\">Day Mode</a></li>\\r\\n\\t\\t\\t<li><a href=\\\"javascript:void(0);\\\" class=\\\"toggle-mode\\\" data-mode=\\\"night\\\" (click)=\\\"changeTheme('night')\\\">Night Mode</a></li>\\r\\n\\t\\t</ul>\\r\\n\\t\\t<!-- <ul class=\\\"nav navbar-nav user-menu-bottom\\\">\\r\\n\\t\\t\\t<li><a href=\\\"javascript:void(0);\\\" class=\\\"fa fa-setting\\\"><i class=\\\"fa fa-cog\\\"></i></a></li>\\r\\n\\t\\t\\t<li class=\\\"logout\\\" (click)=\\\"userLogout()\\\"><a href=\\\"javascript:void(0)\\\" class=\\\"fa fa-setting\\\"><i class=\\\"fa fa-sign-out\\\"></i></a></li>\\r\\n\\t\\t</ul> -->\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ElementRef, Output, EventEmitter, HostListener } from '@angular/core';\r\nimport { FrontendService} from './../../../services/frontend.service';\r\nimport { SocketIoService } from './../../../services/socket-io.service';\r\n\r\ndeclare let alertify: any;\r\ndeclare let Orbit: any;\r\n\r\n@Component({\r\n  selector: 'app-side-bar',\r\n  templateUrl: './side-bar.component.html',\r\n  styleUrls: ['./side-bar.component.css']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n\r\n  constructor(public frontendApi: FrontendService, public socketService:SocketIoService, private _elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changeTheme(day){\r\n\r\n  }\r\n\r\n  userLogout(){\r\n    let me = this;\r\n  \tvar message = \"Do you want to logout?\";\r\n  \talertify.confirm(message, function(e) {\r\n      if(e) {\r\n        me.frontendApi.logout().subscribe(res => {\r\n          let BASE_URL = window['BASE_URL'];\r\n          window.location.href = BASE_URL + 'auth';\r\n        });\r\n  \t\t}\r\n  \t});\r\n  }\r\n\r\n  /**\r\n   * @author ROHAN :: 2018-09-21\r\n   * SIDE-BAR PANEL SHOW/HIDE FUNCTIONALITY\r\n   * 1. If clicked anywhere in the body then hide the sidebar.\r\n   * 2. If clicked on header toggler icon then do nothing.\r\n   * 3. If clicked on side-bar menu items then hide sidebar.\r\n   * 4. if clicked inside side-bar panel's blank space then do nothing.\r\n   */\r\n  @HostListener('document:click', ['$event', '$event.target'])\r\n  public onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n    let evtClass = event['target']['attributes']['class'];\r\n    if (!targetElement || !targetElement.className) {\r\n      return;\r\n    }\r\n    else{\r\n      let togglerAnchorClassName = 'toggler';\r\n      let togglerSpanClassName = 'toggler-span';\r\n      /**\r\n       * IF TOGGLER ANCHOR TAG OR SPAN TAG INSIDE ANCHOR TAG IS CLICKED THEN DO NOTHING.\r\n       * TOGGLER CLICK EVENT IS TRIGGERED FROM HEADER COMPONENT\r\n       */\r\n      let className = targetElement.className.toString();\r\n      if(className.indexOf(togglerAnchorClassName) > -1 || className.indexOf(togglerSpanClassName) > -1 ){\r\n        return;\r\n      }\r\n    }\r\n    const clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n    /**\r\n     * IF MOUSE CLICK IS NOT INSIDE SIDEBAR THEN HIDE SIDEBAR.\r\n     */\r\n    if (!clickedInside) {\r\n      if(this.frontendApi.sideBarStatus){\r\n        this.frontendApi.sideBarStatus = false;  \r\n      }\r\n    }\r\n    /**\r\n     * IF MOUSE CLICK IS INSIDE SIDEBAR.\r\n     */\r\n    else{\r\n      let sideBarNoHideClassList = ['navbar', 'nav_menu', 'menu-bottom', 'side-menu'];\r\n      let isNoHideClsExists:boolean = false;\r\n      let targetClassName:string = targetElement.className.toString();\r\n      sideBarNoHideClassList.forEach(function(clsName){\r\n        if(targetClassName.indexOf(clsName) > -1){\r\n          isNoHideClsExists = true;\r\n        }\r\n      });\r\n      /**\r\n       * IF CLICKED ON ANY BLANK AREA OF SIDEBAR THEN DONOT HIDE THE PANEL.\r\n       * ELSE HIDE THE SIDEBAR PANEL. \r\n       */\r\n      if(isNoHideClsExists){\r\n        return;\r\n      } \r\n      else{\r\n        this.frontendApi.sideBarStatus = false;  \r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * [onMenuClick]\r\n   * @param {string} pnlName [clicked panel name]\r\n   */\r\n  onMenuClick(pnlName:string){\r\n    let me = this;\r\n    if(pnlName != 'dashboard'){\r\n      /*let obj:any = {\r\n              items              : [],\r\n              bidRateArr         : {},\r\n              askRateArr         : {},\r\n              base_balance_arr  : {},\r\n              quote_balance_arr    : {},\r\n              // cash_balance_arr   : {},\r\n              tickers            : {},\r\n              max_bid_market     : '',\r\n              min_ask_market     : '',\r\n              base_balance_total: 0,\r\n              quote_balance_total  : 0,\r\n              // cash_balance_total : 0,\r\n              base_jpy_rate       : 0,\r\n              quote_jpy_rate       : 0,\r\n              symbol             : Orbit.CURRENT_USER.symbol,\r\n              tradeActionChecked : true\r\n            };\r\n      me.socketService.isReconnectionError = false;\r\n      me.socketService.isActiveDashboard = false;\r\n      me.socketService.reconnectionErrorMsg = '';\r\n      me.socketService.clientWalletSelModel = Object.assign(me.socketService.clientWalletSelModel, obj);\r\n      if(me.socketService.socket){\r\n        me.socketService.socket.io.disconnect();\r\n      }*/\r\n    }\r\n  }\r\n\r\n  onReloadClick(){\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n","module.exports = \"td {\\r\\n\\ttext-align: center;\\r\\n}\\r\\nselect {\\r\\n\\twidth: 70%%;\\r\\n}\"","module.exports = \"<div class=\\\"container container-fx\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-md-9\\\">\\r\\n\\t\\t\\t<div class=\\\"market-view api-settings-table secondary-tble\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\t\\t\\t\\t\\t<table class=\\\"table\\\">\\r\\n\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Market</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 40px\\\"></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>From:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select (change)=\\\"onTransferChange($event,'from')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option>{{socketService.activeWalletSelModel.base}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option>{{socketService.activeWalletSelModel.quote}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>To:\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<select (change)=\\\"onTransferChange($event,'to')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option>{{socketService.activeWalletSelModel.quote}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<option>{{socketService.activeWalletSelModel.base}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Transfer({{socketService.activeWalletSelModel.base}}):</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th>Equivalent({{socketService.activeWalletSelModel.quote}})</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"width: 100px\\\"></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let item of apiSettingData;let i=index\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"crypt-market-img\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"{{frontendApi.BASE_URL}}web/images/{{item.image}}\\\" alt=\\\"{{item.code}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"country-flag\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<img src=\\\"{{frontendApi.BASE_URL}}web/images/flags/{{item.country}}.png\\\" alt=\\\" {{item.country}}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{item.base_balance}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>{{item.quote_balance}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td><input style=\\\"width: 100%\\\" type=\\\"text\\\" name=\\\"\\\" (input)=\\\"onTransferValueChange($event)\\\"></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td><!-- {{equivalentBlc}} --></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button style=\\\"float: right\\\" type=\\\"button\\\" (click)=\\\"onTransfer()\\\" class=\\\"btn btn-primary\\\">Transfer</button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '../../services/frontend.service';\r\nimport { SocketIoService } from '@services/socket-io.service';\r\ndeclare let Orbit: any;\r\n\r\n@Component({\r\n  selector: 'app-fund-transfer',\r\n  templateUrl: './fund-transfer.component.html',\r\n  styleUrls: ['./fund-transfer.component.css']\r\n})\r\nexport class FundTransferComponent implements OnInit {\r\n\r\n  public apiSettingData: Array<any>;\r\n  public _subscription: any;\r\n  public base = this.socketService.activeWalletSelModel.base;\r\n  public quote = this.socketService.activeWalletSelModel.quote;\r\n  public equivalentBlc = 0 ;\r\n\r\n  constructor(public frontendApi:FrontendService, public socketService: SocketIoService) {\r\n  \tthis._subscription = this.socketService.walletChange.subscribe((value) => {\r\n      \tthis.getClientMarketWalletList();\r\n  \t});\r\n  }\r\n\r\n  ngOnInit() {\r\n  \tthis.getClientMarketWalletList();\r\n  \tthis.getJpyRate();\r\n  }\r\n\r\n   getClientMarketWalletList() {\r\n    const me = this;\r\n    const params: any = {symbol : me.socketService.activeWalletSelModel['symbol']};\r\n    me.frontendApi.clientMarketWalletList(params).subscribe(res => {\r\n      me.socketService.clientWalletSelModel.items = res['data'];\r\n      me.apiSettingData = res['data'];\r\n    });\r\n  }\r\n\r\n  onTransferChange(e,change){\r\n  \t// if(change == 'from'){\r\n  \t// \tthis.socketService.activeWalletSelModel.base = e.target.value;\r\n  \t// }else{\r\n  \t// \tthis.socketService.activeWalletSelModel.quote = e.target.value\r\n  \t// }\r\n  }\r\n\r\n  onTransferValueChange(e){\r\n  \t// this.equivalentBlc = JSON.parse(e.target.value) * this.socketService.clientWalletSelModel.quote_jpy_rate;\r\n  }\r\n\r\n   getJpyRate() {\r\n    const me = this;\r\n    const symbolsArr = [this.socketService.activeWalletSelModel.base, this.socketService.activeWalletSelModel.quote];\r\n    // const params: any = { fsyms : symbolsArr.join(','), tsyms : 'JPY'};\r\n    const params: any = { fsyms : symbolsArr.join(','), tsyms : 'JPY'};\r\n\r\n    this.frontendApi.getJpyRate(params).subscribe(response => {\r\n      const base = me.socketService.activeWalletSelModel.base,\r\n        quote = me.socketService.activeWalletSelModel.quote;\r\n\r\n      me.socketService.clientWalletSelModel.base_jpy_rate = response[base] && response[base]['JPY'] ? response[base]['JPY'] : 0;\r\n      me.socketService.clientWalletSelModel.quote_jpy_rate = response[quote] && response[quote]['JPY'] ? response[quote]['JPY'] : 0;\r\n    });\r\n  }\r\n\r\n  onTransfer(){\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".error{\\r\\n\\tborder:  3px solid red;\\r\\n}\"","module.exports = \"<!-- <div class=\\\"progress-screen\\\">\\r\\n\\t<p>\\r\\n\\t\\t<img src=\\\"{{frontendApi.BASE_URL}}images/processing.gif\\\" alt=\\\"\\\">\\r\\n\\t\\t<span>Processing..</span>\\r\\n\\t</p>\\r\\n</div> -->\\r\\n\\r\\n<!-- HEADER ALERT MESSAGE COMPONENT -->\\r\\n<app-ng-alert *ngIf=\\\"socketService.isReconnectionError == true\\\"\\r\\n  [message] = \\\"socketService.reconnectionErrorMsg\\\"\\r\\n  [alert_type] = \\\"'error'\\\"\\r\\n  (reconnectSocket)=\\\"onReconnectSocket()\\\">\\r\\n</app-ng-alert>\\r\\n\\r\\n<div class=\\\"container container-fx\\\">\\r\\n\\t<div class=\\\"row\\\" id=\\\"container-fx\\\">\\r\\n\\t\\t<div class=\\\"col-md-9 table-view\\\">\\r\\n\\r\\n\\t\\t\\t<!-- CLIENT MARKET WALLET TABLE WITH TICKER INFO  -->\\r\\n\\t\\t\\t<app-ticker-datagrid [bitForm]=\\\"bitForm\\\"></app-ticker-datagrid>\\r\\n\\r\\n      <!-- TRADE LOG TABLE -->\\r\\n      <app-trade-log-datagrid></app-trade-log-datagrid>\\r\\n\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"col-md-3 right-sidebar\\\" id=\\\"right-sidebar\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"bitForm\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n          <!-- MAX BID BLOCK -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"max-bid flx-contain items-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"section-label\\\">Max<br>Bid</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"value\\\">\\r\\n              <!-- MAX BID JPY CONTAINER -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"jpy-value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control label\\\" formControlName=\\\"max_bid_jpy\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>JPY</span>\\r\\n              </p>\\r\\n              <!-- MAX BID RATE CONTAINER -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"cur-value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"max-bid\\\" type=\\\"text\\\" class=\\\"form-control btn-sq\\\" formControlName=\\\"max_bid_rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>{{socketService.activeWalletSelModel.quote}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n          </div>\\r\\n          <!-- END OF MAX BID BLOCK -->\\r\\n          <!-- MIN ASK BLOCK -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"min-ask flx-contain items-center\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"section-label\\\">Min<br>Ask</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"value\\\">\\r\\n              <!-- MIN ASK JPY CONTAINER -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"jpy-value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control label\\\" formControlName=\\\"min_ask_jpy\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>JPY</span>\\r\\n              </p>\\r\\n              <!-- MIN ASK RATE CONTAINER -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"cur-value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"min-ask\\\" type=\\\"text\\\" class=\\\"form-control br-light-bl btn-sq\\\" formControlName=\\\"min_ask_rate\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>{{socketService.activeWalletSelModel.quote}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n          <!-- END OF MIN ASK BLOCK -->\\r\\n          <!-- BID-ASK SPREAD BLOCK -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"spred-amt flx-contain items-center\\\">\\r\\n            <!-- SPRED FEE TOOLTIP -->\\r\\n\\t\\t\\t\\t\\t\\t<p class='tooltip'>\\r\\n              <label class=\\\"section-label\\\" style=\\\"cursor: pointer;\\\" (click)=\\\"minSpredClick(minSpredModalRoot)\\\">\\r\\n                SPREAD\\r\\n                <span>\\r\\n                  <i>{{bitForm.value.min_spred_percent}}%</i>\\r\\n                </span>\\r\\n              </label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"tooltiptext\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>Max Bid SPREAD : {{bitForm.value.max_bid_taker_fee}}% </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p>Min Ask SPREAD : {{bitForm.value.min_ask_taker_fee}}% </p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <p>Min SPREAD \\t: {{frontendApi.min_spred_percent | bitNumber:1.0-2:0:0}}% </p> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</span>\\r\\n            </p>\\r\\n            <!-- END OF SPRED FEE TOOLTIP -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"value\\\">\\r\\n              <!-- BID-ASK SPREAD IN CRYPTOCURRENCY AMOUNT -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"jpy-value spr-amt\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input  id=\\\"spred-amt\\\" type=\\\"text\\\" class=\\\"form-control label\\\" formControlName=\\\"spred_jpy\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sub\\\">{{socketService.activeWalletSelModel.quote}}</span>\\r\\n              </p>\\r\\n              <!-- END OF BID-ASK SPREAD IN CRYPTOCURRENCY AMOUNT -->\\r\\n              <!-- BID-ASK SPREAD PERCENTAGE -->\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"jpy-value spr-percent\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"spred-percent\\\" type=\\\"text\\\" class=\\\"form-control btn-sq\\\" formControlName=\\\"spred_percent\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sub\\\">%</span>\\r\\n              </p>\\r\\n              <!-- END OF BID-ASK SPREAD PERCENTAGE -->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n        </div>\\r\\n        <!-- END OF BID-ASK SPREAD BLOCK -->\\r\\n\\r\\n        <!-- TRADE BLOCK -->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"trade-btc-amt\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"section-label\\\">TRADE {{socketService.activeWalletSelModel.quote}} AMOUNT</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"jpy-value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"btc-amount\\\" class=\\\"form-control\\\" formControlName=\\\"trade_quote_amount\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sub\\\">{{socketService.activeWalletSelModel.quote}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"bid-buttons\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p *ngFor=\\\"let item of tradeButtons\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" value=\\\"+\\\" (click)=\\\"onPlusClick(item)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<span>{{item | number:'1.1-3'}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"button\\\" value=\\\"-\\\" (click)=\\\"onMinusClick(item)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"est-profit\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"section-label\\\">ESTIMATED PROFIT</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"jpy-value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" id=\\\"est-profit\\\"class=\\\"form-control btn-sq \\\" formControlName=\\\"estimated_profit\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"sub\\\">JPY</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- <ng-container *ngIf=\\\"status\\\"> -->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group buttons\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"trade-btns\\\">\\r\\n\\t\\t\\t\\t\\t\\t<ng-container *ngIf=\\\"socketService.clientWalletSelModel.tradeActionChecked; else buysell\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button [disabled]=\\\"tradeCounter >= tradeClickLimit\\\" (click)=\\\"openTradeConfirmationDialog(modalRoot,'Buy/Sell')\\\" class=\\\"btn btn-primaty btn-action-trade btn-sq\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label>TRADE</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span>BID/ASK</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\t\\t\\t\\t\\t\\t<ng-template #buysell>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"buy-sell-action\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button [disabled]=\\\"tradeCounter >= tradeClickLimit\\\" class=\\\"btn btn-success btn-buy-action btn-sq\\\" (click)=\\\"openTradeConfirmationDialog(modalRoot, 'Buy')\\\"> Buy </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<button [disabled]=\\\"tradeCounter >= tradeClickLimit\\\" class=\\\"btn btn-danger btn-sell-action btn-sq\\\" (click)=\\\"openTradeConfirmationDialog(modalRoot, 'Sell')\\\"> Sell </button>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t</ng-template>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<!-- </ng-container> -->\\r\\n\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"trade-count\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\\"section-label mb-0\\\">TRADE COUNT</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p style=\\\"float: right\\\" class=\\\"mb-0 trade-click-limit\\\" [ngClass]=\\\"{'tooltip': tradeCounter >= tradeCountCalc}\\\"><span><i *ngIf=\\\"tradeCounter >= tradeCountCalc\\\" class =\\\"fa fa-warning\\\" [ngStyle]=\\\"{'color': tradeCounter == tradeClickLimit ? 'red':'yellow', 'padding-right':'5px'}\\\"></i>{{tradeCounter}}</span>/{{tradeClickLimit}}\\r\\n\\t\\t\\t\\t\\t\\t\\t<span *ngIf=\\\"tradeCounter >= tradeCountCalc\\\" class=\\\"tooltiptext\\\">{{tradeCountErrMsg}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!-- <span *ngIf=\\\"tradeCounter == tradeClickLimit\\\" class=\\\"tooltiptext\\\">Limit exceeded</span> -->\\r\\n\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<app-modal #modalRoot\\r\\n               [modalTitle]=\\\"'Orbit'\\\"\\r\\n               [width]=\\\"750\\\"\\r\\n               [maximizable]=\\\"true\\\"\\r\\n               [zIndex]=\\\"1100\\\"\\r\\n               >\\r\\n      <ng-container class=\\\"app-modal-body\\\">\\r\\n\\t      \\t<div *ngIf=\\\"checkSpredPercentAlert() == true\\\" class=\\\"alert alert-warning p-1\\\" role=\\\"alert\\\" >\\r\\n\\t\\t <!-- You min spred is less than current spred &nbsp;<i class=\\\"fa fa-exclamation-triangle\\\"></i> -->\\r\\n\\t\\t \\t<i class=\\\"fa fa-exclamation-triangle\\\"></i>&nbsp;The estimated spread of {{frontendApi.tradeFormData.spred_percent}}% is less than {{frontendApi.min_spred_percent}}%\\r\\n\\t  \\t\\t</div>\\r\\n        \\t<app-trade-form-data></app-trade-form-data>\\r\\n      </ng-container>\\r\\n      <ng-container class=\\\"app-modal-footer\\\">\\r\\n\\t    <div class=\\\"float-left pt-2\\\">\\r\\n\\t  \\t\\t<input type=\\\"checkbox\\\" [checked]=\\\"!disableTrade\\\" name=\\\"trade-agreement\\\" (change)=\\\"checkTradeAgreement($event)\\\"> I agree.\\r\\n\\t  \\t</div>\\r\\n\\t  \\t<div class=\\\"float-right\\\">\\r\\n\\t\\t    <button type=\\\"button\\\"  [disabled]=\\\"disableTrade\\\" class=\\\"btn btn-outline-dark btn-trade-confirm\\\" (click)=\\\"onTradeActionClick()\\\">Trade</button>\\r\\n\\t\\t    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark btn-cancel\\\" (click)=\\\"setDefaultCheckBox(modalRoot)\\\">Cancel</button>\\r\\n\\t\\t</div>\\r\\n      </ng-container>\\r\\n</app-modal>\\r\\n<app-modal #minSpredModalRoot\\r\\n               [modalTitle]=\\\"'Orbit'\\\"\\r\\n               [width]=\\\"500\\\"\\r\\n               [maximizable]=\\\"true\\\"\\r\\n               [zIndex]=\\\"1100\\\"\\r\\n               >\\r\\n      <ng-container class=\\\"app-modal-body\\\">\\r\\n        <!-- <app-min-spred-modal [modal] = \\\"minSpredModalRoot\\\"></app-min-spred-modal> -->\\r\\n        <form [formGroup]=\\\"minSpredForm\\\">\\r\\n        \\t<label>Minimum Spread Percent:</label><br>\\r\\n\\t\\t\\t<input #minSpred type=\\\"number\\\" step=\\\"0.001\\\" placeholder=\\\"Minimum Spread Percent\\\" formControlName=\\\"minSpredPercentage\\\" class=\\\"form-control\\\" [ngClass] = \\\"{ 'error' : minSpredForm.get('minSpredPercentage').invalid }\\\">\\r\\n      \\t</form>\\r\\n      </ng-container>\\r\\n      <ng-container class=\\\"app-modal-footer\\\">\\r\\n        <div class=\\\"float-right\\\">\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-outline-dark btn-save\\\" (click)=\\\"minSpredUpdate(minSpredModalRoot, 'save')\\\">SAVE</button>\\r\\n          \\t<button type=\\\"button\\\" class=\\\"btn btn-outline-dark btn-reset\\\" (click)=\\\"minSpredUpdate(minSpredModalRoot,'reset')\\\">RESET</button>\\r\\n          \\t<button type=\\\"button\\\" class=\\\"btn btn-outline-dark btn-cancel\\\" (click)=\\\"minSpredModalRoot.hide();resetValue()\\\">CANCEL</button>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n</app-modal>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder , FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute} from '@angular/router';\r\nimport { FrontendService } from '@services/frontend.service';\r\nimport { SocketIoService } from '@services/socket-io.service';\r\nimport { ClientMarketWallet } from '@models/client-market-wallet';\r\nimport { DASHBOARD } from '../../config/lang';\r\nimport { TRADE_COUNTER_PER} from '../../config/constant';\r\ndeclare var $: any;\r\ndeclare let Orbit: any;\r\ndeclare let alertify: any;\r\ndeclare let window: any;\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n  public bitForm: FormGroup;\r\n  public minSpredForm: FormGroup;\r\n  public modal;\r\n  public disableTrade = true;\r\n  public minSpredModal: any;\r\n  public minSpredPercent;\r\n  public tradeButtons: Array<any> = [1.0, 0.1, 0.01, 0.001];\r\n  // public hasError:boolean = false;\r\n\r\n  public timer: any = {\r\n    nowTime        : new Date(),\r\n    countDown      : 0,\r\n    resetCountDown : 60\r\n  };\r\n\r\n  public mouseClickAudio: any = new Audio();\r\n  public successAudio: any = new Audio();\r\n  public errorAudio: any = new Audio();\r\n  public tradeCounter = Orbit['CURRENT_USER']['trade_counter'];\r\n  public tradeClickLimit = Orbit['CURRENT_USER']['trade_click_limit'];\r\n  public tradeCountCalc = Math.round((TRADE_COUNTER_PER/100)* this.tradeClickLimit);\r\n  public tradeCountErrMsg;\r\n\r\n  constructor(public router: Router, public route: ActivatedRoute,\r\n    public frontendApi: FrontendService, public socketService: SocketIoService, public fb: FormBuilder ) { }\r\n\r\n  ngOnInit() {\r\n    this.getTradeLogList();\r\n    this.createInitialForm();\r\n    this.loadAudio();\r\n    this.changeTradeCounterErrMsg();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    let me = this,\r\n        obj:any = {\r\n              items              : [],\r\n              bidRateArr         : {},\r\n              askRateArr         : {},\r\n              base_balance_arr  : {},\r\n              quote_balance_arr    : {},\r\n              // cash_balance_arr   : {},\r\n              tickers            : {},\r\n              max_bid_market     : '',\r\n              min_ask_market     : '',\r\n              base_balance_total: 0,\r\n              quote_balance_total  : 0,\r\n              // cash_balance_total : 0,\r\n              base_jpy_rate       : 0,\r\n              quote_jpy_rate       : 0,\r\n              symbol             : Orbit.CURRENT_USER.symbol,\r\n              tradeActionChecked : true\r\n            };\r\n      me.socketService.isReconnectionError = false;\r\n      me.socketService.reconnectionErrorMsg = '';\r\n      /*for clear refetch jpy rate interval*/\r\n      clearInterval(me.socketService.refetchJpyRateTimer);\r\n      me.socketService.clientWalletSelModel = Object.assign(me.socketService.clientWalletSelModel, obj);\r\n      if(me.socketService.socket){\r\n        me.socketService.socket.io.disconnect();\r\n      }\r\n  }\r\n\r\n  /**\r\n   * @author SAGIN\r\n   * Initialize and load audio files for mouse click | success message | error message\r\n   */\r\n  loadAudio() {\r\n    if(Orbit['CURRENT_USER']['user_settings']['enable_trade_amout_click_sound']){\r\n      this.mouseClickAudio.src =  window['BASE_URL'] + 'audio/mouse_click.mp3';\r\n      this.mouseClickAudio.load();\r\n    }\r\n    if(Orbit['CURRENT_USER']['user_settings']['enable_alert_sound']){\r\n      this.successAudio.src =  window['BASE_URL'] + 'audio/success.wav';\r\n      this.successAudio.load();\r\n\r\n      this.errorAudio.src =  window['BASE_URL'] + 'audio/error.wav';\r\n      this.errorAudio.load();\r\n    }\r\n    if(Orbit['CURRENT_USER']['user_settings']['enable_min_spred_sound']){\r\n      this.socketService.spredPercentAudio.src =  window['BASE_URL'] + 'audio/notify.mp3';\r\n      this.socketService.spredPercentAudio.load();\r\n    }\r\n\r\n  }\r\n\r\n  changeTradeCounterErrMsg(){\r\n    if(this.tradeCounter >= this.tradeCountCalc && this.tradeCounter < this.tradeClickLimit){\r\n      this.tradeCountErrMsg =  DASHBOARD.errors.tradeClickPerError;\r\n    }else{\r\n      this.tradeCountErrMsg = DASHBOARD.errors.tradeClickFinishError;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @author SAGIN\r\n   * On trade amount increment/decrement, play mouse click sound.\r\n   */\r\n  playMouseClickAudio() {\r\n    this.mouseClickAudio.play();\r\n  }\r\n\r\n  /**\r\n   * @author SAGIN\r\n   * On Trade success, play success audio sound\r\n   */\r\n  playSuccessAudio() {\r\n    this.successAudio.play();\r\n  }\r\n\r\n  /**\r\n   * @author SAGIN\r\n   * On Trade failure, play error audio sou=\r\n   */\r\n  playErrorAudio() {\r\n    this.errorAudio.play();\r\n  }\r\n\r\n  openTradeConfirmationDialog(content, trade_type) {\r\n    const CURRENT_USER:any = Orbit['CURRENT_USER'];\r\n    this.disableTrade = true;\r\n    this.modal = content;\r\n    var currentSpredYPer = this.bitForm.value.spred_percent,\r\n      tradeBtcAmount     = this.bitForm.value.trade_quote_amount,\r\n      minSpred = 0,\r\n      wallet_id = CURRENT_USER['default_wallet']['id'];\r\n    /*if(CURRENT_USER && CURRENT_USER.hasOwnProperty('min_spred_percent')){\r\n      minSpred = JSON.parse(Orbit['CURRENT_USER']['min_spred_percent']);\r\n    }*/\r\n    if(this.bitForm.value && this.bitForm.value.hasOwnProperty('min_spred_percent')){\r\n      minSpred = this.bitForm.value.min_spred_percent;\r\n      if(!this.frontendApi.min_spred_percent){\r\n        this.frontendApi.min_spred_percent = minSpred;\r\n      }\r\n    }\r\n    else{return;}\r\n\r\n    if(tradeBtcAmount == '' || tradeBtcAmount == '0.000' ){\r\n      // alertify.error('Please enter BTC amount');\r\n      alertify.error(DASHBOARD.errors.emptyBtcAmount);\r\n      return;\r\n    }\r\n    if(this.bitForm.value.spred_percent<0)\r\n    {\r\n      alertify.error(DASHBOARD.errors.negativeSpred);\r\n      return;\r\n    }\r\n    if(this.tradeCounter >= this.tradeClickLimit){\r\n       alertify.error(DASHBOARD.errors.tradeClickFinishError);\r\n        return;\r\n    }\r\n    // if(trade_type == 'Buy/Sell'  && currentSpredYPer < minSpred){\r\n    //     // alertify.error('Spred rate is less than your min spred value');\r\n    //     alertify.error(DASHBOARD.errors.spredLessMinSpred);\r\n    //     return;\r\n    // }\r\n\r\n    this.bitForm.controls['trade_type'].setValue(trade_type);\r\n    this.bitForm.controls['wallet_id'].setValue(wallet_id);\r\n\r\n    this.frontendApi.tradeFormData = JSON.parse(JSON.stringify(this.bitForm.value));\r\n    if(!Orbit.CURRENT_USER.user_settings['enable_trade_confirmation_modal'] && this.bitForm.value.spred_percent > this.frontendApi.min_spred_percent){\r\n      this.disableTrade = false;\r\n      this.onTradeActionClick();\r\n    }\r\n    content.show();\r\n  }\r\n\r\n  /**\r\n   * uncheck checkbox on modal close\r\n   */\r\n  setDefaultCheckBox(modal){\r\n    this.disableTrade = true;\r\n    modal.hide();\r\n  }\r\n\r\n  /** show alert on trade confirmation */\r\n  checkSpredPercentAlert(){\r\n    let minSpredPer = this.frontendApi.min_spred_percent,/*this.bitForm.value.min_spred_percent,*/\r\n      currentSpredPer = this.frontendApi.tradeFormData.spred_percent;\r\n    if( currentSpredPer < minSpredPer && this.bitForm.value.trade_type == 'Buy/Sell' ){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /** check if agreement is cheked or not  */\r\n  checkTradeAgreement(e){\r\n    var agreed = e['target']['checked'];\r\n    if(agreed){\r\n      this.disableTrade = false;\r\n    }else{\r\n      this.disableTrade = true;\r\n    }\r\n  }\r\n\r\n  createInitialForm(){\r\n    this.bitForm = this.fb.group({\r\n      'wallet_id'        : [{value : this.socketService.activeWalletSelModel.id, disabled : true}, [Validators.required, Validators.min(1), Validators.pattern('[0-9]')]],\r\n      'max_bid_jpy'      : [{value : '', disabled : true}, Validators.required],\r\n      'max_bid_rate'     : [{value : '', disabled : true}, Validators.required],\r\n      'min_ask_jpy'      : [{value : '', disabled : true}, Validators.required],\r\n      'min_ask_rate'     : [{value : '', disabled : true}, Validators.required],\r\n      'spred_jpy'        : [{value : '', disabled : true}, Validators.required],\r\n      'spred_percent'    : [{value : '', disabled : true}, Validators.required],\r\n      'min_spred_percent'    : [{value : this.frontendApi.min_spred_percent, disabled : true}],\r\n      'spred_quote'        : [{value : '', disabled : true}, Validators.required],\r\n      'spred_base'        : [{value : '', disabled : true}, Validators.required],\r\n      'market_buy'       : [{value : '', disabled : true}, Validators.required],\r\n      'market_sell'      : [{value : '', disabled : true}, Validators.required],\r\n      'trade_base_bid'    : [{value : '', disabled : true}, Validators.required],\r\n      'trade_base_ask'    : [{value : '', disabled : true}, Validators.required],\r\n      'trade_quote_amount' : [{value : '', disabled : true}, [Validators.required, Validators.min(0)]],\r\n      'estimated_profit' : [{value : '', disabled : true}],\r\n      'trade_type'       : [{value : '', disabled : true}],\r\n      'max_bid_taker_fee': [{value : '0.0', disabled : true}],\r\n      'min_ask_taker_fee': [{value : '0.0', disabled : true}],\r\n    });\r\n    this.minSpredForm = this.fb.group({\r\n      'minSpredPercentage': new FormControl('',[Validators.max(100),Validators.min(0)]),\r\n    });\r\n  }\r\n\r\n  get minSpred() {\r\n    return this.minSpredForm.get('minSpredPercentage');\r\n  }\r\n\r\n  /**\r\n   * Fetch Last 10 Trade Log History\r\n   */\r\n  getTradeLogList(){\r\n    let params = {wallet_id : this.socketService.activeWalletSelModel['id']};\r\n    this.frontendApi.getTradeLog(params).subscribe(res => {\r\n      this.frontendApi.homeTradeLogData = res['data'];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Trade button validation.\r\n   * Enable or disable button based on trade\r\n   */\r\n  onFormChanges() {\r\n    const trade_amount = this.bitForm.value.trade_quote_amount;\r\n    if(trade_amount == null || parseFloat(trade_amount) <= 0){\r\n      // this.hasError = true;\r\n    }else{\r\n      // this.hasError = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trade BTC Amount Increment\r\n   * @param {number} val [BIT Value]\r\n   */\r\n  onPlusClick(val: number) {\r\n    this.playMouseClickAudio();\r\n    const currentBtcVal: number = parseFloat(this.bitForm.value['trade_quote_amount']) || 0,\r\n        max_bid_quote: number   = parseFloat(this.bitForm.value['max_bid_rate']) || 0,\r\n        min_ask_quote: number   = parseFloat(this.bitForm.value['min_ask_rate']) || 0,\r\n        setBtcVal: any        = currentBtcVal + val,\r\n        setBtcValue          = parseFloat(setBtcVal);\r\n\r\n    /*calculate and set ETH bid/ask and estimated profit*/\r\n    this.socketService.calculateEthBidAskAndProfit(max_bid_quote, min_ask_quote, setBtcValue, this.bitForm);\r\n    // this.onFormChanges();\r\n  }\r\n\r\n/**\r\n   * Trade BTC Amount Decrement\r\n   * @param {[type]} val [BIT Value]\r\n   */\r\n  onMinusClick(val) {\r\n    this.playMouseClickAudio();\r\n    const currentBtcVal = parseFloat(this.bitForm.value['trade_quote_amount']) || 0;\r\n    if ((currentBtcVal - val) < 0) {\r\n      // alertify.error('Amount cannot be less than 0');\r\n      alertify.error(DASHBOARD.errors.negativeAmount);\r\n    } else {\r\n      const setBtcVal: any    = currentBtcVal - val,\r\n        max_bid_quote: number = parseFloat(this.bitForm.value['max_bid_rate']) || 0,\r\n        min_ask_quote: number = parseFloat(this.bitForm.value['min_ask_rate']) || 0,\r\n        setBtcValue        = parseFloat(setBtcVal);\r\n      /*calculate and set ETH bid/ask and estimated profit*/\r\n      this.socketService.calculateEthBidAskAndProfit(max_bid_quote, min_ask_quote, setBtcValue, this.bitForm);\r\n      // this.onFormChanges();\r\n    }\r\n  }\r\n\r\n  getBalance(market_code: string) {\r\n    let item: ClientMarketWallet;\r\n    for (let i = 0; i < this.socketService.clientWalletSelModel.items.length ; i++) {\r\n      item = this.socketService.clientWalletSelModel.items[i];\r\n      if (item['code'] === market_code) {\r\n        // return [item['btc_balance'], item['eth_balance']];\r\n        return [item['quote_balance'], item['base_balance']];\r\n      }\r\n    }\r\n    return [0 , 0];\r\n  }\r\n\r\n  onTradeActionClick(){\r\n    if(this.disableTrade == true){\r\n      // do nothing\r\n\r\n    }else{\r\n      let me = this;\r\n      let tradeFormData:any = this.frontendApi.tradeFormData;\r\n      var trade_type               = tradeFormData['trade_type'],\r\n        // message              = \"Do you want to \"+trade_type,\r\n        // trade_amount         = this.bitForm.value.trade_quote_amount,\r\n        // currentSpredYPer     = this.bitForm.value.spred_percent,\r\n        minSpred             = tradeFormData['min_spred_percent'],//JSON.parse(Orbit['CURRENT_USER']['min_spred_percent']),\r\n        request_time         = this.getDateTime(),\r\n        timestamp            = this.getDateTimestamp(),\r\n        data                 = {\r\n          trade_type      : tradeFormData['trade_type'],\r\n          symbol          : me.socketService.activeWalletSelModel.symbol,\r\n          spred_percentage: this.bitForm.value.spred_percent,\r\n          // wallet_id    : tradeFormData['wallet_id'],\r\n          // request_time : request_time,\r\n\r\n          // data         : this.bitForm.value,\r\n          // market_buy   : this.bitForm.value.market_buy,\r\n          // market_sell  : this.bitForm.value.market_sell,\r\n          // request_time : request_time,\r\n        };\r\n        let [ quote_balance, base_balance ] = this.getBalance(tradeFormData['market_sell']);\r\n        let bid_data:any = {\r\n          'max_bid_jpy'      : this.removeNumberFormatting(tradeFormData['max_bid_jpy']),\r\n          'exchange_rate'    : tradeFormData['max_bid_rate'],\r\n          'market_sell'      : tradeFormData['market_sell'],\r\n          'trade_base_amount' : this.removeNumberFormatting(tradeFormData['trade_base_bid']),\r\n          'trade_quote_amount' : this.removeNumberFormatting(tradeFormData['trade_quote_amount']),\r\n          'spred_percent'    : tradeFormData['trade_type'] == 'Buy/Sell' ? tradeFormData['spred_percent'] : 0,\r\n          'spred_jpy'        : tradeFormData['trade_type'] == 'Buy/Sell' ? this.removeNumberFormatting(tradeFormData['spred_jpy']) : 0,\r\n          'spred_quote'        : tradeFormData['trade_type'] == 'Buy/Sell' ? ''+tradeFormData['spred_quote'] : '0',\r\n          'spred_base'        : tradeFormData['trade_type'] == 'Buy/Sell' ? ''+tradeFormData['spred_base'] : '0',\r\n          'estimated_profit' : tradeFormData['trade_type'] == 'Buy/Sell' ? this.removeNumberFormatting(tradeFormData['estimated_profit']) : 0,\r\n          'is_arbitrage'     : tradeFormData['trade_type'] == 'Buy/Sell' ? 1 : 0,\r\n          'wallet_id'        : tradeFormData['wallet_id'],\r\n          'request_time'     : request_time,\r\n          'quote_balance'    : quote_balance,\r\n          'base_balance'     : base_balance,\r\n          'token_id'         : ''+timestamp\r\n        };\r\n        [ quote_balance, base_balance ]  = this.getBalance(tradeFormData['market_buy']);\r\n        let ask_data:any = {\r\n          'min_ask_jpy'      : this.removeNumberFormatting(tradeFormData['min_ask_jpy']),\r\n          'exchange_rate'    : tradeFormData['min_ask_rate'],\r\n          'market_buy'       : tradeFormData['market_buy'],\r\n          'trade_base_amount' : this.removeNumberFormatting(tradeFormData['trade_base_ask']),\r\n          'trade_quote_amount' : this.removeNumberFormatting(tradeFormData['trade_quote_amount']),\r\n          'spred_percent'    : tradeFormData['trade_type'] == 'Buy/Sell' ? tradeFormData['spred_percent'] : 0,\r\n          'spred_jpy'        : tradeFormData['trade_type'] == 'Buy/Sell' ? this.removeNumberFormatting(tradeFormData['spred_jpy']) : 0,\r\n          'spred_quote'        : tradeFormData['trade_type'] == 'Buy/Sell' ? ''+tradeFormData['spred_quote'] : '0',\r\n          'spred_base'        : tradeFormData['trade_type'] == 'Buy/Sell' ? ''+tradeFormData['spred_base'] : '0',\r\n          'estimated_profit' : tradeFormData['trade_type'] == 'Buy/Sell' ? this.removeNumberFormatting(tradeFormData['estimated_profit']) : 0,\r\n          'is_arbitrage'     : tradeFormData['trade_type'] == 'Buy/Sell' ? 1 : 0,\r\n          'wallet_id'        : tradeFormData['wallet_id'],\r\n          'request_time'     : request_time,\r\n          'quote_balance'    : quote_balance,\r\n          'base_balance'     : base_balance,\r\n          'token_id'         : ''+timestamp\r\n        };\r\n      bid_data = JSON.stringify(bid_data);\r\n      ask_data = JSON.stringify(ask_data);\r\n\r\n      this.frontendApi.isTradeBtnClicked = true;\r\n\r\n      // let errors = this.getFormErrors(this.bitForm);\r\n      if(true){\r\n        if(trade_type == 'Buy/Sell'){\r\n          me.addDraftTradeLogRecord('Sell', me.bitForm.value.market_sell, request_time, 1);\r\n          me.addDraftTradeLogRecord('Buy', me.bitForm.value.market_buy, request_time, 1);\r\n          data['bid_data'] = bid_data;\r\n          data['ask_data'] = ask_data;\r\n        }else if(trade_type == 'Sell'){\r\n          me.addDraftTradeLogRecord('Sell', me.bitForm.value.market_sell, request_time, 0);\r\n          data['bid_data'] = bid_data;\r\n        }else{\r\n          me.addDraftTradeLogRecord('Buy', me.bitForm.value.market_buy, request_time, 0);\r\n          data['ask_data'] = ask_data;\r\n\r\n        }\r\n        // this.hasError = false;\r\n\r\n        /*FOR Save Exchange Rate History To Database */\r\n        let params = {\r\n          tradeData : data,\r\n          exchangeRateData : me.socketService.clientWalletSelModel.items,\r\n          jpyRate : me.socketService.clientWalletSelModel.quote_jpy_rate\r\n        };\r\n        me.socketService.saveTradeLog(params);\r\n        me.frontendApi.saveTradeLog(data).subscribe(res => {\r\n          let marketBuy    = me.bitForm.value.market_buy,\r\n              marketSell   = me.bitForm.value.market_sell;\r\n        if(res['success'] == true){\r\n          this.tradeCounter = res['trade_count'];\r\n          Orbit['CURRENT_USER']['trade_counter'] = res['trade_count'];\r\n          this.changeTradeCounterErrMsg();\r\n          for (var i = 0 ; i < me.socketService.clientWalletSelModel.items.length; i++) {\r\n            let clientMarketWalletRec:ClientMarketWallet = me.socketService.clientWalletSelModel.items[i];\r\n            if(clientMarketWalletRec['enable_trade'] == 1){\r\n              let exchangeId = clientMarketWalletRec['code'];\r\n              me.socketService.getMarketBalance(exchangeId);\r\n            }\r\n          }\r\n          this.playSuccessAudio();\r\n          alertify.success(res['message']);\r\n        }else{\r\n          this.playErrorAudio();\r\n          alertify.error(res['message']);\r\n        }\r\n        me.frontendApi.isTradeBtnClicked = false;\r\n        me.modal.hide();\r\n        me.getTradeLogList();\r\n      });\r\n\r\n          // // alertify.confirm(message, function(e) {\r\n          //   // if(e) {\r\n          //     if(trade_type == 'Buy/Sell'){\r\n          //       me.addDraftTradeLogRecord('Buy', me.bitForm.value.market_buy, request_time);\r\n          //       me.addDraftTradeLogRecord('Sell', me.bitForm.value.market_sell, request_time);\r\n          //     }else if(trade_type == 'Sell'){\r\n          //       me.addDraftTradeLogRecord('Sell', me.bitForm.value.market_sell, request_time);\r\n          //     }else{\r\n          //       me.addDraftTradeLogRecord('Buy', me.bitForm.value.market_buy, request_time);\r\n          //     }\r\n\r\n              /*FOR Save Exchange Rate History To Database */\r\n              // let params = {\r\n              //   tradeData : data,\r\n              //   exchangeRateData : me.socketService.clientWalletSelModel.items,\r\n              //   jpyRate : me.socketService.clientWalletSelModel.jpyRate\r\n              // };\r\n              // me.socketService.saveTradeLog(params);\r\n\r\n\r\n            // }else{\r\n            //   // debugger;\r\n            // }\r\n          // })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  getDateTime() {\r\n    var currentDate = new Date( ),\r\n        year  = currentDate.getFullYear(),\r\n        month = '' + (currentDate.getMonth() + 1),\r\n        day   = '' + currentDate.getUTCDate(),\r\n        hour  = '' + currentDate.getHours(),\r\n        min   = '' + currentDate.getMinutes(),\r\n        sec   = '' + currentDate.getSeconds();\r\n        month = month.length < 2 ? ('0' + month) : month;\r\n        day   = day.length < 2 ? ('0' + day) : day;\r\n        min   = min.length < 2 ? ('0' + min) : min;\r\n    var date  = [year, month, day].join('-') + ' ' +[hour, min, sec].join(':') ;\r\n        return date;\r\n  }\r\n\r\n  getDateTimestamp(){\r\n    var currentDate = new Date( ),\r\n        year  = currentDate.getFullYear(),\r\n        month = '' + (currentDate.getMonth() + 1),\r\n        day   = '' + currentDate.getUTCDate(),\r\n        hour  = '' + currentDate.getHours(),\r\n        min   = '' + currentDate.getMinutes(),\r\n        sec   = '' + currentDate.getSeconds();\r\n        month = month.length < 2 ? ('0' + month) : month;\r\n        day   = day.length < 2 ? ('0' + day) : day;\r\n        min   = min.length < 2 ? ('0' + min) : min;\r\n    var date  = [year, month, day].join('-') + ' ' +[hour, min, sec].join(':') ;\r\n        return date;\r\n  }\r\n\r\n  addDraftTradeLogRecord(trade_type, market, request_time, isArbritage){\r\n    var trade_amount,\r\n        profit = this.bitForm.value.spred_percent;\r\n        if(trade_type == 'Buy' || trade_type == 'Sell'){\r\n            trade_amount = this.bitForm.value.trade_base_ask;\r\n            if(trade_type == 'Sell'){\r\n              trade_amount = this.bitForm.value.trade_base_bid;\r\n            }\r\n            trade_amount = parseFloat(trade_amount).toFixed(7);\r\n        }\r\n    let obj:any = {\r\n        image             : 'markets/'+ market +'.png',\r\n        name              : 'ETH/BTC',\r\n        //trade_status  : response_data.trade_status,\r\n        trade_status      : 'On Process',\r\n        request_time      : request_time,\r\n        response_time     : '', //response_data.response_time,\r\n        trade_type        : trade_type,\r\n        trade_base_amount  : trade_amount,\r\n        spred_percent     : profit,\r\n        border_cls        : isArbritage == 1 ? 'odd-cls' : '',\r\n        rowspan           : (isArbritage == 1 && trade_type == 'Buy') ? 1 : 0,\r\n        is_arbitrage      : isArbritage\r\n      };\r\n      if(this.frontendApi.homeTradeLogData.length == 10){\r\n          if(this.bitForm.value.trade_type == 'Buy/Sell'){\r\n              this.frontendApi.homeTradeLogData.splice(8,2);\r\n          }else if(trade_type == 'Buy' || trade_type == 'Sell'){\r\n              this.frontendApi.homeTradeLogData.splice(9,1);\r\n          }\r\n      }\r\n      this.frontendApi.homeTradeLogData.unshift(obj);\r\n  }\r\n\r\n  /**\r\n   * @author ROHAN :: 2018-05-30\r\n   * Fetch all form errors\r\n   * @param {FormGroup} formGroup [Staff Detail Form]\r\n   * @returns {[Object]} errors\r\n   */\r\n  getFormErrors(formGroup: FormGroup){\r\n    let errors: any = {};\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        errors[field] = control.errors;\r\n      } else if (control instanceof FormGroup) {\r\n        errors[field] = this.getFormErrors(control);\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n\r\n  removeNumberFormatting(value){\r\n    return value.replace(',','');\r\n  }\r\n\r\n  minSpredClick(modal)\r\n  {\r\n    var modalCls:any= {ariaLabelledBy: 'modal-basic-title'};\r\n    this.minSpredModal = modal.show();\r\n    this.minSpredForm.controls.minSpredPercentage.setValue(this.frontendApi.min_spred_percent);\r\n  }\r\n\r\n  minSpredUpdate(minSpredModal, saveType){\r\n    let me = this;\r\n     //minSpred ? Number(minSpred.value) : null;\r\n    let msg = \"\";\r\n    let isFormValid = true;\r\n    let val = null;\r\n    if(saveType === 'save'){\r\n      msg = 'Are you sure you want to update Minimum Spread Percentage?';\r\n      isFormValid = this.minSpredForm.valid;\r\n      val = this.minSpredForm.controls.minSpredPercentage.value;\r\n    }\r\n    else if(saveType === \"reset\"){\r\n      msg = 'Are you sure you want to reset Minimum Spread Percentage?';\r\n    }\r\n    if(isFormValid)\r\n    {\r\n      alertify.confirm(msg, function(){\r\n        me.saveMinSpredPercent(minSpredModal, val);\r\n        return;\r\n      });\r\n    }\r\n  }\r\n\r\n  saveMinSpredPercent(minSpredModal, val){\r\n   const me = this;\r\n   me.frontendApi.saveMinSpredPercent(val).subscribe(response =>{\r\n      if(response['success'])\r\n      {\r\n        me.minSpredPercent = val;\r\n        me.frontendApi.min_spred_percent = val;\r\n        alertify.success(response['message']);\r\n      }\r\n      else{\r\n        alertify.error(response['message']);\r\n      }\r\n      minSpredModal.hide();\r\n    });\r\n  }\r\n  resetValue(){\r\n    this.minSpredForm.controls.minSpredPercentage.setValue(this.frontendApi.min_spred_percent);\r\n  }\r\n  onReconnectSocket(){\r\n    this.socketService.socket.io.disconnect();\r\n    this.socketService.reconnectionErrorMsg = '';\r\n    this.socketService.isReconnectionError = false;\r\n    this.socketService.connect(this.bitForm);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- CLIENT MARKET WALLET TABLE WITH TICKER  -->\\r\\n<div class=\\\"market-view\\\">\\r\\n    <div class=\\\"bid-rate-refresh-progress pull-right\\\">\\r\\n      <span>Next Reload : [{{ timer.countDown | number: '2.0-0' }}] </span>&nbsp; |\\r\\n      <span>Last Fetched On : [{{timer.nowTime | date:'yyyy-MM-dd hh:mm:ss'}}]</span>&nbsp; |\\r\\n      <span>1 {{socketService.activeWalletSelModel.base}} = {{socketService.clientWalletSelModel.base_jpy_rate | number : '1.3-3' }} JPY</span>&nbsp; |\\r\\n      <span>1 {{socketService.activeWalletSelModel.quote}} = {{socketService.clientWalletSelModel.quote_jpy_rate | number : '1.3-3' }} JPY</span>\\r\\n    </div>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table\\\" id=\\\"main-table\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th style=\\\"width: 80px;\\\"><label class=\\\"on-off head\\\">On/Off</label></th>\\r\\n            <!-- <th style=\\\"width: 20px;\\\"><input type=\\\"checkbox\\\" class=\\\"select-all\\\"><label class=\\\"select-area head\\\"></label></th> -->\\r\\n            <th style=\\\"width: 80px;\\\"><label class=\\\"crypt-market-img head\\\">Market</label></th>\\r\\n            <th style=\\\"width: 40px;\\\"><label class=\\\"country-flag head\\\"></label></th>\\r\\n            <th style=\\\"width: 110px;\\\"><label class=\\\"quote-balance head\\\">{{socketService.activeWalletSelModel.quote}} Balance</label></th>\\r\\n            <th style=\\\"width: 110px;\\\"><label class=\\\"base-balance head\\\">{{socketService.activeWalletSelModel.base}} Balance</label></th>\\r\\n            <th style=\\\"width: 110px;\\\"><label class=\\\"bid-notifier head\\\">Bid</label></th>\\r\\n            <th style=\\\"width: 110px;\\\"><label class=\\\"ask-notifier head\\\">Ask</label></th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <ng-container *ngIf=\\\"socketService.clientWalletSelModel.items.length > 0; else emptyClientMarketRecord \\\">\\r\\n            <tr *ngFor=\\\"let item of socketService.clientWalletSelModel.items; let rowIdx = index\\\">\\r\\n              <td>\\r\\n                <a class=\\\"draggable-col\\\" href=\\\"javascript:void(0);\\\"></a>\\r\\n                <div class=\\\"switch select-area\\\">\\r\\n                  <ng-container *ngIf=\\\"item.enable_trade == 1; else offExchangeMarket\\\">\\r\\n                    <input id=\\\"{{item.code}}\\\" type=\\\"checkbox\\\" (change)=\\\"onOffStatusChange($event,rowIdx,item.code,item.id)\\\" checked>\\r\\n                  </ng-container>\\r\\n                  <ng-template #offExchangeMarket>\\r\\n                    <input id=\\\"{{item.code}}\\\" type=\\\"checkbox\\\" (change)=\\\"onOffStatusChange($event,rowIdx,item.code,item.id)\\\">\\r\\n\\r\\n                  </ng-template>\\r\\n                  <span class=\\\"slider\\\"></span>\\r\\n                </div>\\r\\n              </td>\\r\\n              <!-- <td><span class=\\\"select-area\\\"><input type=\\\"checkbox\\\"></span></td> -->\\r\\n              <td>\\r\\n                <span class=\\\"crypt-market-img\\\">\\r\\n                  <a _ngcontent-c3=\\\"\\\" href=\\\"{{item.dashboard_url}}\\\" target=\\\"_blank\\\">\\r\\n                    <img src=\\\"{{frontendApi.BASE_URL}}images/{{item.image}}\\\" alt=\\\"{{item.code}}\\\">\\r\\n                  </a>\\r\\n                </span>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <span class=\\\"country-flag\\\">\\r\\n                  <img src=\\\"{{frontendApi.BASE_URL}}images/flags/{{item.country}}.png\\\" alt=\\\"{{item.country}}\\\">\\r\\n                </span>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <span id=\\\"{{item.code}}-quote-balance\\\" class=\\\"quote-balance\\\">{{item.quote_balance | bitNumber:'1.8-8':'-'}}</span>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <span id=\\\"{{item.code}}-base-balance\\\" class=\\\"base-balance\\\">{{item.base_balance | bitNumber:'1.8-8':'-'}}</span>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p class=\\\"mb-0\\\" [ngClass]=\\\"{'tooltip':item.has_error == 1}\\\">\\r\\n                  <span id=\\\"{{item.code}}-bid\\\" class=\\\"bid-notifier text-center mb-0 {{item.bid_status}}\\\"\\r\\n                    [ngClass]=\\\"{'no-value':item.bid==null || item.bid.length==0,'max-bid':item.code == socketService.clientWalletSelModel.max_bid_market}\\\">{{item.bid | bitNumber : '1.8-8' : 'OFF' : item.has_error : 'NG'}}&nbsp;<i *ngIf=\\\"item.has_error == 1\\\" class=\\\"fa fa-exclamation-triangle error-ng\\\"></i>\\r\\n                  </span>\\r\\n                  <span *ngIf=\\\"item.has_error == 1\\\" class=\\\"tooltiptext\\\">{{item.error_msg}}</span>\\r\\n                </p>\\r\\n              </td>\\r\\n              <td>\\r\\n                <p class=\\\"mb-0\\\" [ngClass]=\\\"{'tooltip':item.has_error == 1}\\\">\\r\\n                  <span id=\\\"{{item.code}}-ask\\\" class=\\\"ask-notifier text-center mb-0 {{item.ask_status}}\\\"\\r\\n                  [ngClass]=\\\"{'no-value':item.ask == null || item.ask.length==0,'min-ask':item.code == socketService.clientWalletSelModel.min_ask_market}\\\">\\r\\n                  {{item.ask | bitNumber : '1.8-8' : 'OFF' : item.has_error : 'NG' }}&nbsp;<i *ngIf=\\\"item.has_error == 1\\\" class=\\\"fa fa-exclamation-triangle error-ng\\\"></i>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"item.has_error == 1\\\" class=\\\"tooltiptext\\\">{{item.error_msg}}</span>\\r\\n              </p>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-container>\\r\\n          <ng-template #emptyClientMarketRecord>\\r\\n            <tr>\\r\\n              <td>\\r\\n                <a class=\\\"draggable-col\\\" href=\\\"javascript:void(0);\\\"></a>\\r\\n                <div class=\\\"switch select-area\\\">\\r\\n                  <input id=\\\"\\\" type=\\\"checkbox\\\">\\r\\n                  <span class=\\\"slider\\\"></span>\\r\\n                </div>\\r\\n              </td>\\r\\n              <!-- <td><span class=\\\"select-area\\\"><input type=\\\"checkbox\\\"></span></td> -->\\r\\n              <td>\\r\\n                <span class=\\\"crypt-market-img\\\">\\r\\n                  <a _ngcontent-c3=\\\"\\\" href=\\\"\\\">\\r\\n                  </a>\\r\\n                </span>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <span class=\\\"country-flag\\\">\\r\\n                </span>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <span id=\\\"btc-balance\\\" class=\\\"bit-balance\\\">-</span>\\r\\n              </td>\\r\\n              <td class=\\\"text-center\\\">\\r\\n                <span id=\\\"jpy-balance\\\" class=\\\"cash-balance\\\">-</span>\\r\\n              </td>\\r\\n              <td>\\r\\n                <span id=\\\"bid\\\" class=\\\"bid-notifier text-center mb-0 no-value\\\">OFF</span>\\r\\n              </td>\\r\\n              <td>\\r\\n                <span id=\\\"ask\\\" class=\\\"ask-notifier text-center mb-0 no-value\\\">OFF</span>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <tr>\\r\\n            <td colspan=\\\"3\\\"><span>Your Total Balance</span></td>\\r\\n            <td class=\\\"text-center\\\"><span id=\\\"btc-balance-total\\\">{{socketService.clientWalletSelModel.quote_balance_total | number : '1.8-8' }}</span></td>\\r\\n            <td class=\\\"text-center\\\"><span id=\\\"cash-balance-total\\\">{{socketService.clientWalletSelModel.base_balance_total | number : '1.8-8' }}</span></td>\\r\\n            <td colspan=\\\"2\\\" class=\\\"text-center\\\"></td>\\r\\n          </tr>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FrontendService } from '@services/frontend.service';\r\nimport { SocketIoService } from '@services/socket-io.service';\r\nimport tableDragger from 'table-dragger';\r\nimport { ClientMarketWallet } from '@models/client-market-wallet';\r\n\r\ndeclare let alertify: any;\r\n\r\n@Component({\r\n  selector: 'app-ticker-datagrid',\r\n  templateUrl: './ticker-datagrid.component.html',\r\n  styleUrls: ['./ticker-datagrid.component.css']\r\n})\r\nexport class TickerDatagridComponent implements OnInit {\r\n\r\n  @Input() bitForm;\r\n  public timer: any = {\r\n    nowTime        : new Date(),\r\n    countDown      : 0,\r\n    resetCountDown : 60\r\n  };\r\n  public _subscription: any;\r\n  constructor(public frontendApi: FrontendService, public socketService: SocketIoService) {\r\n      this._subscription = this.socketService.walletChange.subscribe((value) => {\r\n      this.socketService.resetBitForm(this.bitForm);\r\n      this.getClientMarketWalletList();\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getClientMarketWalletList();\r\n  }\r\n\r\n  /**\r\n   * Fetch Client Market Wallet List\r\n   */\r\n  getClientMarketWalletList() {\r\n    const me = this;\r\n    const params: any = {symbol : me.socketService.activeWalletSelModel['symbol']};\r\n    me.frontendApi.clientMarketWalletList(params).subscribe(res => {\r\n      me.socketService.clientWalletSelModel.items = res['data'];\r\n      me.ccxtApi();\r\n\r\n      /* INITIALIZE TABLE DRAGGER AFTER CLIENT MARKET WALLET INFO HAS BEEN UPDATE TO DATAGRID */\r\n      setTimeout(function() {\r\n        const el = document.getElementById('main-table');\r\n        if (el && me.socketService.clientWalletSelModel.items.length > 0) {\r\n          const dragger = tableDragger(el, {\r\n            mode: 'row',\r\n            dragHandler: '.draggable-col',\r\n            onlyBody: true,\r\n            animation: 300\r\n          });\r\n          dragger.on('drop', function(from, to) {\r\n            me.setDisplayOrer(from, to);\r\n          });\r\n        }\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  ccxtApi() {\r\n    const me = this;\r\n\t/* CONNECT TO SOCKET SERVER */\r\n    me.socketService.connect(me.bitForm);\r\n    me.getJpyRate();\r\n\r\n    /* COUNTDOWN TIMER TO RE-FETCH JPY RATE */\r\n    me.socketService.refetchJpyRateTimer = setInterval(() => {\r\n      me.timer.countDown += 1;\r\n      if (me.timer.countDown > me.timer.resetCountDown - 1) {\r\n        me.timer.nowTime = new Date();\r\n        me.timer.countDown = 0;\r\n        me.getJpyRate();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * @author ROHAN\r\n   * Update display order on table row drag.\r\n   * Also, save updated display order to DB.\r\n   * @param from [The position from which to table row is dragged.]\r\n   * @param to [The position to which to table row is dropped.]\r\n   */\r\n  setDisplayOrer(from: number, to: number) {\r\n    const new_from: number = from - 1;\r\n    const new_to: number = to - 1;\r\n    const displayOrderObj: any = [];\r\n    const newClientMarketWallet: Array<ClientMarketWallet> = [];\r\n\r\n    /* MANAGE NEW DISPLAY ORDER */\r\n    for (let i = 0 ; i < this.socketService.clientWalletSelModel.items.length; i++) {\r\n      const item: ClientMarketWallet = this.socketService.clientWalletSelModel.items[i];\r\n      /* DRAG-N-DROP FROM TOP TO BOTTOM */\r\n      if(from < to) {\r\n        if (i === new_from) {\r\n          displayOrderObj.push({id : item['id'], display_order : to});\r\n          newClientMarketWallet[new_to] = item;\r\n\r\n        }\r\n        else if (i < new_from) {\r\n          newClientMarketWallet[i] = item;\r\n          // do nothing.\r\n        }\r\n        else if (i > new_from && i <= new_to) {\r\n          displayOrderObj.push({id : item['id'], display_order : i});\r\n          newClientMarketWallet[(i - 1)] = item;\r\n        }\r\n        else if (i > new_to) {\r\n          // do nothing.\r\n          newClientMarketWallet[i] = item;\r\n        }\r\n\r\n      }\r\n      /* DRAG-N-DROP FROM BOTTOM TO TOP */\r\n      else {\r\n        if (i === new_from) {\r\n          displayOrderObj.push({id : item['id'], display_order : to});\r\n          newClientMarketWallet[new_to] = item;\r\n        }\r\n        else if (i < new_to) {\r\n          // do nothing.\r\n          newClientMarketWallet[i] = item;\r\n        }\r\n        else if (i === new_to) {\r\n          displayOrderObj.push({id : item['id'], display_order : (i + 2)});\r\n          newClientMarketWallet[(i + 1)] = item;\r\n        }\r\n        else if (i >= new_to && i < new_from) {\r\n          displayOrderObj.push({id : item['id'], display_order : (i + 2)});\r\n          newClientMarketWallet[(i + 1)] = item;\r\n        }\r\n        else if (i > new_from){\r\n          // do nothing.\r\n          newClientMarketWallet[i] = item;\r\n        }\r\n      }\r\n    }\r\n    /* SET UPDATED DISPLAY ORDER CLIENT WALLET ITEM TO CLIENT WALLET SELECTION MODEL */\r\n    this.socketService.clientWalletSelModel.items = newClientMarketWallet;\r\n\r\n    /* SAVE UPDATED DISPLAY ORDER ITEMS TO DATABASE */\r\n    this.frontendApi.setDisplayOrder(displayOrderObj).subscribe(res => {\r\n      if (res['success']) {\r\n        alertify.success(res['message']);\r\n      } else {\r\n        alertify.error(res['message']);\r\n      }\r\n    });\r\n  }\r\n\r\n  getJpyRate() {\r\n    const me = this;\r\n    const symbolsArr = [this.socketService.activeWalletSelModel.base, this.socketService.activeWalletSelModel.quote];\r\n    const params: any = { fsyms : symbolsArr.join(','), tsyms : 'JPY'};\r\n\r\n    this.frontendApi.getJpyRate(params).subscribe(response => {\r\n      const base = me.socketService.activeWalletSelModel.base,\r\n        quote = me.socketService.activeWalletSelModel.quote;\r\n\r\n      me.socketService.clientWalletSelModel.base_jpy_rate = response[base] && response[base]['JPY'] ? response[base]['JPY'] : 0;\r\n      me.socketService.clientWalletSelModel.quote_jpy_rate = response[quote] && response[quote]['JPY'] ? response[quote]['JPY'] : 0;\r\n\r\n      for (let i = 0 ; i < me.socketService.clientWalletSelModel.items.length; i++) {\r\n        const data: ClientMarketWallet = me.socketService.clientWalletSelModel.items[i];\r\n        if (data['enable_trade'] == 1) {\r\n          const exchangeId: string = data['code'];\r\n          me.socketService.getMarketBalance(exchangeId);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Enable/Disable ticker fetch checkbox toggle event.\r\n   * @param event [Change Event]\r\n   * @param rowIdx [Row Index]\r\n   * @param exchangeId [Market Code]\r\n   * @param recId [Market ID]\r\n   */\r\n  onOffStatusChange(event, rowIdx, exchangeId, recId) {\r\n    const controllerName = 'client-market-wallet';\r\n    this.frontendApi.toggleStatus(recId, controllerName).subscribe();\r\n\r\n    this.socketService.clientWalletSelModel.bidRateArr = {};\r\n    this.socketService.clientWalletSelModel.askRateArr = {};\r\n\r\n    const room = exchangeId + '_' + this.socketService.activeWalletSelModel.symbol;\r\n    /* IF ENABLE TICKER STATUS = ON */\r\n    if (event.target.checked) {\r\n      for (let i = 0 ; i < this.socketService.clientWalletSelModel.items.length; i++) {\r\n        if (this.socketService.clientWalletSelModel.items[i].code === exchangeId) {\r\n          this.socketService.clientWalletSelModel.items[i]['enable_trade'] = 1;\r\n          break;\r\n        }\r\n      }\r\n      /* JOIN ROOM */\r\n      this.socketService.joinRoom(room);\r\n      // this.startTicker(this, exchangeId,true);\r\n      /* FETCH MARKET BALANCE */\r\n      this.socketService.getMarketBalance(exchangeId);\r\n    }\r\n    /* IF ENABLE TICKER STATUS = OFF */\r\n    else {\r\n      let idx = -1;\r\n      let valid_market_count = 0;\r\n      // this.exchangeList[exchangeId]['enable_trade'] = 0;\r\n      for (let i = 0 ; i < this.socketService.clientWalletSelModel.items.length; i++) {\r\n        const item = this.socketService.clientWalletSelModel.items[i];\r\n        if (item.code === exchangeId) {\r\n          idx = i;\r\n          this.socketService.clientWalletSelModel.items[i]['enable_trade'] = 0;\r\n          // break;\r\n        }\r\n        if (item['enable_trade'] == 1 && item['has_error'] == 0 ) {\r\n          valid_market_count++;\r\n        }\r\n      }\r\n      /* RESET BIT FORM IF ALL MARKET ARE SET TO OFF OR HAVE ERROR WHILE FETCHING TICKER INFO */\r\n      if(valid_market_count == 0){\r\n        this.socketService.resetBitForm(this.bitForm);\r\n      }\r\n      /* LEAVE ROOM */\r\n      this.socketService.leaveRoom(room);\r\n\r\n      //for set value and update its classes\r\n      const obj: any = {\r\n        bid : null,\r\n        ask : null,\r\n        bid_status : null,\r\n        ask_status : null,\r\n        quote_balance : null,\r\n        // jpy_balance : null,\r\n        base_balance : null,\r\n        error_msg : '',\r\n        has_error : 0,\r\n      };\r\n      if (this.socketService.clientWalletSelModel.items[idx]['code'] === this.socketService.clientWalletSelModel.max_bid_market) {\r\n        this.socketService.clientWalletSelModel.max_bid_market = null;\r\n      }\r\n      if (this.socketService.clientWalletSelModel.items[idx]['code'] === this.socketService.clientWalletSelModel.min_ask_market) {\r\n        this.socketService.clientWalletSelModel.min_ask_market = null;\r\n      }\r\n      this.socketService.clientWalletSelModel.items[idx] = Object.assign(this.socketService.clientWalletSelModel.items[idx], obj);\r\n\r\n      delete this.socketService.clientWalletSelModel.base_balance_arr[exchangeId];\r\n      delete this.socketService.clientWalletSelModel.quote_balance_arr[exchangeId];\r\n      // delete this.socketService.clientWalletSelModel.cash_balance_arr[exchangeId];\r\n      this.socketService.calculateTotal();\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"i { cursor: pointer; }\"","module.exports = \"<div class=\\\"market-view trade-history secondary-tble\\\">\\r\\n  <h2 class=\\\"block-title\\\">\\r\\n    <span>\\r\\n      Trade History\\r\\n      <a  title=\\\"Open Trade Log Panel\\\">\\r\\n        <i (click)=\\\"openTradeLog()\\\" class=\\\"fa fa-external-link\\\"></i>\\r\\n      </a>\\r\\n    </span>\\r\\n  </h2>\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table\\\" id='log-table'>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th style=\\\"width: 80px;\\\"><label class=\\\"crypt-market-img head\\\">Market</label></th>\\r\\n          <!-- <th style=\\\"width: 80px;\\\"><label class=\\\"crypt-market-img head\\\">Wallet </label></th> -->\\r\\n          <th style=\\\"width: 70px;\\\"><label class=\\\"country-flag head\\\">Status</label></th>\\r\\n          <!-- <th style=\\\"width: 110px;\\\"><label class=\\\"bid-notifier head\\\">Trade Date Time</label></th> -->\\r\\n          <th style=\\\"width: 140px;\\\"><label class=\\\"bid-notifier head\\\">Request Time</label></th>\\r\\n          <th style=\\\"width: 140px;\\\"><label class=\\\"bid-notifier head\\\">Response Time</label></th>\\r\\n          <th style=\\\"width: 60px;\\\"><label class=\\\"bit-balance head\\\">Type</label></th>\\r\\n          <th style=\\\"width: 70px;\\\"><label class=\\\"cash-balance head\\\">Amount</label></th>\\r\\n          <th style=\\\"width: 70px;\\\"><label class=\\\"cash-balance head\\\">Profit (%)</label></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <ng-container *ngIf=\\\"frontendApi.homeTradeLogData?.length > 0; else emptyTradeLogRecord \\\">\\r\\n          <tr class=\\\"{{item.border_cls}}\\\" *ngFor=\\\"let item of frontendApi.homeTradeLogData\\\" style=\\\"text-align: center\\\">\\r\\n            <td>\\r\\n              <span class=\\\"crypt-market-img\\\">\\r\\n                <img src=\\\"{{frontendApi.BASE_URL}}images/{{item.image}}\\\" alt=\\\"{{item.market_name_en}}\\\">\\r\\n              </span>\\r\\n            </td>\\r\\n            <!-- <td>{{item.name}}</td> -->\\r\\n            <td>{{item.trade_status}}</td>\\r\\n            <td>{{item.request_time}}</td>\\r\\n            <td>{{item.response_time}}</td>\\r\\n            <td>{{item.trade_type}}</td>\\r\\n            <td>{{item.trade_base_amount}}</td>\\r\\n            <td rowspan=\\\"2\\\" *ngIf=\\\"item.rowspan == '1' && item.is_arbitrage == '1'\\\">{{ item.spred_percent }}</td>\\r\\n                  <td *ngIf=\\\"item.is_arbitrage == '0'\\\"></td>\\r\\n          </tr>\\r\\n        </ng-container>\\r\\n        <ng-template #emptyTradeLogRecord>\\r\\n          <tr style=\\\"text-align: center\\\">\\r\\n            <td> &nbsp; </td>\\r\\n            <td> &nbsp; </td>\\r\\n            <td> &nbsp; </td>\\r\\n            <td> &nbsp; </td>\\r\\n            <td> &nbsp; </td>\\r\\n            <td> &nbsp; </td>\\r\\n            <td> &nbsp; </td>\\r\\n          </tr>\\r\\n          <tr style=\\\"text-align: center\\\">\\r\\n            <td colspan=\\\"7\\\">No Trade History Records Found</td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '@services/frontend.service';\r\nimport { SocketIoService } from '@services/socket-io.service';\r\n\r\n@Component({\r\n  selector: 'app-trade-log-datagrid',\r\n  templateUrl: './trade-log-datagrid.component.html',\r\n  styleUrls: ['./trade-log-datagrid.component.css']\r\n})\r\nexport class TradeLogDatagridComponent implements OnInit {\r\n public _subscription: any;\r\n  constructor(public frontendApi: FrontendService, public socketService: SocketIoService) {\r\n  \tthis._subscription = this.socketService.walletChange.subscribe((value) => {\r\n\t  \tlet params = {wallet_id : this.socketService.activeWalletSelModel['id']};\r\n\t  \tthis.frontendApi.getTradeLog(params).subscribe(res => {\r\n\t      this.frontendApi.homeTradeLogData = res['data'];\r\n\t    });\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  openTradeLog(){\r\n  \twindow.open(window['BASE_URL'] + '#tradeLog', 'tradeLogPopUp', 'toolbar=yes,scrollbars=yes');\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div>\\r\\n\\t<label>Do you want to change Minimum Spred Percentage ?</label>\\r\\n\\t<input #minSpred type=\\\"number\\\" placeholder=\\\"Minimum Spred Percentage\\\" value=\\\"{{frontendApi.min_spred_percent}}\\\"><br><br><br><br>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" style=\\\"float: right;\\\" (click)=\\\"minSpredCancel(minSpred)\\\">CANCEL</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" style=\\\"float: right;\\\" (click)=\\\"minSpredReset()\\\">RESET</button>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" style=\\\"float: right;\\\" (click)=\\\"minSpredSave(minSpred)\\\">SAVE</button>\\r\\n</div>\"","import { Component, OnInit ,Input } from '@angular/core';\r\nimport { FrontendService } from '@services/frontend.service';\r\ndeclare let Orbit: any;\r\ndeclare let alertify: any;\r\n\r\n@Component({\r\n  selector: 'app-min-spred-modal',\r\n  templateUrl: './min-spred-modal.component.html',\r\n  styleUrls: ['./min-spred-modal.component.css']\r\n})\r\nexport class MinSpredModalComponent implements OnInit {\r\n\r\n  constructor(public frontendApi:FrontendService) { }\r\n  @Input() modal:any;\r\n  minSpredPercentage;\r\n  ngOnInit() {\r\n  }\r\n\r\n  minSpredSave(minSpred){\r\n  \tlet me = this;\r\n  \tme.minSpredPercentage=Number(minSpred.value);\r\n  \tme.frontendApi.saveMinSpredPercent(me.minSpredPercentage).subscribe(response =>{\r\n        if(response['success'])\r\n        {\r\n          alertify.success(response['message']);\r\n        }\r\n        else{\r\n          alertify.error(response['message']);\r\n        }\r\n      \tme.modal.hide();\r\n      });\r\n  }\r\n\r\n  minSpredReset(){\r\n  \tlet me =this;\r\n  \talertify.confirm('Do you want to Reset Minimum Spred Percentage ?',function(){\r\n  \t\t// me.minSpredPercentage=null;\r\n  \t\tme.frontendApi.saveMinSpredPercent(null).subscribe(response =>{\r\n        if(response['success'])\r\n        {\r\n          alertify.success(response['message']);\r\n        }\r\n        else{\r\n          alertify.error(response['message']);\r\n        }\r\n        me.modal.hide();\r\n      });\r\n  \t});\r\n  }\r\n\r\n  minSpredCancel(minSpred){\r\n  \tthis.modal.hide();\r\n  }\r\n\r\n}\r\n","module.exports = \".ui-modal-overlay,\\r\\n.ui-modal {\\r\\n\\tdisplay: none;\\r\\n\\tposition: fixed;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n}\\r\\n.ui-modal-overlay {\\r\\n\\twidth: 100%;\\r\\n\\theight: 100%;\\r\\n\\tbackground-color: rgba(0, 0, 0, 0.2);\\r\\n}\\r\\n.ui-modal {\\r\\n\\tmax-width: 100%;\\r\\n\\toutline: none;\\r\\n\\tbackground-color: #fefefe;\\r\\n\\tpadding: 0;\\r\\n\\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.5), 0 6px 20px 0 rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n.ui-modal-header {\\r\\n\\tposition: relative;\\r\\n\\tpadding: 8px 16px;\\r\\n\\tbackground-color: #5b9bd5;\\r\\n\\tcolor: white;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t    -ms-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\tdisplay: flex;\\r\\n\\tflex-direction: row;\\r\\n\\tflex-wrap: nowrap;\\r\\n\\talign-items: center;\\r\\n}\\r\\n.ui-modal-body {\\r\\n\\tposition: relative;\\r\\n\\tpadding: 10px 16px;\\r\\n\\tmax-height: calc(100vh - 200px);\\r\\n\\toverflow-y: auto;\\r\\n\\t-webkit-overflow-scrolling: touch;\\r\\n}\\r\\n.ui-modal-footer {\\r\\n\\tpadding: 15px;\\r\\n}\\r\\n.ui-titlebar {\\r\\n\\tdisplay: flex;\\r\\n\\talign-items: center;\\r\\n\\tflex-grow: 1;\\r\\n\\theight: 100%;\\r\\n\\toverflow: hidden;\\r\\n}\\r\\n.ui-modal-title {\\r\\n\\tfont-size: 20px;\\r\\n}\\r\\n.ui-controlbar {\\r\\n\\tdisplay: flex;\\r\\n\\talign-items: center;\\r\\n}\\r\\n.ui-icon {\\r\\n\\tcursor: pointer;\\r\\n\\twidth: 20px;\\r\\n\\theight: 20px;\\r\\n\\tbackground: transparent;\\r\\n\\tmargin-left: 5px;\\r\\n}\\r\\n.ui-icon:hover {\\r\\n\\topacity: 0.75;\\r\\n}\\r\\n.dragging {\\r\\n\\tcursor: move;\\r\\n\\tborder-color: #66afe9;\\r\\n\\toutline: 0;\\r\\n\\tbox-shadow: 0 4px 8px rgba(102,175,233,.6), 0 6px 20px rgba(0,0,0,.2);\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t -ms-user-select: none;\\r\\n\\t     user-select: none;\\r\\n}\\r\\n.resizing {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t -ms-user-select: none;\\r\\n\\t     user-select: none;\\r\\n}\\r\\n.ui-resizable-se {\\r\\n\\tposition:absolute;\\r\\n\\tcursor: se-resize;\\r\\n\\theight: 15px;\\r\\n\\twidth: 15px;\\r\\n\\tright: 0;\\r\\n\\tbottom: 0;\\r\\n}\\r\\n.ui-resizable-e {\\r\\n\\tposition:absolute;\\r\\n\\tcursor: e-resize;\\r\\n\\theight: 100%;\\r\\n\\twidth: 7px;\\r\\n\\tright: -5px;\\r\\n\\ttop: 0;\\r\\n}\\r\\n.ui-resizable-s {\\r\\n\\tposition:absolute;\\r\\n\\tcursor: s-resize;\\r\\n\\theight: 7px;\\r\\n\\twidth: 100%;\\r\\n\\tbottom: -5px;\\r\\n\\tleft: 0;\\r\\n}\"","module.exports = \"<div class=\\\"ui-modal-overlay\\\"\\r\\n     [style.zIndex]=\\\"zIndex\\\"\\r\\n     [ngStyle]=\\\"{'display': (visible && backdrop) ? 'block' : 'none'}\\\">\\r\\n</div>\\r\\n\\r\\n<div class=\\\"ui-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\n     #modalRoot\\r\\n     [ngStyle]=\\\"{'display': visible ? 'block' : 'none'}\\\"\\r\\n     [style.width.px]=\\\"width\\\"\\r\\n     [style.minWidth.px]=\\\"minWidth\\\"\\r\\n     [style.zIndex]=\\\"contentzIndex\\\"\\r\\n     (mousedown)=\\\"moveOnTop()\\\"\\r\\n     (touchstart)=\\\"moveOnTop()\\\">\\r\\n    <div class=\\\"ui-modal-header\\\" #modalHeader\\r\\n         (mousedown)=\\\"initDrag($event.pageX, $event.pageY)\\\"\\r\\n         (touchstart)=\\\"initDrag($event.touches[0].pageX, $event.touches[0].pageY)\\\">\\r\\n      <div class=\\\"ui-titlebar\\\">\\r\\n          <span class=\\\"ui-modal-title\\\" *ngIf=\\\"modalTitle\\\">{{modalTitle}}</span>\\r\\n          <ng-content select=\\\".app-modal-header\\\"></ng-content>\\r\\n      </div>\\r\\n      <div class=\\\"ui-controlbar\\\">\\r\\n          <span *ngIf=\\\"maximizable\\\" (click)=\\\"toggleMaximize($event)\\\">\\r\\n              <svg *ngIf=\\\"!maximized\\\" class=\\\"ui-icon\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"28\\\" height=\\\"32\\\" viewBox=\\\"0 0 28 32\\\">\\r\\n                <path fill=\\\"currentColor\\\" d=\\\"M27.55 3.9h-22.6c-0.55 0-1 0.45-1 1v22.3c0 0.55 0.45 1 1 1h22.55c0.55 0 1-0.45 1-1v-22.3c0.050-0.55-0.4-1-0.95-1zM5.95 26.15v-18h20.55v18h-20.55z\\\"></path>\\r\\n              </svg>\\r\\n              <svg *ngIf=\\\"maximized\\\" class=\\\"ui-icon\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"28\\\" height=\\\"32\\\" viewBox=\\\"0 0 28 32\\\">\\r\\n                <path fill=\\\"currentColor\\\" d=\\\"M27.9 3.75h-18.8c-0.4 0-0.75 0.35-0.75 0.75v4.3c0 0.1 0 0.2 0.050 0.3h-4.2c-0.55 0-1 0.45-1 1v17.4c0 0.55 0.45 1 1 1h17.65c0.55 0 1-0.45 1-1v-3.7c0.050 0 0.1 0.050 0.2 0.050h4.9c0.4 0 0.75-0.35 0.75-0.75v-18.6c-0.050-0.4-0.4-0.75-0.8-0.75zM5.2 26.5v-12.95c0.050 0 0.1 0 0.15 0h15.4c0.050 0 0.1 0 0.15 0v12.95h-15.7zM27.15 22.35h-4.15c-0.050 0-0.15 0-0.2 0.050v-12.3c0-0.55-0.45-1-1-1h-12c0.050-0.1 0.050-0.2 0.050-0.3v-3.55h17.3v17.1z\\\"></path>\\r\\n              </svg>\\r\\n          </span>\\r\\n          <span (click)=\\\"hide()\\\"\\r\\n                (mousedown)=\\\"onCloseIcon($event)\\\"\\r\\n                (touchstart)=\\\"onCloseIcon($event)\\\">\\r\\n            <svg class=\\\"ui-icon\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"28\\\" height=\\\"32\\\" viewBox=\\\"0 0 28 32\\\">\\r\\n              <path fill=\\\"currentColor\\\" d=\\\"M17.75 16l9.85-9.85c0.5-0.5 0.5-1.3 0-1.75-0.5-0.5-1.3-0.5-1.75 0l-9.85 9.85-9.85-9.9c-0.5-0.5-1.3-0.5-1.75 0-0.5 0.5-0.5 1.3 0 1.75l9.85 9.9-9.9 9.85c-0.5 0.5-0.5 1.3 0 1.75 0.25 0.25 0.55 0.35 0.9 0.35s0.65-0.1 0.9-0.35l9.85-9.85 9.85 9.85c0.25 0.25 0.55 0.35 0.9 0.35s0.65-0.1 0.9-0.35c0.5-0.5 0.5-1.3 0-1.75l-9.9-9.85z\\\"></path>\\r\\n            </svg>\\r\\n          </span>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"ui-modal-body\\\" #modalBody>\\r\\n      <ng-content select=\\\".app-modal-body\\\"></ng-content>\\r\\n    </div>\\r\\n    <div class=\\\"ui-modal-footer\\\" #modalFooter>\\r\\n      <ng-content select=\\\".app-modal-footer\\\"></ng-content>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"ui-resizable-s\\\"\\r\\n       *ngIf=\\\"!maximized\\\"\\r\\n       [style.zIndex]=\\\"contentzIndex\\\"\\r\\n       (mousedown)=\\\"initResizeS($event.pageX, $event.pageY)\\\"\\r\\n       (touchstart)=\\\"initResizeS($event.touches[0].pageX, $event.touches[0].pageY)\\\"></div>\\r\\n  <div class=\\\"ui-resizable-e\\\"\\r\\n       *ngIf=\\\"!maximized\\\"\\r\\n       [style.zIndex]=\\\"contentzIndex\\\"\\r\\n       (mousedown)=\\\"initResizeE($event.pageX, $event.pageY)\\\"\\r\\n       (touchstart)=\\\"initResizeE($event.touches[0].pageX, $event.touches[0].pageY)\\\"></div>\\r\\n  <div class=\\\"ui-resizable-se\\\"\\r\\n       *ngIf=\\\"!maximized\\\"\\r\\n       [style.zIndex]=\\\"contentzIndex\\\"\\r\\n       (mousedown)=\\\"initResizeSE($event.pageX, $event.pageY)\\\"\\r\\n       (touchstart)=\\\"initResizeSE($event.touches[0].pageX, $event.touches[0].pageY)\\\"></div>\\r\\n</div>\\r\\n\"","import {\r\n  Component, ElementRef, ViewChild, Input, Output, OnInit, AfterViewChecked, NgZone,\r\n  HostListener, HostBinding, EventEmitter\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: 'modal.component.html',\r\n  styleUrls: ['modal.component.css']\r\n})\r\nexport class ModalComponent implements OnInit, AfterViewChecked {\r\n\r\n  @Input() modalTitle: string;\r\n  @Input() width: any;\r\n  @Input() zIndex: number;\r\n  @Input() minWidth: number = 260;\r\n  @Input() minHeight: number = 200;\r\n  @Input() scrollTop: boolean = true;\r\n  @Input() maximizable: boolean;\r\n  @Input() backdrop: boolean = true;\r\n  @Input() styleClass: string;\r\n\r\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @ViewChild('modalRoot') modalRoot: ElementRef;\r\n  @ViewChild('modalBody') modalBody: ElementRef;\r\n  @ViewChild('modalHeader') modalHeader: ElementRef;\r\n  @ViewChild('modalFooter') modalFooter: ElementRef;\r\n\r\n  @HostBinding('class')\r\n  get cssClass(): string {\r\n    let cls = 'app-modal';\r\n    if (this.styleClass) {\r\n      cls += ' ' + this.styleClass;\r\n    }\r\n    return cls;\r\n  }\r\n\r\n  visible: boolean;\r\n  contentzIndex: number;\r\n  executePostDisplayActions: boolean;\r\n  dragging: boolean;\r\n  resizingS: boolean;\r\n  resizingE: boolean;\r\n  resizingSE: boolean;\r\n  lastPageX: number;\r\n  lastPageY: number;\r\n  maximized: boolean;\r\n  preMaximizeRootWidth: number;\r\n  preMaximizeRootHeight: number;\r\n  preMaximizeBodyHeight: number;\r\n  preMaximizePageX: number;\r\n  preMaximizePageY: number;\r\n\r\n  constructor(private element: ElementRef, private ngZone: NgZone) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.zIndex) {\r\n      this.zIndex = this.getMaxModalIndex() + 1;\r\n      this.zIndex = this.zIndex || 1100;\r\n    }\r\n    this.contentzIndex = this.zIndex + 1;\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (this.executePostDisplayActions) {\r\n      this.center();\r\n      this.executePostDisplayActions = false;\r\n    }\r\n  }\r\n\r\n  addEventListeners() {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      window.document.addEventListener('mousemove', this.onMousemove.bind(this));\r\n      window.document.addEventListener('mouseup', this.onMouseup.bind(this));\r\n      window.addEventListener('resize', this.onWindowResize.bind(this));\r\n\r\n      window.document.addEventListener('touchmove', this.onTouchmove.bind(this), false);\r\n      window.document.addEventListener('touchend', this.onTouchend.bind(this), false);\r\n    });\r\n  }\r\n\r\n  removeEventListener() {\r\n    window.document.removeEventListener('mousemove', this.onMousemove.bind(this));\r\n    window.document.removeEventListener('mouseup', this.onMouseup.bind(this));\r\n    window.removeEventListener('resize', this.onWindowResize.bind(this));\r\n\r\n    window.document.removeEventListener('touchmove', this.onTouchmove.bind(this));\r\n    window.document.removeEventListener('touchend', this.onTouchend.bind(this));\r\n  }\r\n\r\n  @HostListener('keydown.esc', ['$event'])\r\n  onKeyDown(event): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.hide();\r\n  }\r\n\r\n  onWindowResize(): void {\r\n    this.executePostDisplayActions = true;\r\n    this.center();\r\n  }\r\n\r\n  onMousemove(event: MouseEvent): void {\r\n    this.onDrag(event.pageX, event.pageY);\r\n    this.onResize(event.pageX, event.pageY);\r\n  }\r\n\r\n  onMouseup(): void {\r\n    this.endDrag();\r\n    this.endResize();\r\n  }\r\n\r\n  onTouchmove(event: TouchEvent): void {\r\n    const touch = event.touches[0];\r\n    this.onDrag(touch.pageX, touch.pageY);\r\n    this.onResize(touch.pageX, touch.pageY);\r\n  }\r\n\r\n  onTouchend(): void {\r\n    this.endDrag();\r\n    this.endResize();\r\n  }\r\n\r\n  show(): void {\r\n    this.executePostDisplayActions = true;\r\n    this.visible = true;\r\n    setTimeout(() => {\r\n      this.modalRoot.nativeElement.focus();\r\n      if (this.scrollTop) {\r\n        this.modalBody.nativeElement.scrollTop = 0;\r\n      }\r\n    }, 1);\r\n    this.addEventListeners();\r\n  }\r\n\r\n  hide(): void {\r\n    this.visible = false;\r\n    this.close.emit(true);\r\n    this.focusLastModal();\r\n    this.removeEventListener();\r\n  }\r\n\r\n  center() {\r\n    let elementWidth = this.modalRoot.nativeElement.offsetWidth;\r\n    let elementHeight = this.modalRoot.nativeElement.offsetHeight;\r\n\r\n    if (elementWidth === 0 && elementHeight === 0) {\r\n      this.modalRoot.nativeElement.style.visibility = 'hidden';\r\n      this.modalRoot.nativeElement.style.display = 'block';\r\n      elementWidth = this.modalRoot.nativeElement.offsetWidth;\r\n      elementHeight = this.modalRoot.nativeElement.offsetHeight;\r\n      this.modalRoot.nativeElement.style.display = 'none';\r\n      this.modalRoot.nativeElement.style.visibility = 'visible';\r\n    }\r\n\r\n    const x = Math.max((window.innerWidth - elementWidth) / 2, 0);\r\n    const y = 60 ;/*Math.max((window.innerHeight - elementHeight) / 2, 0);*/ \r\n\r\n    this.modalRoot.nativeElement.style.left = x + 'px';\r\n    this.modalRoot.nativeElement.style.top = y + 'px';\r\n  }\r\n\r\n  initDrag(pageX: number, pageY: number) {\r\n    if (!this.maximized) {\r\n      this.dragging = true;\r\n      this.lastPageX = pageX;\r\n      this.lastPageY = pageY;\r\n      this.modalRoot.nativeElement.classList.add('dragging');\r\n    }\r\n  }\r\n\r\n  onDrag(pageX: number, pageY: number) {\r\n    if (this.dragging) {\r\n      const deltaX = pageX - this.lastPageX;\r\n      const deltaY = pageY - this.lastPageY;\r\n      const leftPos = parseFloat(this.modalRoot.nativeElement.style.left);\r\n      const topPos = parseFloat(this.modalRoot.nativeElement.style.top);\r\n\r\n      this.modalRoot.nativeElement.style.left = leftPos + deltaX + 'px';\r\n      this.modalRoot.nativeElement.style.top = topPos + deltaY + 'px';\r\n\r\n      this.lastPageX = pageX;\r\n      this.lastPageY = pageY;\r\n    }\r\n  }\r\n\r\n  endDrag() {\r\n    this.dragging = false;\r\n    this.modalRoot.nativeElement.classList.remove('dragging');\r\n  }\r\n\r\n  initResizeS(pageX: number, pageY: number) {\r\n    this.resizingS = true;\r\n    this.lastPageX = pageX;\r\n    this.lastPageY = pageY;\r\n    this.modalRoot.nativeElement.classList.add('resizing');\r\n  }\r\n\r\n  initResizeE(pageX: number, pageY: number) {\r\n    this.resizingE = true;\r\n    this.lastPageX = pageX;\r\n    this.lastPageY = pageY;\r\n    this.modalRoot.nativeElement.classList.add('resizing');\r\n  }\r\n\r\n  initResizeSE(pageX: number, pageY: number) {\r\n    this.resizingSE = true;\r\n    this.lastPageX = pageX;\r\n    this.lastPageY = pageY;\r\n    this.modalRoot.nativeElement.classList.add('resizing');\r\n  }\r\n\r\n  onResize(pageX: number, pageY: number) {\r\n    if (this.resizingS || this.resizingE || this.resizingSE) {\r\n      const deltaX = pageX - this.lastPageX;\r\n      const deltaY = pageY - this.lastPageY;\r\n      const containerWidth = this.modalRoot.nativeElement.offsetWidth;\r\n      const containerHeight = this.modalRoot.nativeElement.offsetHeight;\r\n      const contentHeight = this.modalBody.nativeElement.offsetHeight;\r\n      const newWidth = containerWidth + deltaX;\r\n      const newHeight = containerHeight + deltaY;\r\n\r\n      if (this.resizingSE || this.resizingE) {\r\n        if (newWidth > this.minWidth) {\r\n          this.modalRoot.nativeElement.style.width = newWidth + 'px';\r\n        }\r\n      }\r\n\r\n      if (this.resizingSE || this.resizingS) {\r\n        if (newHeight > this.minHeight) {\r\n          this.modalRoot.nativeElement.style.height = newHeight + 'px';\r\n          this.modalBody.nativeElement.style.height = contentHeight + deltaY + 'px';\r\n          this.modalBody.nativeElement.style.maxHeight = 'none';\r\n        }\r\n      }\r\n\r\n      this.lastPageX = pageX;\r\n      this.lastPageY = pageY;\r\n    }\r\n  }\r\n\r\n  endResize() {\r\n    this.resizingS = false;\r\n    this.resizingE = false;\r\n    this.resizingSE = false;\r\n    this.modalRoot.nativeElement.classList.remove('resizing');\r\n  }\r\n\r\n  calcBodyHeight() {\r\n    const windowHeight = window.innerHeight;\r\n    if (this.modalRoot.nativeElement.offsetWidth > windowHeight) {\r\n      this.modalBody.nativeElement.style.height = (windowHeight * .75) + 'px';\r\n    }\r\n  }\r\n\r\n  getMaxModalIndex() {\r\n    let zIndex = 0;\r\n    const modals = document.querySelectorAll('.ui-modal');\r\n    [].forEach.call(modals, function (modal) {\r\n      const indexCurrent = parseInt(modal.style.zIndex, 10);\r\n      if (indexCurrent > zIndex) {\r\n        zIndex = indexCurrent;\r\n      }\r\n    });\r\n    return zIndex;\r\n  }\r\n\r\n  focusLastModal() {\r\n    const modal = this.findAncestor(this.element.nativeElement, 'app-modal');\r\n    if (modal && modal.children[1]) {\r\n      modal.children[1].focus();\r\n    }\r\n  }\r\n\r\n  findAncestor(el, cls) {\r\n    while ((el = el.parentElement) && !el.classList.contains(cls)) {\r\n    }\r\n    return el;\r\n  }\r\n\r\n  onCloseIcon(event: Event) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  toggleMaximize(event) {\r\n    if (this.maximized) {\r\n      this.revertMaximize();\r\n    } else {\r\n      this.maximize();\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  maximize() {\r\n    this.preMaximizePageX = parseFloat(this.modalRoot.nativeElement.style.top);\r\n    this.preMaximizePageY = parseFloat(this.modalRoot.nativeElement.style.left);\r\n    this.preMaximizeRootWidth = this.modalRoot.nativeElement.offsetWidth;\r\n    this.preMaximizeRootHeight = this.modalRoot.nativeElement.offsetHeight;\r\n    this.preMaximizeBodyHeight = this.modalBody.nativeElement.offsetHeight;\r\n\r\n    this.modalRoot.nativeElement.style.top = '0px';\r\n    this.modalRoot.nativeElement.style.left = '0px';\r\n    this.modalRoot.nativeElement.style.width = '100vw';\r\n    this.modalRoot.nativeElement.style.height = '100vh';\r\n    const diffHeight = this.modalHeader.nativeElement.offsetHeight + this.modalFooter.nativeElement.offsetHeight;\r\n    this.modalBody.nativeElement.style.height = 'calc(100vh - ' + diffHeight + 'px)';\r\n    this.modalBody.nativeElement.style.maxHeight = 'none';\r\n\r\n    this.maximized = true;\r\n  }\r\n\r\n  revertMaximize() {\r\n      this.modalRoot.nativeElement.style.top = this.preMaximizePageX + 'px';\r\n      this.modalRoot.nativeElement.style.left = this.preMaximizePageY + 'px';\r\n      this.modalRoot.nativeElement.style.width = this.preMaximizeRootWidth + 'px';\r\n      this.modalRoot.nativeElement.style.height = this.preMaximizeRootHeight + 'px';\r\n      this.modalBody.nativeElement.style.height = this.preMaximizeBodyHeight + 'px';\r\n\r\n      this.maximized = false;\r\n  }\r\n\r\n  moveOnTop() {\r\n    if (!this.backdrop) {\r\n      const zIndex = this.getMaxModalIndex();\r\n      if (this.contentzIndex <= zIndex) {\r\n        this.contentzIndex = zIndex + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\t<div class=\\\"progress-screen\\\" *ngIf=\\\"frontendApi.isOrderDetailDataEmpty == true\\\">\\r\\n\\t\\t<p>\\r\\n\\t\\t\\t<img src=\\\"{{frontendApi.BASE_URL}}images/processing.gif\\\" alt=\\\"\\\">\\r\\n\\t\\t\\t<span>Loading Data..</span>\\r\\n\\t\\t</p>\\r\\n\\t</div>\\r\\n\\t<ng-container *ngIf=\\\"frontendApi.isOrderDetailDataEmpty == false\\\">\\r\\n\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t<div class=\\\"panel-heading row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-12 mt-0\\\">\\r\\n\\t\\t\\t\\t\\t<h2 class=\\\"panel-title bg-light px-3 py-2\\\">\\r\\n\\t\\t\\t\\t\\t\\tRequest Trade Info\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"badge float-right\\\" \\r\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"{'badge-info':frontendApi.orderDetailData.status=='open',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t'badge-success':frontendApi.orderDetailData.status=='closed',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t'badge-warning':frontendApi.orderDetailData.status=='cancel'}\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t{{frontendApi.orderDetailData.status}}\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</h2>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t<table align=\\\"center\\\" class=\\\"border mb-4\\\">\\r\\n\\t\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t\\t<col width=\\\"40%\\\">\\r\\n\\t\\t\\t\\t\\t\\t<col width=\\\"60%\\\">\\r\\n\\t\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Market: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td><span><img src=\\\"{{frontendApi.BASE_URL}}images/markets/{{frontendApi.orderDetailData.market_code}}.png\\\" alt=\\\"{{frontendApi.orderDetailData.market_code}}\\\"></span> </td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Order Id: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{frontendApi.orderDetailData.request_trade_info.order_id}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Exchange Rate: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{frontendApi.orderDetailData.request_trade_info.exchange_rate }}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Estimated Profit: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{frontendApi.orderDetailData.request_trade_info.estimated_profit }}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Trade {{frontendApi.orderDetailData['request_trade_info'].quoteId}} Amount: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{frontendApi.orderDetailData.request_trade_info.trade_quote_amount}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Trade {{frontendApi.orderDetailData['request_trade_info'].baseId}} Amount: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{frontendApi.orderDetailData.request_trade_info.trade_base_amount}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Type: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{frontendApi.orderDetailData.request_trade_info.trade_type}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"panel panel-default\\\">\\r\\n\\t\\t\\t<div class=\\\"panel-header\\\">\\r\\n\\t\\t\\t\\t<h2 class=\\\"panel-title bg-light px-3 py-2\\\">Response Trade Info</h2>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div *ngFor=\\\"let item of frontendApi.orderDetailData.response_trade_info\\\" class=\\\"panel-body\\\">\\r\\n\\t\\t\\t\\t<table align=\\\"center\\\" class=\\\"border mb-4\\\">\\r\\n\\t\\t\\t\\t<colgroup>\\r\\n\\t\\t\\t\\t\\t<col width=\\\"40%\\\">\\r\\n\\t\\t\\t\\t\\t<col width=\\\"60%\\\">\\r\\n\\t\\t\\t\\t</colgroup>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Trade Id: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.id}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td> Time: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.formatted_timestamp }}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Symbol: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.symbol }}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Type: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.type}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Side: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.side}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Price ({{frontendApi.orderDetailData['request_trade_info'].quoteId}}): </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.price}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Cost: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.cost}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Amount ({{frontendApi.orderDetailData['request_trade_info'].baseId}}): </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.amount}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Filled ({{frontendApi.orderDetailData['request_trade_info'].baseId}}): </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.filled}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Remaining: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.remaining}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Status: </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.status}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t<td>Fee ({{item.fee ? item.fee.currency : ''}}): </td>\\r\\n\\t\\t\\t\\t\\t\\t<td>{{item.fee ? item.fee.cost : 0}}</td>\\r\\n\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</ng-container>\\r\\n\\t<!-- <ng-container *ngIf=\\\"frontendApi.orderDetailData.oldStatus == frontendApi.orderDetailData.status; else disableUpdateBtn\\\">\\r\\n\\t    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onFeatchApiResponseClick()\\\" disabled>Update Status</button>\\r\\n\\t</ng-container>\\r\\n\\t<ng-template #disableUpdateBtn>\\r\\n\\t    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"onFeatchApiResponseClick()\\\">Update Status</button>\\r\\n\\t</ng-template> -->\\r\\n    <!-- <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modal.close('Save click')\\\">OK</button> -->\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FrontendService } from '../../services/frontend.service';\r\ndeclare let alertify: any;\r\n\r\n@Component({\r\n  selector: 'app-order-detail-modal',\r\n  templateUrl: './order-detail-modal.component.html',\r\n  styleUrls: ['./order-detail-modal.component.css']\r\n})\r\nexport class OrderDetailModalComponent implements OnInit {\r\n\r\n  constructor(public frontendApi: FrontendService) { }\r\n  @Input() modal:any;\r\n  ngOnInit() {\r\n  }\r\n\tonFeatchApiResponseClick(){\r\n\t\tlet me = this,\r\n\t\t\trowIdx = this.frontendApi.orderDetailData.rowIdx;\r\n\t\tlet apiResponse = this.frontendApi.orderDetailData;\r\n\t\tlet api_response:any = {\r\n\t        'trade_status' : apiResponse['status'],\r\n\t      };\r\n\t    let params:any = {\r\n\t        'api_response' : JSON.stringify(api_response),\r\n\t        'trade_history_id' : apiResponse['trade_history_id'],\r\n\t      };\r\n\t\tthis.frontendApi.tradeLogData[rowIdx]['trade_status'] = this.frontendApi.orderDetailData['status'];\r\n\t    this.frontendApi.featchApiResponse(params).subscribe(res=>{\r\n\t      if(res['success']){\r\n\t        alertify.success(res['message']);\r\n\t      }\r\n\t      else{\r\n\t        alertify.error(res['message']);\r\n\t      }\r\n\t      this.modal.close('Save click');\r\n\t    });\r\n\t}\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\t<app-loading-mask *ngIf=\\\"frontendApi.isTradeBtnClicked == true\\\" [mask_text] =\\\"frontendApi.mask_text\\\"></app-loading-mask>\\r\\n\\t<div [ngClass]=\\\"{'col-md-6': frontendApi.tradeFormData.trade_type == 'Buy/Sell', 'col-md-12' : frontendApi.tradeFormData.trade_type == 'Buy', 'd-none': frontendApi.tradeFormData.trade_type == 'Sell'}\\\">\\r\\n\\t\\t<h3>Buy Info</h3>\\r\\n\\t\\t<table align=\\\"center\\\">\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Market: </td>\\r\\n\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.market_buy}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Price (BTC): </td>\\r\\n\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.min_ask_rate}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Trade Amount (ETH): </td>\\r\\n\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.trade_base_ask | bitNumber: '1.8-8'}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div [ngClass]=\\\"{'col-md-6': frontendApi.tradeFormData.trade_type == 'Buy/Sell', 'col-md-12' : frontendApi.tradeFormData.trade_type == 'Sell', 'd-none': frontendApi.tradeFormData.trade_type == 'Buy'}\\\">\\r\\n\\t\\t<h3>Sell Info</h3>\\r\\n\\t\\t<table align=\\\"center\\\">\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Market: </td>\\r\\n\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.market_sell}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Price (BTC): </td>\\r\\n\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.max_bid_rate}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Trade Amount (ETH): </td>\\r\\n\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.trade_base_bid | bitNumber: '1.8-8'}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t<table align=\\\"center\\\">\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t<td>Trade Amount (BTC): </td>\\r\\n\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.trade_quote_amount}}</td>\\r\\n\\t\\t\\t</tr>\\r\\n\\t\\t\\t<ng-container *ngIf=\\\"frontendApi.tradeFormData.trade_type == 'Buy/Sell' \\\">\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td>Spread Amount (BTC): </td>\\r\\n\\t\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.spred_jpy }}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td>Spread Percent: </td>\\r\\n\\t\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.spred_percent }}%</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<td>Estimated Profit (JPY): </td>\\r\\n\\t\\t\\t\\t\\t<td>{{frontendApi.tradeFormData.estimated_profit}}</td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</ng-container>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '../../services/frontend.service';\r\n\r\n@Component({\r\n  selector: 'app-trade-form-data',\r\n  templateUrl: './trade-form-data.component.html',\r\n  styleUrls: ['./trade-form-data.component.css']\r\n})\r\nexport class TradeFormDataComponent implements OnInit {\r\n\r\n  constructor(public frontendApi: FrontendService) { }\r\n\r\n  ngOnInit() {\r\n  \tlet me = this;\r\n  \tme.frontendApi.mask_text = \"Processing Trade..\";\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container container-fx\\\">\\r\\n   <app-loading-mask *ngIf=\\\"frontendApi.isSyncOrderClicked == true\\\" [mask_text] =\\\"frontendApi.mask_text\\\"></app-loading-mask>\\r\\n  <div class=\\\"row select-client-and-date\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      <label class=\\\"ele-label\\\">Date From:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"dateFrom\\\" class=\\\"datepicker\\\" name=\\\"trade_date\\\">\\r\\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n      <label class=\\\"ele-label\\\">Date To:</label>\\r\\n      <input type=\\\"text\\\" id=\\\"dateTo\\\" class=\\\"datepicker\\\" name=\\\"trade_date\\\">\\r\\n      <span class=\\\"btn btn-primary btn-sm pull-right\\\" (click)=\\\"onSyncOrderClick()\\\" ><i class=\\\"fa fa-refresh\\\"></i> Sync Order</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"market-view\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table\\\" style=\\\"text-align: center\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th colspan=\\\"2\\\">BUY</th>\\r\\n            <th colspan=\\\"2\\\">SELL</th>\\r\\n            <th>ESTIMATED PROFIT</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>{{tradeSummary['base']}}</td>\\r\\n            <td>{{tradeSummary['quote']}}</td>\\r\\n            <td>{{tradeSummary['base']}}</td>\\r\\n            <td>{{tradeSummary['quote']}}</td>\\r\\n            <td>JPY</td>\\r\\n          </tr>\\r\\n          <ng-template #summaryAmt>\\r\\n            <tr>\\r\\n              <td>{{tradeSummary['buy_base']}}</td>\\r\\n              <td>{{tradeSummary['buy_quote']}}</td>\\r\\n              <td>{{tradeSummary['sell_base']}}</td>\\r\\n              <td>{{tradeSummary['sell_quote']}}</td>\\r\\n              <td>{{tradeSummary['jpy_amt']}}</td>\\r\\n            </tr>\\r\\n          </ng-template>\\r\\n          <tr *ngIf=\\\"tradeSummary['message'] == 'Not Listed'; else summaryAmt\\\">\\r\\n            <td>0</td>\\r\\n            <td>0</td>\\r\\n            <td>0</td>\\r\\n            <td>0</td>\\r\\n            <td>0</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <!-- <tfoot *ngIf=\\\"tradeSummary['message'] == 'Not Listed';\\\">\\r\\n          <td colspan=\\\"5\\\">No results</td>\\r\\n        </tfoot> -->\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"market-view\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table\\\" datatable [dtOptions]=\\\"dtOptions\\\" id='log-table'>\\r\\n        <colgroup>\\r\\n          <col width=\\\"60px\\\">\\r\\n          <col width=\\\"90px\\\">\\r\\n          <!-- <col width=\\\"80px\\\"> -->\\r\\n          <col width=\\\"125px\\\">\\r\\n          <col width=\\\"100px\\\">\\r\\n          <col width=\\\"140px\\\">\\r\\n          <col width=\\\"140px\\\">\\r\\n          <col width=\\\"65px\\\">\\r\\n          <col width=\\\"90px\\\">\\r\\n          <col width=\\\"80px\\\">\\r\\n          <!-- <col width=\\\"80px\\\"> -->\\r\\n        </colgroup>\\r\\n        <thead>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr class=\\\"{{list.border_cls}}\\\" *ngFor=\\\"let list of frontendApi.tradeLogData; let idx=index\\\" style=\\\"text-align: center\\\">\\r\\n            <td>\\r\\n              <i *ngIf=\\\"list.trade_status == 'open'\\\" (click)=\\\"onCancelOrderClick(list, idx)\\\" class=\\\"fa fa-remove text-danger\\\" title=\\\"Cancel Order\\\" style=\\\"cursor: pointer;font-size:18px;\\\"></i>\\r\\n            </td>\\r\\n            <td><span><img src=\\\"{{frontendApi.BASE_URL}}images/{{list.image}}\\\" alt=\\\"{{ list.code}}\\\"></span> </td>\\r\\n            <!-- <td>{{ list.name }}</td> -->\\r\\n            <td><a class=\\\"order_id\\\" href=\\\"javascript:void(0);\\\" (click)=\\\"onOrderIdClick(modalRoot, list, idx)\\\">{{ list.order_id }}</a></td>\\r\\n            <td>{{ list.trade_status }}</td>\\r\\n            <td>{{ list.request_time }}</td>\\r\\n            <td>{{ list.response_time }}</td>\\r\\n            <td>{{ list.trade_type }}</td>\\r\\n            <td>{{ list.trade_base_amount }}</td>\\r\\n            <!-- <td>{{ list.token_id }}</td> -->\\r\\n            <td rowspan=\\\"2\\\" *ngIf=\\\"list.rowspan == '1' && list.is_arbitrage == '1'\\\">{{ list.spred_percent }}</td>\\r\\n            <td *ngIf=\\\"list.is_arbitrage == '0'\\\"></td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <tr>\\r\\n            <td></td>\\r\\n            <td></td>\\r\\n            <td><input style=\\\"width: 100%\\\" type=\\\"text\\\" name=\\\"image\\\" class=\\\"filter-input\\\"></td>\\r\\n            <td><input style=\\\"width: 100%\\\" type=\\\"text\\\" name=\\\"order_id\\\" class=\\\"filter-input\\\"></td>\\r\\n            <td>\\r\\n              <select name = \\\"status\\\" style=\\\"width: 100%; height: 100%\\\" class=\\\"filter-input trade_status\\\">\\r\\n                <option *ngFor = \\\"let item of trade_status | keyvalue\\\"  value=\\\"{{item.key}}\\\">{{item.value}}</option>\\r\\n              </select>\\r\\n            </td>\\r\\n            <td>\\r\\n              <input style=\\\"width: 100%\\\" type=\\\"text\\\" id=\\\"request_time\\\" class=\\\"date-search-input datepicker filter-input\\\" name=\\\"trade_date\\\">\\r\\n            </td>\\r\\n            <td>\\r\\n              <input style=\\\"width: 100%\\\" type=\\\"text\\\" id=\\\"response_time\\\" class=\\\"date-search-input datepicker filter-input\\\" name=\\\"trade_date\\\">\\r\\n            </td>\\r\\n            <td>\\r\\n              <select name = \\\"trade_type\\\" style=\\\"width: 100%; height: 100%\\\" class=\\\"filter-input trade_type\\\">\\r\\n                <option *ngFor = \\\"let item of trade_type | keyvalue\\\"  value=\\\"{{item.key}}\\\">{{item.value}}</option>\\r\\n              </select>\\r\\n            </td>\\r\\n            <td><input style=\\\"width: 100%\\\" type=\\\"text\\\" name=\\\"trade_base_amount\\\" class=\\\"filter-input\\\"></td>\\r\\n            <td><input style=\\\"width: 100%\\\" type=\\\"text\\\" name=\\\"spred_percent\\\" class=\\\"filter-input\\\"></td>\\r\\n          </tr>\\r\\n        </tfoot>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-modal #modalRoot\\r\\n               [modalTitle]=\\\"'Orbit'\\\"\\r\\n               [width]=\\\"500\\\"\\r\\n               [maximizable]=\\\"true\\\"\\r\\n               [zIndex]=\\\"1100\\\"\\r\\n               >\\r\\n      <ng-container class=\\\"app-modal-body\\\">\\r\\n        <app-order-detail-modal [modal] = \\\"modal\\\"></app-order-detail-modal>\\r\\n      </ng-container>\\r\\n      <ng-container class=\\\"app-modal-footer\\\">\\r\\n        <div class=\\\"float-right\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"modalRoot.hide()\\\">OK</button>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n</app-modal>\\r\\n\\r\\n\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FrontendService }  from '../../services/frontend.service';\r\nimport DataTables from 'datatables.net-dt';\r\nimport { Router,ActivatedRoute} from '@angular/router';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { PAGE_PER_SIZE} from '../../config/constant';\r\nimport { SocketIoService } from './../../services/socket-io.service';\r\ndeclare let alertify: any;\r\ndeclare let Orbit: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-trade-log',\r\n  templateUrl: './trade-log.component.html',\r\n  styleUrls: ['./trade-log.component.css']\r\n})\r\nexport class TradeLogComponent implements OnInit, AfterViewInit  {\r\n  @ViewChild(DataTableDirective)\r\n  private datatableElement: DataTables;\r\n  public modal:any;\r\n  public tradeSummary = [];\r\n  public changeDateStatus = '';\r\n  public selectedFromDate;\r\n  public selectedToDate;\r\n  public sColumn:any = null;\r\n  public search = {};\r\n  public trade_status = Orbit['TRADE_STATUS'];\r\n  public trade_type = Orbit['TRADE_TYPE'];\r\n  datePickerClicked;\r\n  public dtParams: any = null;\r\n\r\n  private _dt:any = new Date();\r\n  public dtOptions: DataTables.Settings = {};\r\n  // public tradeLogData:Array<any> = [];\r\n  selectedDate;\r\n  fromDate:Date;\r\n  lastDay;\r\n  toDate:Date;\r\n  public cols = [\r\n    { title : 'ID', data: 'id', visible: false }, \r\n    { title : 'Action', data: 'server_response',sortable:false}, \r\n    { title : 'Market', data: 'image' }, \r\n    // { title : 'Wallet', data: 'name' }, \r\n    { title : 'Order ID', data: 'order_id' }, \r\n    { title : 'Status', data: 'trade_status' },\r\n    { title : 'Request Time', data: 'request_time' },\r\n    { title : 'Response Time', data: 'response_time' },\r\n    { title : 'Type', data: 'trade_type' },\r\n    { title : 'Amount', data: 'trade_base_amount' },\r\n    // { title : 'Token', data: 'token_id' },\r\n    { title : 'Profit (%)', data: 'spred_percent' }\r\n   ];\r\n   public _subscription: any;\r\n  constructor(private router: Router, private route:ActivatedRoute,\r\n    public frontendApi : FrontendService, private socketService: SocketIoService) {\r\n      var me = this;\r\n      this._subscription = this.socketService.walletChange.subscribe((value) => {\r\n        me.onDateFilter()\r\n      })\r\n    }\r\n\r\n  ngOnInit() {\r\n    const me = this;\r\n    // this.onDateFilter();\r\n    me.frontendApi.mask_text = \"Processing Sync Order..\";\r\n    \r\n    /* TO FIND FIRST AND LAST DATE IN CURRENT MONTH */\r\n    let date        = new Date(), y = date.getFullYear(), m = date.getMonth();\r\n    let getFirstDay = new Date(y, m, 1);\r\n    this.fromDate   = new Date(getFirstDay);\r\n    this.toDate     = new Date();\r\n    // this.getTradeSummaryData(this.fromDate, this.toDate);\r\n\r\n    this.dtOptions = {\r\n      pagingType: 'simple_numbers',\r\n      pageLength: PAGE_PER_SIZE,\r\n      serverSide: true,\r\n      processing: true,\r\n      bLengthChange: true,\r\n      aaSorting: [[ 0, \"desc\" ]],\r\n      lengthMenu: [ [10, 25, 50,100,500], [10, 25, 50,100,500] ],\r\n      language: {\r\n        \"zeroRecords\": \" \",\r\n        \"emptyTable\": \"No records found\",\r\n        \"search\":\" \",\r\n        \"lengthMenu\": \"Page Size _MENU_ \",\r\n      },\r\n      dom: 'rt<\"clear\"><\"bottom\"lip><\"clear\">',\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        var BASE_URL = window['BASE_URL'];\r\n        $('.filter-input').on('keyup change', function (e) {\r\n            me.sColumn = e.target.name;\r\n            me.search['value']  = e.target.value;\r\n        });\r\n        dataTablesParameters['wallet_id'] = this.socketService.activeWalletSelModel['id'];\r\n        dataTablesParameters['client_id'] = Orbit.CURRENT_USER.user_id;\r\n        dataTablesParameters['startDate'] = this.formatDate(this.fromDate);\r\n        dataTablesParameters['endDate'] = this.formatDate(this.toDate);\r\n        dataTablesParameters['sColumn'] = this.sColumn;\r\n        dataTablesParameters['search']['value'] = this.search['value'] == null ? '' : this.search['value'];\r\n        dataTablesParameters['search']['regex'] = false;\r\n        dataTablesParameters['search']['type'] = me.search['type'] == null ? '' : me.search['type'];\r\n        this.frontendApi.getTradeLog(dataTablesParameters).subscribe(res => {\r\n          me.frontendApi.tradeLogData = res.data;\r\n          callback({\r\n            recordsTotal: res.recordsTotal,\r\n            recordsFiltered: res.recordsFiltered,\r\n            data: []\r\n          });\r\n          $('#log-table tfoot tr').appendTo('#log-table thead');\r\n        });\r\n\r\n        let symbol:string = this.socketService.activeWalletSelModel.symbol,\r\n        wallet_id:number = this.socketService.activeWalletSelModel.id,\r\n        params:any = {\r\n          'symbol' : symbol,\r\n          'wallet_id' : wallet_id,\r\n          'start_date' : dataTablesParameters['startDate'],\r\n          'end_date' : dataTablesParameters['endDate'],\r\n          'columns' : JSON.stringify(dataTablesParameters['columns'])\r\n        };\r\n        this.dtParams = params['columns'];\r\n        this.frontendApi.getTradeSummaryData(params).subscribe(res=>{\r\n          this.tradeSummary           = res['data'];\r\n          this.tradeSummary['buy_base'] = this.tradeSummary['buy_base'] == null ? 0 : this.tradeSummary['buy_base']\r\n          this.tradeSummary['buy_quote'] = this.tradeSummary['buy_quote'] == null ? 0 : this.tradeSummary['buy_quote']\r\n          this.tradeSummary['sell_base'] = this.tradeSummary['sell_base'] == null ? 0 : this.tradeSummary['sell_base']\r\n          this.tradeSummary['sell_quote'] = this.tradeSummary['sell_quote'] == null ? 0 : this.tradeSummary['sell_quote']\r\n          this.tradeSummary['base']   = res['base'];\r\n          this.tradeSummary['quote']  = res['quote'];\r\n          this.tradeSummary['symbol'] = res['symbol'];\r\n          this.tradeSummary['message']= res['message'];\r\n          if(res['success'] == false){\r\n            alertify.error(res['message']);\r\n          }\r\n        })\r\n\r\n      },\r\n      columns:this.cols\r\n      };\r\n\r\n    this.headerFilterConfig();\r\n\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    var me = this;\r\n    this.datatableFilterProcessing();\r\n  }\r\n\r\n  datatableFilterProcessing(){\r\n    var me = this;\r\n    this.datatableElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n      dtInstance.columns().every(function () {\r\n        const that = this;\r\n        $('input', this.footer()).on('keyup', function (e) {\r\n          if(e.keyCode == 13){\r\n            if (that.search() !== this['value']) {\r\n              me.search['type'] = me.sColumn == 'trade_base_amount' || me.sColumn == 'spred_percent'? 'num' : null;\r\n               that\r\n                .search(this['value'])\r\n                .draw();\r\n            }\r\n          }else if(e.keyCode == 8 || e.keyCode == 48){\r\n            if((this['value']) == ''){\r\n              //reload datatable\r\n              // me.onDatatableReload();\r\n               that\r\n                .search('')\r\n                .draw();\r\n            }\r\n          }\r\n        });\r\n        $('.date-search-input', this.footer()).on('change ', function (e) {\r\n          if (that.search() !== this['value']) {\r\n            // if(me.sColumn == 'image' || me.sColumn == 'name' || me.sColumn == 'trade_type' || me.sColumn == 'trade_status'){\r\n            //   me.search['type'] = null;\r\n            // }else{\r\n            //    me.search['type'] = 'num';\r\n            // }\r\n              that\r\n              .search(this['value'])\r\n              .draw();\r\n          }\r\n          // if(e.keyCode == 13){\r\n          // }else if(e.keyCode == 8 || e.keyCode == 46){\r\n          //   if((this['value']) == ''){\r\n          //     //reload datatable\r\n          //     me.onDatatableReload();\r\n          //     // dtInstance.cell(that).search('').draw();\r\n          //   }\r\n          // }\r\n        });\r\n        $('.trade_status', this.footer()).on('change', function (e) {\r\n            if (that.search() !== this['value']) {\r\n              // me.search['type'] = me.sColumn == 'trade_base_amount' || me.sColumn == 'spred_percent'? 'num' : null;\r\n              that\r\n                .search(this['value'])\r\n                .draw();\r\n            }\r\n        });\r\n\r\n        $('.trade_type', this.footer()).on('change', function (e) {\r\n            if (that.search() !== this['value']) {\r\n              // me.search['type'] = me.sColumn == 'trade_base_amount' || me.sColumn == 'spred_percent'? 'num' : null;\r\n              that\r\n                .search(this['value'])\r\n                .draw();\r\n            }\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  headerFilterConfig(){\r\n    var me = this;\r\n    $( \".datepicker\" ).datepicker({\r\n      dateFormat: \"yy-mm-dd\",\r\n      showOn: \"none\",\r\n      showAnim: 'slideDown',\r\n      buttonImageOnly: true,\r\n      showButtonPanel: true ,\r\n      autoSize: true,\r\n      closeText: \"Clear\",\r\n      maxDate: new Date(),\r\n    });\r\n\r\n    //change date values\r\n    this.setChangedDate(); \r\n\r\n    //show datepicker on textfield click\r\n    this.showDatePickerOnClick();\r\n\r\n    //clear date\r\n    $(document).on(\"click\", \".ui-datepicker-close\", function(){\r\n      $('.datepicker').val(\"\");\r\n      me.onDatatableReload();\r\n    });\r\n\r\n    // $('.date-search-input').on( 'change', function (e) {\r\n    //    me.onHeaderFilterSearchInput(e);\r\n    // });\r\n\r\n    //filter records on date change\r\n    $('#dateFrom').on( 'change', function (e) {\r\n        me.onDateFrom(e)\r\n    })\r\n    $('#dateTo').on( 'change', function (e) {\r\n        me.onDateTo(e)\r\n    })\r\n\r\n    //on datepicker today date btn click\r\n    $(document).on(\"click\", \".ui-datepicker-current\", function(e){\r\n      e.target.value = new Date();\r\n      if(me.datePickerClicked == 'dateFrom'){\r\n        me.onDateFrom(e);\r\n      }else if(me.datePickerClicked == 'dateTo'){\r\n        me.onDateTo(e);\r\n      }else{\r\n        $.datepicker._curInst.input.datepicker('setDate', new Date()).datepicker('hide');\r\n        // me.datatablesFilterProcessing();\r\n        // me.onHeaderFilterSearchInput(e);\r\n        // e.target.name = 'trade_date';\r\n      }\r\n       $.datepicker._curInst.input.datepicker('hide');\r\n    })\r\n\r\n  }\r\n\r\n  onHeaderFilterSearchInput(e){\r\n    this.sColumn = e.target.name;\r\n    this.search['value'] = e.target.value;\r\n    this.search['type'] = 'num';\r\n    $('#log-table').DataTable().draw();\r\n  }\r\n\r\n  showDatePickerOnClick(){\r\n    var me = this;\r\n    $('#request_time').click(function(){\r\n        $('#request_time').datepicker('show');\r\n        me.datePickerClicked = 'request_time';\r\n    });\r\n    $('#response_time').click(function(){\r\n        $('#response_time').datepicker('show');\r\n        me.datePickerClicked = 'response_time';\r\n    });\r\n    $('#dateFrom').click(function(){\r\n        $('#dateFrom').datepicker('show');\r\n        me.datePickerClicked = 'dateFrom';\r\n    });\r\n    $('#dateTo').click(function(){\r\n        $('#dateTo').datepicker('show');\r\n        me.datePickerClicked = 'dateTo';\r\n    });\r\n  }\r\n\r\n  onDatatableReload(){\r\n      // me.sColumn = $(this).attr('name');\r\n      this.search['value'] = '';\r\n      this.search['type'] = '';\r\n      $('#log-table').DataTable().draw();\r\n  }\r\n\r\n  setChangedDate(){\r\n    $(\"#dateFrom\").datepicker(\"setDate\", this.formatDate(this.fromDate));\r\n    $(\"#dateTo\").datepicker(\"setDate\", this.formatDate(this.toDate));\r\n  }\r\n\r\n  onDateFilter(){\r\n    var date = this.tradeHistoryParams();\r\n    $('#log-table').data('wallet_id', this.socketService.activeWalletSelModel.id);\r\n    $('#log-table').data('startDate', date.startDate);\r\n    $('#log-table').data('endDate', date.endDate);\r\n    $('#log-table').data('search.value', '');\r\n    $('#log-table').data('search.type', 'num');\r\n    $('#log-table').DataTable().draw();\r\n  }\r\n\r\n  onOrderIdClick(modal, list, idx){\r\n    var modalCls:any= {ariaLabelledBy: 'modal-basic-title'};\r\n    this.modal = modal.show();  \r\n    this.frontendApi.orderDetailData = {};\r\n    this.frontendApi.isOrderDetailDataEmpty = true;\r\n    this.openOrderDetailDialog(modal, list, idx);\r\n  }\r\n  openOrderDetailDialog(modal, item , rowIdx){\r\n    let recId = item['id'],\r\n      orderId = item['order_id'],\r\n      marketCode = item['code'],\r\n      symbol = item['name'],\r\n      status = item['trade_status'];\r\n    let [ baseId, quoteId ] = symbol.split ('/');\r\n\r\n    this.frontendApi.viewOrderDetail(recId,orderId,marketCode).subscribe(res=>{\r\n      if(res['success']){\r\n        // var modalCls:any= {ariaLabelledBy: 'modal-basic-title'};\r\n        this.frontendApi.isOrderDetailDataEmpty = false;\r\n        this.frontendApi.orderDetailData.market_code=res.market_code;\r\n        this.frontendApi.orderDetailData.status=res.status;\r\n        this.frontendApi.orderDetailData['request_trade_info'] = res['request_trade_info'];\r\n        this.frontendApi.orderDetailData['response_trade_info'] = res['response_trade_info'];\r\n        this.frontendApi.orderDetailData['request_trade_info']['trade_history_id'] = recId;\r\n        this.frontendApi.orderDetailData['request_trade_info']['oldStatus'] = status;\r\n        this.frontendApi.orderDetailData['request_trade_info']['rowIdx'] = rowIdx;\r\n        this.frontendApi.orderDetailData['request_trade_info']['baseId'] = baseId;\r\n        this.frontendApi.orderDetailData['request_trade_info']['quoteId'] = quoteId;\r\n        \r\n        // this.modal = this.modalService.open(content, modalCls);\r\n      }\r\n      else{\r\n          alertify.error(res['message']);\r\n          modal.hide();\r\n      }\r\n    });\r\n  }\r\n\r\n  getTradeSummaryData(from, to){\r\n    let symbol:string = this.socketService.activeWalletSelModel.symbol,\r\n        wallet_id:number = this.socketService.activeWalletSelModel.id,\r\n        params:any = {\r\n          'symbol' : symbol,\r\n          'wallet_id' : wallet_id,\r\n          'start_date' : this.formatDate(from),\r\n          'end_date' : this.formatDate(to),\r\n          'columns' : this.dtParams\r\n        };\r\n    this.frontendApi.getTradeSummaryData(params).subscribe(res=>{\r\n        this.tradeSummary           = res['data'];\r\n        this.tradeSummary['base']   = res['base'];\r\n        this.tradeSummary['quote']  = res['quote'];\r\n        this.tradeSummary['symbol'] = res['symbol'];\r\n        this.tradeSummary['message']= res['message'];\r\n        if(res['success'] == false){\r\n          alertify.error(res['message']);\r\n        }\r\n    })\r\n  }\r\n\r\n  // validateDateFilter(event){\r\n  //   var selectedDate = this.formatDate(event),//event+'-01'; //\r\n  //      todayDate = new Date(),\r\n  //      tomorrow = this.formatDate(new Date(todayDate.getFullYear(), todayDate.getMonth(), todayDate.getDate() + 1));\r\n  //   if(selectedDate >= tomorrow){\r\n  //     alertify.error(\"Date has been set Incorrectly\");\r\n  //   }else{\r\n  //     this.onDateFilter()\r\n  //   }\r\n  // }\r\n\r\n  onDateFrom(e){\r\n    let event = new Date(e.target.value);\r\n    this.changeDateStatus = 'from';\r\n    this.changeDate(event);\r\n    this.selectedFromDate = this.formatDate(event);\r\n    this.selectedToDate = this.formatDate(this.toDate);\r\n    this.onDateFilter();\r\n    // this.getTradeSummaryData(this.selectedFromDate,this.selectedToDate);\r\n  }\r\n\r\n  onDateTo(e){\r\n    let event = new Date(e.target.value);\r\n    this.changeDateStatus = 'from';\r\n    this.changeDateStatus = 'to';\r\n    this.changeDate(event);\r\n    this.selectedFromDate = this.formatDate(this.fromDate);\r\n    this.selectedToDate = this.formatDate(event);\r\n    this.onDateFilter();\r\n    // this.getTradeSummaryData(this.selectedFromDate,this.selectedToDate);\r\n  }\r\n\r\n  setLastDay(date)\r\n  {\r\n    this.selectedToDate = this.formatDate(new Date(date.getFullYear(), date.getMonth() + 1, 0));\r\n    this.toDate=this.selectedToDate;\r\n  }\r\n\r\n  getTradeHistoryList(){\r\n    this.frontendApi.getTradeLog(this.tradeHistoryParams()).subscribe(res=>{\r\n      this.frontendApi.tradeLogData = res['data'];\r\n    })\r\n  }\r\n\r\n tradeHistoryParams(){\r\n  let startDate = this.selectedFromDate || 0, endDate = this.selectedToDate|| 0;\r\n   let obj = {\r\n     startDate:startDate,\r\n     endDate:endDate\r\n   };\r\n   return obj;\r\n }\r\n  onSyncOrderClick(){\r\n    let me = this;\r\n    this.frontendApi.isSyncOrderClicked = true;\r\n    let tradeLogData = this.frontendApi.tradeLogData;\r\n    let params:any = {\r\n        // 'tradeLogData' : JSON.stringify(tradeLogData),\r\n        'date_from' : me.formatDate(me.fromDate),\r\n        'date_to' : me.formatDate(me.toDate)\r\n      };\r\n    this.frontendApi.syncOrder(params).subscribe(res=>{\r\n      if(res['success']){\r\n        alertify.success(res['message']);\r\n      }\r\n      else{\r\n        alertify.error(res['message']);\r\n      }\r\n      this.frontendApi.isSyncOrderClicked = false;\r\n    });\r\n  }\r\n\r\n  public formatDate(params) {\r\n    var d = new Date(params),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        year = d.getFullYear();\r\n        month = month.length < 2 ? ('0' + month) : month;\r\n        day = day.length < 2 ? ('0' + day) : day;\r\n        return [year, month, day].join('-');\r\n  }\r\n  \r\n  changeDate(argDate) {\r\n    let todayDate = new Date(), dtFrom: Date, dtTo:Date, getFirstDay:Date, getLastDay:Date,year , month;\r\n    dtFrom = new Date(this.fromDate);\r\n    dtTo = new Date(argDate);\r\n    year = dtTo.getFullYear();\r\n    month = dtTo.getMonth();\r\n\r\n    if(this.changeDateStatus == 'from') {\r\n      dtFrom = new Date(argDate);\r\n      dtTo = new Date(this.toDate);\r\n      year = dtFrom.getFullYear();\r\n      month = dtFrom.getMonth();\r\n    }\r\n    getFirstDay = new Date(dtFrom);\r\n    getLastDay  = new Date(dtTo);\r\n\r\n    if(dtFrom.getTime() > dtTo.getTime()){\r\n      getFirstDay = new Date(year, month, 1);\r\n      if(this.changeDateStatus == 'from' && dtFrom.getTime() > dtTo.getTime()) {\r\n        getFirstDay = dtFrom;\r\n        getLastDay  = new Date(year, month + 1, 0);\r\n      }\r\n      if(getLastDay.getTime() > todayDate.getTime()) {\r\n        getLastDay  = new Date();\r\n      }\r\n    }\r\n    this.fromDate = new Date(getFirstDay);\r\n    this.toDate = new Date(getLastDay);\r\n    this.setChangedDate();\r\n  }\r\n  onCancelOrderClick(list, idx){\r\n    let me = this;\r\n    var message = 'Do you want to cancel order #'+list.order_id+'?';\r\n    alertify.confirm(message, function(e) {\r\n      if(e) {\r\n        let params:any = {\r\n          'id'         : list.id,\r\n          'market_code': list.code,\r\n          'symbol'     : list.name,\r\n          'order_id'   : list.order_id,\r\n        };\r\n        me.frontendApi.cancelOrder(params).subscribe(res=>{\r\n          if(res['success']){\r\n            alertify.success(res['message']);\r\n            me.onDatatableReload();\r\n          }\r\n          else{\r\n            alertify.error(res['message']);\r\n          }\r\n        });\r\n      }else{\r\n        // \r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".error{\\r\\n\\tborder:  3px solid red;\\r\\n}\"","module.exports = \"<div class=\\\"user-form-container col-md-12\\\">\\r\\n\\t<h2>General Settings</h2>\\r\\n\\t<form class=\\\"change-pwd-form\\\" [formGroup]=\\\"form\\\">\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-3\\\">Enable Trade Sounds</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"switch\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" formControlName = \\\"enable_trade_amout_click_sound\\\" checked>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"slider\\\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-3\\\">Enable Alert Sounds</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"switch\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" formControlName = \\\"enable_alert_sound\\\" checked>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"slider\\\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-3\\\">Enable Trade Confirmation Modal</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"switch\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" formControlName = \\\"enable_trade_confirmation_modal\\\" checked>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"slider\\\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-3\\\">Enable Min-spread Sounds</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"switch\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" formControlName = \\\"enable_min_spred_sound\\\" checked>\\r\\n\\t\\t\\t\\t\\t<span class=\\\"slider\\\"></span>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- min Spred Percentage Start-->\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-3\\\">Minimum Spread Percentage</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<input type=\\\"number\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"0.01\\\" class=\\\"form-control\\\" formControlName=\\\"min_spred_percent\\\" placeholder=\\\"minimum spread percentage\\\" [ngClass] = \\\"{ 'error' : form.get('min_spred_percent').invalid }\\\">\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- min Spred Percentage End -->\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-3\\\">Default theme </label>\\r\\n\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t<select formControlName=\\\"default_theme\\\" class=\\\"form-control\\\">\\r\\n\\t\\t\\t\\t\\t<option value =\\\"1\\\">Day</option>\\r\\n\\t\\t\\t\\t\\t<option value =\\\"0\\\">Night</option>\\r\\n\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-4 offset-md-3\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"saveUserInfo()\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"onCancelBtnClick()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '../../../services/frontend.service';\r\nimport { FormGroup, FormBuilder , FormArray,FormControl, Validators } from '@angular/forms';\r\ndeclare var $: any;\r\ndeclare let alertify: any;\r\ndeclare let Orbit: any;\r\n\r\n@Component({\r\n  selector: 'app-general-settings',\r\n  templateUrl: './general-settings.component.html',\r\n  styleUrls: ['./general-settings.component.css']\r\n})\r\nexport class GeneralSettingsComponent implements OnInit {\r\n\r\n  public form: FormGroup;\r\n  public userInfo : Array<any> = [];\r\n  public minSpredData  : Array<any>;\r\n  constructor(private frontEndApi : FrontendService, public fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.createInitialForm();\r\n  \tthis.getUserInfo();\r\n  }\r\n\r\n  changeTheme(day){\r\n\r\n  }\r\n\r\n   createInitialForm(){\r\n    const me = this;\r\n    const user:any = Orbit.CURRENT_USER;\r\n    this.form = this.fb.group({\r\n      'username'                       : [{value : '',disabled : true}],\r\n      'client_name_en'                 : [user.full_name,Validators.required],\r\n      'address_line1'                  : ['',Validators.required],\r\n      'mobile_no'                      : '',\r\n      'email'                          : ['',[Validators.required,Validators.email]],\r\n      'enable_trade_confirmation_modal': '',\r\n      'enable_min_spred_sound'         : '',\r\n      'enable_alert_sound'             : '',\r\n      'enable_trade_amout_click_sound' : '',\r\n      'country'                        : '',\r\n      'default_theme'                  : user.user_settings.default_theme,\r\n      'min_spred_percent'              : ['',[Validators.max(100),Validators.min(0)]],\r\n    });\r\n   }\r\n\r\n   saveUserInfo(){\r\n    if(this.form.valid){\r\n      let min_Spred_Percentage = this.form.value.min_spred_percent;\r\n      const formValue = this.form.value;\r\n      var data = {\r\n        'enable_trade_amout_click_sound' :formValue.enable_trade_amout_click_sound == (true || 1) ? 1 : 0  ,\r\n        'enable_alert_sound'             :formValue.enable_alert_sound == (true || 1) ? 1 : 0,\r\n        'enable_trade_confirmation_modal':formValue.enable_trade_confirmation_modal == (true || 1) ? 1 : 0,\r\n        'enable_min_spred_sound'         :formValue.enable_min_spred_sound == (true || 1) ? 1 : 0,\r\n        'default_theme'                  :formValue.default_theme == (true || 1) ? 1 : 0,\r\n        'min_spred_percent'              :formValue.min_spred_percent,\r\n    \t}\r\n    \tthis.frontEndApi.saveGeneralSettings(data).subscribe(res=>{\r\n    \t\tif(res['success']){\r\n          alertify.success('Settings Saved Succesfully');\r\n          this.setUserSettings();\r\n          alertify.confirm('Do you want to Reload this Page?', function(e) {\r\n            if(e) {\r\n                window.location.reload();    \r\n              }\r\n             });\r\n    \t\t}\r\n      });\r\n    }\r\n  }\r\n\r\n  getUserInfo(){\r\n  \tthis.frontEndApi.getUserInfo().subscribe(res=>{\r\n  \t\tthis.userInfo = res['data'];\r\n  \t \tthis.form.setValue(res.data);\r\n  \t});\r\n  }\r\n\r\n  setUserSettings(){\r\n  \tOrbit['CURRENT_USER']['user_settings']['enable_trade_amout_click_sound'] = this.form.value.enable_trade_amout_click_sound == (true || 1) ? 1 : 0 ;\r\n  \tOrbit['CURRENT_USER']['user_settings']['enable_alert_sound'] = this.form.value.enable_alert_sound == (true || 1) ? 1 : 0 ;\r\n  \tOrbit['CURRENT_USER']['user_settings']['enable_trade_confirmation_modal'] = this.form.value.enable_trade_confirmation_modal == (true || 1) ? 1 : 0  ;\r\n  \tOrbit['CURRENT_USER']['user_settings']['enable_min_spred_sound'] = this.form.value.enable_min_spred_sound == (true || 1) ? 1 : 0 ;\r\n  \tOrbit['CURRENT_USER']['user_settings']['default_theme'] = this.form.value.default_theme == (true || 1) ? 1 : 0 ;\r\n  }\r\n\r\n  onCancelBtnClick()\r\n  {\r\n    let me = this;\r\n    if(me.form.dirty)\r\n    {\r\n      alertify.confirm('Do you want to cancel these changes?', function(e) {\r\n        if(e){\r\n          me.form.setValue(me.userInfo);  \r\n          me.form.markAsPristine();      \r\n        }\r\n      });\r\n    } \r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"user-form-container col-md-12\\\">\\r\\n\\t<h2>Change Password</h2>\\r\\n\\t<form class=\\\"change-pwd-form\\\" [formGroup]=\\\"form\\\">\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">Old Password</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"*************\\\" formControlName = \\\"old_password\\\"> </div>\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\"><span class=\\\"error\\\">{{formErrors['old_password']}}</span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">New Password</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"*************\\\" formControlName = \\\"new_password\\\"> </div>\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\"><span class=\\\"error\\\">{{formErrors['new_password']}}</span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">Confirm Password</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"*************\\\" formControlName = \\\"confirm_password\\\"> </div>\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\"><span class=\\\"error\\\">{{formErrors['confirm_password']}}</span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"saveUserPassword()\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"onCancelBtnClick()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '../../../services/frontend.service';\r\nimport { FormGroup, FormBuilder , FormControl, Validators } from '@angular/forms';\r\n\r\ndeclare var $: any;\r\ndeclare let alertify: any;\r\n\r\n@Component({\r\n  selector: 'app-password-info',\r\n  templateUrl: './password-info.component.html',\r\n  styleUrls: ['./password-info.component.css']\r\n})\r\nexport class PasswordInfoComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public formErrors:any = {};\r\n\r\n  constructor(public frontEndApi : FrontendService, public fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.createInitialForm();\r\n  }\r\n\r\n   createInitialForm(){\r\n  \tvar me = this;\r\n    this.form = this.fb.group({\r\n      'old_password' \t : ['',Validators.required],\r\n      'new_password'  \t : ['',Validators.required],\r\n      'confirm_password' : ['',Validators.required]\r\n    });\r\n   }\r\n\r\n   saveUserPassword(){\r\n\t   \tif(this.form.value.new_password != this.form.value.confirm_password){\r\n\t   \t\talertify.error('New password and confirm password do not match');\r\n\t   \t\treturn;\r\n\t  \t}\r\n\t  \tif(!this.form.valid){\r\n\t      this.formErrors = {};\r\n\t      /* IF FORM IS INVALID SET ERROR MESSAGE */\r\n\t      this.setFormErrorMsg();\r\n\t      // this.validateAllFormFields(this.staffDetailForm);\r\n\t    }else{\r\n\t\t   \tvar me =this;\r\n\t\t   \tlet data = {\r\n\t\t  \t    'old_password' \t\t\t:this.form.value.old_password,\r\n\t\t  \t    'new_password'  \t\t:this.form.value.new_password,\r\n\t\t  \t    'confirm_password'   \t:this.form.value.confirm_password\r\n\t\t  \t},\r\n\t\t  \tmessage = \"Do you want to change your password\";\r\n\t\t  \talertify.confirm(message, function(e) {\r\n\t\t\t    if(e) {\r\n\t\t\t\t  \tme.frontEndApi.savePasswordSettings(data).subscribe(res=>{\r\n\t\t\t\t  \t\tif(res['success']){\r\n\t\t\t\t  \t\t\talertify.success(res['message']);\r\n\t\t\t\t  \t\t\tme.form.reset();\r\n\t\t\t\t  \t\t\tme.formErrors = {};\r\n\t\t\t\t  \t\t\talertify.confirm('Do you want to Reload this Page?', function(e) {\r\n\t\t\t\t            if(e) {\r\n\t\t\t\t                window.location.reload();    \r\n\t\t\t\t              }\r\n\t\t\t\t             });\r\n\t\t\t\t  \t\t}else{\r\n\t\t\t\t  \t\t\talertify.error(res['message']);\r\n\t\t\t\t  \t\t}\r\n\t\t\t\t  \t\tme.form.reset();\r\n\t\t\t\t  \t\tme.formErrors = {};\r\n\t\t\t\t    });\r\n\t\t\t  \t}\r\n\t\t\t});\r\n\t    \t\r\n\t    }\r\n  \t}\r\n\r\n  \tsetFormErrorMsg(){\r\n\t    let errors = this.getFormErrors(this.form);\r\n\r\n\t    for(let key in errors){\r\n\t      if(errors[key] != null){\r\n\t        let obj:any = errors[key];\r\n\t        if(obj.hasOwnProperty('required')){\r\n\t          this.formErrors[key] = 'This field is required.';\r\n\t        }\r\n\t        else if(obj.hasOwnProperty('email')){\r\n\t          this.formErrors[key] = 'Please Enter a valid email address.';\r\n\t        }\r\n\t        else if(obj.hasOwnProperty('min')){\r\n\t          this.formErrors[key] = 'This field\\'s value must be greater than ' + obj['min']['min'] + '.';\r\n\t        }\r\n\t        else{\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t  }\r\n  getFormErrors(formGroup: FormGroup){\r\n    let errors: any = {};\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        errors[field] = control.errors;\r\n      } else if (control instanceof FormGroup) {\r\n        errors[field] = this.getFormErrors(control);\r\n      }\r\n    });\r\n    return errors;  \r\n  }\r\n\r\n  onCancelBtnClick()\r\n  {\r\n  \tlet me = this;\r\n  \tif(me.form.dirty)\r\n  \t{\r\n\t    alertify.confirm('Do you want to cancel these changes?', function(e) {\r\n\t      if(e){\r\n\t\t  \tme.form.reset();\r\n\t      }\r\n\t    });\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \".form-control[disabled] {\\r\\n    background-color: white;\\r\\n    border: 0;\\r\\n    box-shadow: none;\\r\\n    text-align: left;\\r\\n}\"","module.exports = \"<div class=\\\"user-form-container col-md-12\\\">\\r\\n\\t<h2>User Information</h2>\\r\\n\\t<form class=\\\"basic-info-form\\\" [formGroup]=\\\"form\\\">\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">User Name</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"username\\\"> </div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">Full Name</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"client_name_en\\\"> </div>\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\"><span class=\\\"error\\\">{{formErrors['client_name_en']}}</span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">Address</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"address_line1\\\"> </div>\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\"><span class=\\\"error\\\">{{formErrors['address_line1']}}</span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">Country</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\">\\r\\n\\t\\t\\t\\t<select type=\\\"text\\\" formControlName=\\\"country\\\" class=\\\"form-control\\\" id=\\\"country\\\">\\r\\n\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of country\\\" [value]=\\\"item.country_code\\\">{{item.country_name}}</option>\\r\\n\\t\\t\\t\\t</select> \\r\\n\\t\\t\\t\\t<!-- <div><span class=\\\"error\\\" style=\\\"color:red\\\">{{formErrors['country']}}</span></div> -->\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">Contact</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"mobile_no\\\"></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<label class=\\\"col-md-2\\\">Email</label>\\r\\n\\t\\t\\t<div class=\\\"col-md-5\\\"><input type=\\\"text\\\" class=\\\"form-control\\\"  formControlName=\\\"email\\\"></div>\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\"><span class=\\\"error\\\">{{formErrors['email']}}</span></div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"form-group row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-5 offset-md-2\\\">\\r\\n\\t\\t\\t\\t<button (click)=\\\"saveUserInfo()\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n\\t\\t\\t\\t<button (click)=\\\"onCancelBtnClick()\\\" class=\\\"btn btn-danger\\\">Cancel</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '../../../services/frontend.service';\r\nimport { FormGroup, FormBuilder , FormControl, Validators } from '@angular/forms';\r\ndeclare var $: any;\r\ndeclare let alertify: any;\r\ndeclare let Orbit: any;\r\n\r\n@Component({\r\n  selector: 'app-user-info',\r\n  templateUrl: './user-info.component.html',\r\n  styleUrls: ['./user-info.component.css']\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n\tpublic form: FormGroup;\r\n  public formErrors:any = this.frontEndApi.formErrors;\r\n  public country;\r\n  public userInfo;\r\n\r\n  constructor( public frontEndApi : FrontendService, public fb: FormBuilder ) { }\r\n\r\n  ngOnInit() {\r\n  \tthis.createInitialForm();\r\n    this.frontEndApi.getCountryList().subscribe(result => {\r\n        this.country = result['data'];\r\n    });\r\n\r\n    this.frontEndApi.getUserInfo().subscribe(res=>{\r\n       this.userInfo = res['data'];\r\n       this.form.setValue(this.userInfo);\r\n    });\r\n\r\n  }\r\n\r\n  createInitialForm(){\r\n  \tvar me = this;\r\n    this.form = this.fb.group({\r\n      'username'                       : [{value : '',disabled : true}],\r\n      'client_name_en'                 : ['',Validators.required],\r\n      'address_line1'                  : ['',Validators.required],\r\n      'mobile_no'                      : '',\r\n      'email'                          : ['',[Validators.required,Validators.email]],\r\n      'enable_trade_confirmation_modal'             : '',\r\n      'enable_min_spred_sound'         : '',\r\n      'enable_alert_sound'           : '',\r\n      'enable_trade_amout_click_sound' : '',\r\n      'country'                        : '',\r\n      'default_theme'                  : '',\r\n      'min_spred_percent'              : ['',[Validators.max(100),Validators.min(0)]],\r\n    });\r\n   }\r\n\r\n  saveUserInfo(){\r\n    var me = this;\r\n    if(!this.form.valid){\r\n      this.formErrors = {};\r\n      /* IF FORM IS INVALID SET ERROR MESSAGE */\r\n      this.setFormErrorMsg();\r\n      // this.validateAllFormFields(this.staffDetailForm);\r\n    }else{\r\n    \tvar data = {\r\n    \t    'client_name' :this.form.value.client_name_en,\r\n    \t    'address'  \t  :this.form.value.address_line1,\r\n    \t    'mobile_no'   :this.form.value.mobile_no,\r\n    \t    'email'       :this.form.value.email,\r\n          'country'     :this.form.value.country\r\n    \t}\r\n    \tthis.frontEndApi.savePersonalInfo(data).subscribe(res=>{\r\n    \t\tif(res['success']){\r\n          me.formErrors = {};\r\n    \t\t\talertify.success('User Info Saved Succesfully');\r\n          Orbit['CURRENT_USER']['full_name'] = this.form.value.client_name_en ;\r\n          alertify.confirm('Do you want to Reload this Page?', function(e) {\r\n            if(e) {\r\n                window.location.reload();    \r\n              }\r\n             });\r\n    \t\t}\r\n      });\r\n    }\r\n  }\r\n\r\n  setFormErrorMsg(){\r\n    let errors = this.getFormErrors(this.form);\r\n\r\n    for(let key in errors){\r\n      if(errors[key] != null){\r\n        let obj:any = errors[key];\r\n        if(obj.hasOwnProperty('required')){\r\n          this.formErrors[key] = 'This field is required.';\r\n        }\r\n        else if(obj.hasOwnProperty('email')){\r\n          this.formErrors[key] = 'Please Enter a valid email address.';\r\n        }\r\n        else if(obj.hasOwnProperty('min')){\r\n          this.formErrors[key] = 'This field\\'s value must be greater than ' + obj['min']['min'] + '.';\r\n        }\r\n        else{\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getFormErrors(formGroup: FormGroup){\r\n    let errors: any = {};\r\n    Object.keys(formGroup.controls).forEach(field => {\r\n      const control = formGroup.get(field);\r\n      if (control instanceof FormControl) {\r\n        errors[field] = control.errors;\r\n      } else if (control instanceof FormGroup) {\r\n        errors[field] = this.getFormErrors(control);\r\n      }\r\n    });\r\n    return errors;  \r\n  }\r\n\r\n  onCancelBtnClick()\r\n  {\r\n    let me = this;\r\n    if(me.form.dirty)\r\n    {\r\n      alertify.confirm('Do you want to cancel these changes?', function(e) {\r\n        if(e){\r\n          me.form.setValue(me.userInfo); \r\n          me.form.markAsPristine();     \r\n        }\r\n      });\r\n    } \r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"user-settings\\\" >\\r\\n\\t<ul class=\\\"nav nav-tabs form-tabs\\\" id=\\\"client-form-tabs\\\" role=\\\"tablist\\\">\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link active\\\" id=\\\"client-basic-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#user-info\\\" role=\\\"tab\\\" aria-controls=\\\"client-basic\\\" aria-selected=\\\"true\\\">Personal Information</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" id=\\\"client-address-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#general-settings\\\" role=\\\"tab\\\" aria-controls=\\\"client-address\\\" aria-selected=\\\"true\\\">General Settings</a>\\r\\n\\t\\t</li>\\r\\n\\t\\t<li class=\\\"nav-item\\\">\\r\\n\\t\\t\\t<a class=\\\"nav-link\\\" id=\\\"client-contact-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#password-info\\\" role=\\\"tab\\\" aria-controls=\\\"client-contact\\\" aria-selected=\\\"true\\\">Password Settings</a>\\r\\n\\t\\t</li>\\r\\n\\t</ul>\\r\\n\\t<div class=\\\"tab-content\\\">\\r\\n\\t\\t<div class=\\\"change-pwd-container tab-pane fade\\\" id=\\\"general-settings\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"client-address-tab\\\">\\r\\n\\t\\t\\t<app-general-settings></app-general-settings>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"change-pwd-container tab-pane fade\\\" id=\\\"password-info\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"client-contact-tab\\\">\\r\\n\\t\\t\\t<app-password-info></app-password-info>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"change-pwd-container tab-pane fade active show\\\" id=\\\"user-info\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"client-basic-tab\\\">\\r\\n\\t\\t\\t<app-user-info></app-user-info>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FrontendService } from '../../services/frontend.service';\r\n\r\n@Component({\r\n  selector: 'app-user-settings',\r\n  templateUrl: './user-settings.component.html',\r\n  styleUrls: ['./user-settings.component.css']\r\n})\r\nexport class UserSettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","//Datatables Constants\r\nexport const PAGE_PER_SIZE = 50;\r\n\r\n//sockect reconnection attempts constant\r\nexport const SOCKET_RECONNECTION_ATTEMPTS = 10;\r\n\r\n//Trade Counter Percentage\r\nexport const TRADE_COUNTER_PER = 80;\r\n\r\n// socket reconnect time interval(in milliseconds)\r\nexport const SOCKET_RECONNECTION_MIN_INTERVAL = 60000;\r\nexport const SOCKET_RECONNECTION_MAX_INTERVAL = 300000;\r\n","export const DASHBOARD = {\r\n\t// headers : {\r\n\t// \tonOff        :'On/Off',\r\n\t// \tmarket       :'Market',\r\n\t// \tquote_balance  :'BTC Balance1111',\r\n\t// \tbase_balance  :'ETH Balance222',\r\n\t// \tbid          :'Bid',\r\n\t// \task          :'Ask',\r\n\t// \tstatus       :'Status',\r\n\t// \trequest_time :'Request Time',\r\n\t// \tresponse_time:'Response Time',\r\n\t// \ttype         :'Type',\r\n\t// \tamount       :'Amount',\r\n\t// \tprofit       :'Profit (%)'\r\n\t// },\r\n\t// labels:{\r\n\t// \tlblnextReload:'Next Reload',\r\n\t// \tlbllastFetched:'Last Fetched On',\r\n\t// \tlbltradeHistory:'Trade History',\r\n\t// \tlbltradebtcAmt:'TRADE BTC AMOUNT',\r\n\t// \tlblestimateProfit:'ESTIMATED PROFIT'\r\n\t// },\r\n\terrors : {\r\n\t\temptyBtcAmount   :'Please enter BTC amount',\r\n\t\tspredLessMinSpred:'Spread rate is less than your min spread value',\r\n\t\tnegativeAmount   :'Amount cannot be less than 0',\r\n\t\treconnectionError: 'Error while connecting to the ticker server. Please contact system admin for more details.',\r\n\t\tmultipleConnectionError: 'Already connected from another device.',\r\n\t\ttradeClickPerError : 'Trade limit is about to exceed',\r\n\t\ttradeClickFinishError : 'Trade limit has exceeded',\r\n\t\tnegativeSpred\t:'Spread Percentage is Negative.'\r\n\t}\r\n};\r\n\r\nexport const API_SETTINGS = {\r\n\t// headers : {\r\n\t// \tOnOff      :'On/Off',\r\n\t// \tmarket     :'Market',\r\n\t// \tapi_keys   :'API KEYS',\r\n\t// \tsecret_keys:'SECRET KEYS',\r\n\t// \tmin_spred_percent:'MINIMUM SPRED PERCENTAGE',\r\n\t// },\r\n\terrors : {\r\n\t\tminSpredNegative:'Minimum Spread Percentage must be a positive number',\r\n\t\tidEmpty         :'Record not found please Save the Record First!',\r\n\t\tkeysInvalid     :\"Api/Secret Keys Are Invalid For \",\r\n\t\tnoChanges       :\"No modified/new record(s) found for save.\",\r\n\t},\r\n\tconfirm :{\r\n\t\tsave:\"Do you want to save the changes?\"\r\n\t}\r\n};\r\n\r\nexport const TRADE_LOG = {\r\n\t// headers : {\r\n\t// \tbuy             :'BUY',\r\n\t// \tsell            :'SELL',\r\n\t// \testimate_profit :'ESTIMATED PROFIT',\r\n\t// \tid              :'ID',\r\n\t// \tmarket          :'Market',\r\n\t// \twallet          :'Wallet',\r\n\t// \torder_id        :'Order ID',\r\n\t// \tstatus          :'Status',\r\n\t// \trequest_time    :'Request Time',\r\n\t// \tresponse_time   :'Response Time',\r\n\t// \ttrade_type      :'Type',\r\n\t// \ttrade_base_amount:'Amount',\r\n\t// \tspred_percent   :'Profit (%)'\r\n\t// },\r\n\t// labels:{\r\n\t// \tlbldateFrom:'Date From:',\r\n\t// \tlbldateTo:'Date To:'\r\n\t// },\r\n\terrors : {\r\n\t\tinvalidDate:\"Date has been set Incorrectly\",\r\n\t},\r\n\tsuccess:{\r\n\t\tfetchedByDate:'Loaded Records According To DATE',\r\n\t}\r\n};\r\n\r\n// export const BUTTONS ={\r\n// \tbtnSave           :'Save',\r\n// \tbtnReset          :'Reset',\r\n// \tbtnVerify         :'Verify',\r\n// \tbtnVerified       :'Verified',\r\n// \tbtnTradeAction    :'Trade Action',\r\n// \tmenubtnDashboard  :'Dashboard',\r\n// \tmenubtnApiSettings:'API Settings',\r\n// \tmenubtnTradeLog   :'Trade Log',\r\n// \tmenubtnLogout     :'Logout',\r\n// \tmenubtnDayMode    :'Day Mode',\r\n// \tmenubtnNightMode  :'Night Mode',\r\n// \tbtnBuy            :'Buy',\r\n// \tbtnSell           :'Sell',\r\n// }\r\n","import { Pipe, PipeTransform,LOCALE_ID, Inject } from '@angular/core';\r\nimport {formatNumber} from '@angular/common';\r\n@Pipe({\r\n  name: 'bitNumber'\r\n})\r\nexport class BitNumberPipe implements PipeTransform {\r\n\tconstructor(@Inject(LOCALE_ID) private _locale: string) {}\r\n\ttransform(value: any, digitsInfo?: string, emptyTxt?: string, hasError?:number, errorTxt?:string, locale?: string): string {\r\n\t\tif (value == null || value === '' || value !== value){\r\n\t    \treturn hasError == 1 ? errorTxt : emptyTxt;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tlocale = locale || this._locale;\r\n\t  \t\tconst num = strToNumber(value);\r\n\t  \t\treturn formatNumber(num,locale, digitsInfo);\r\n\t\t} catch (error) {\r\n\t    \treturn emptyTxt;\r\n\t\t}\r\n\t\t/**\r\n\t\t * Transforms a string into a number (if needed).\r\n\t\t */\r\n\t\tfunction strToNumber(value: number | string): number {\r\n\t\t  \t// Convert strings to numbers\r\n\t\t  \tif (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\r\n\t\t    \treturn Number(value);\r\n\t\t  \t}\r\n\t\t  \tif (typeof value !== 'number') {\r\n\t\t    \tthrow new Error(`${value} is not a number`);\r\n\t\t  \t}\r\n\t\t  \treturn value;\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientMarketWallet } from './../models/client-market-wallet';\r\nimport { DashboardTradeLogResponse } from '@models/dashboard-trade-log-response.model';\r\n\r\ndeclare var $: any;\r\ndeclare var window;\r\ndeclare let Orbit: any;\r\nconst BASE_URL = window['BASE_URL'];\r\n@Injectable()\r\nexport class FrontendService {\r\n\tpublic CSRF_TOKEN:string;\r\n\tpublic BASE_URL:string = window['BASE_URL'];\r\n\tpublic tradeFormData:any = {};\r\n\tpublic tradeLogData:Array<any> = [];\r\n\tpublic orderDetailData:any = {};\r\n\tpublic isOrderDetailDataEmpty:boolean = true;\r\n\tpublic sideBarStatus:boolean = false;\r\n\tpublic isTradeBtnClicked:boolean = false;\r\n\tpublic routerName:string='';\r\n\tpublic isSyncOrderClicked:boolean = false;\r\n\tpublic homeTradeLogData:Array<DashboardTradeLogResponse> = [];\r\n\tpublic mask_text:string;\r\n  \tpublic min_spred_percent = Orbit['CURRENT_USER']['min_spred_percent'];\r\n  \tpublic formErrors = {};\r\n\tconstructor(public http:HttpClient) {\r\n\t\tthis.CSRF_TOKEN = $('meta[name=\"csrf-token\"]').attr(\"content\");\r\n\t}\r\n\r\n\t/********************************** COMMON HTTP FUNCTIONS :: START **********************************/\r\n\tpublic getRequest(url, params): Observable<any> {\r\n\t\tlet httpHeaders = new HttpHeaders()\r\n\t\t  .set('Content-Type', 'application/json');\r\n\t\tlet httpParams = new HttpParams();\r\n\r\n\t\tfor (let key in params) {\r\n\t\t  let value = params[key];\r\n\t\t  httpParams = httpParams.set(key, value);\r\n\t\t}\r\n\t\treturn this.http.get(url, { headers: httpHeaders, responseType: 'json', params: httpParams });\r\n\t}\r\n\r\n\tpublic getKeyValue(url: string, data: any): Observable<any> {\r\n\t\tlet httpHeaders = new HttpHeaders()\r\n\t\t  .set('Content-Type', 'application/json');\r\n\t\tlet httpParams = new HttpParams();\r\n\r\n\t\tfor (let key in data) {\r\n\t\t  let value = JSON.stringify(data[key]);\r\n\t\t  if(Array.isArray(value)){\r\n\t\t    for(var i =0; i<value.length; i++){\r\n\t\t      let prmObj = value[i];\r\n\t\t      for(var k in prmObj){\r\n\t\t        let val = prmObj[k],\r\n\t\t          httpKey = key.toString()+'['+i.toString()+']'+'['+k.toString()+']';\r\n\t\t        httpParams = httpParams.set(key, value);\r\n\t\t      }\r\n\t\t    }\r\n\t\t  }\r\n\t\t  else{\r\n\t\t    httpParams = httpParams.set(key, value);\r\n\t\t  }\r\n\t\t}\r\n\t\t// httpParams = httpParams.set('_csrf', this.CSRF_TOKEN);\r\n\t\tlet body = httpParams.toString();\r\n\t\treturn this.http.get(url, { headers: httpHeaders, responseType: 'json', params: httpParams });\r\n\t}\r\n\r\n\tpublic postKeyValue(url: string, data: any): Observable<any> {\r\n\t\tlet httpHeaders = new HttpHeaders()\r\n\t\t  .set('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\r\n\t\tlet httpParams = new HttpParams();\r\n\r\n\t\tfor (let key in data) {\r\n\t\t  let value = data[key];\r\n\t\t  if(Array.isArray(value)){\r\n\t\t    for(var i =0; i<value.length; i++){\r\n\t\t      let prmObj = value[i];\r\n\t\t      for(var k in prmObj){\r\n\t\t        let val = prmObj[k],\r\n\t\t          httpKey = key.toString()+'['+i.toString()+']'+'['+k.toString()+']';\r\n\t\t        httpParams = httpParams.set(httpKey, val);\r\n\t\t      }\r\n\t\t    }\r\n\t\t  }\r\n\t\t  else{\r\n\t\t    httpParams = httpParams.set(key, value);\r\n\t\t  }\r\n\t\t}\r\n\t\thttpParams = httpParams.set('_csrf', this.CSRF_TOKEN);\r\n\t\tlet body = httpParams.toString();\r\n\t\treturn this.http.post(url, body, { headers: httpHeaders, responseType: 'json',/* params: httpParams*/ });\r\n\t}\r\n\r\n\tpublic postJson(url: string, data: any): Observable<any> {\r\n\t\tlet httpHeaders = new HttpHeaders()\r\n\t\t  .set('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8')\r\n\t\tlet httpParams = new HttpParams();\r\n\t\thttpParams = httpParams.set('_csrf', this.CSRF_TOKEN);\r\n\t\thttpParams = httpParams.set('data', JSON.stringify(data));\r\n\t\tlet body = httpParams.toString();\r\n\t\treturn this.http.post(url, body, { headers: httpHeaders, responseType: 'json' });\r\n\t}\r\n\r\n\t/********************************** COMMON HTTP FUNCTIONS :: END **********************************/\r\n\r\n\t/********************************** HEADER FUNCTIONS :: START **********************************/\r\n\t/**\r\n\t * fetch active wallets\r\n\t */\r\n\tpublic getDefaultWallet(){\r\n\tlet url = BASE_URL + 'wallet-master/get-wallet-list';\r\n\treturn this.getRequest(url, '');\r\n\t}\r\n\r\n\tpublic logout(){\r\n\tlet url = BASE_URL + 'auth/logout';\r\n\treturn this.postKeyValue(url, {});\r\n\t}\r\n\t/********************************** HEADER FUNCTIONS :: END **********************************/\r\n\r\n\t/********************************** DASHBOARD FUNCTIONS :: START **********************************/\r\n\r\n\tpublic clientMarketWalletList(params:any = {}):Observable<ClientMarketWallet[]> {\r\n\t\tlet url = BASE_URL+'client-market-wallet/get-list';\r\n\t\treturn this.getRequest(url, params);\r\n  \t}\r\n\r\n  \tpublic getTradeLog(params:any): any{\r\n\t\tlet url = BASE_URL + 'trade-history/list';\r\n\t\treturn this.getKeyValue(url, params);\r\n  \t}\r\n\r\n  \tpublic getJpyRate(params:any): any{\r\n  \t\tconst url = 'https://min-api.cryptocompare.com/data/pricemulti';\r\n  \t\t// const url = 'https://min-api.cryptocompare.com/data/pricemulti?fsym=NPR&tsyms=JPY';\r\n\t\t// let url = 'https://min-api.cryptocompare.com/data/price?fsym=BTC&tsyms=JPY';\r\n\t\treturn this.getRequest(url, params);\r\n\t}\r\n\r\n\tpublic getMarketBalance(exchangeId:string){\r\n\t\tlet params:any = {market : exchangeId};\r\n\t\tconst url = BASE_URL+'client-market-wallet/get-market-balance';\r\n\t\treturn this.getRequest(url, params);\r\n\t}\r\n\r\n\tpublic viewOrderDetail(recId:number,orderId:string,marketCode:string){\r\n\t\tlet params:any = {id : recId, order_id : orderId, market_code : marketCode};\r\n\t\tconst url = BASE_URL+'exchange/fetch-order';\r\n\t\treturn this.getRequest(url, params);\r\n\t}\r\n\tpublic featchApiResponse(apiResponse:string){\r\n\t\tconst url = BASE_URL+'trade-history/featch-api-response';\r\n\t    return this.postKeyValue(url,apiResponse);\r\n\t}\r\n\tpublic cancelOrder(params:string){\r\n\t\tconst url = BASE_URL+'trade-history/order-cancel';\r\n\t    return this.postKeyValue(url,params);\r\n\t}\r\n\tpublic syncOrder(apiResponse:string){\r\n\t\t// const url = BASE_URL+'trade-history/sync-order';\r\n\t\tconst url = BASE_URL+'trade-history/sync-order-cron';\r\n\t    return this.postKeyValue(url,apiResponse);\r\n\t}\r\n\r\n\t/**\r\n\t * TradeLog Action Click save function\r\n\t * @param  {any} params []\r\n\t * @return {any}        []\r\n\t */\r\n\tpublic saveTradeLog(params:any):Observable<any>{\r\n\t\tlet url = BASE_URL + 'trade-history/create-order';\r\n\t\treturn this.postKeyValue(url, params);\r\n\t}\r\n\r\n\tpublic setDisplayOrder(params:any): any{\r\n\t\tlet url = BASE_URL + 'client-market-wallet/set-display-order';\r\n\t\treturn this.postJson(url, params);\r\n\t}\r\n\r\n\t/********************************** DASHBOARD FUNCTIONS :: END **********************************/\r\n\r\n\t/********************************** API SETTINGS FUNCTIONS :: START **********************************/\r\n\r\n\tpublic getApiSettingsList(params:any = {}):any {\r\n\t\tlet url = BASE_URL+'client-market/list';\r\n\t\treturn this.getRequest(url, params);\r\n\t}\r\n\r\n\tpublic getMinSpredPercentData(controller:string){\r\n\t\tconst url:string = controller+'/get-min-spred';\r\n\t\treturn this.http.get(url);\r\n\t}\r\n\r\n\tpublic saveClientMarketApi(params:any): any{\r\n\t\tlet url = BASE_URL + 'client-market/save-api-keys';\r\n\t\treturn this.postJson(url, params);\r\n\t}\r\n\r\n\tpublic saveMinSpredPercent(params: any): any {\r\n\t\tlet url = BASE_URL + 'client/save-min-spred-percentage';\r\n\t\treturn this.postJson(url, params);\r\n\t}\r\n\r\n\tpublic verifyApiKey(params: any) {\r\n\t\tconst url = BASE_URL + 'client-market/verify-apikey';\r\n    \treturn this.getRequest(url, params);\r\n\t}\r\n\r\n\t/********************************** API SETTINGS FUNCTIONS :: END **********************************/\r\n\t/**\r\n\t * Status Toggle Functionality\r\n\t * @param {number} id         []\r\n\t * @param {string} controller []\r\n\t */\r\n\tpublic toggleStatus(id: number, controller: string) {\r\n\t    const url: string = BASE_URL + controller + '/status-toggle';\r\n\t    return this.postKeyValue(url, {id : id});\r\n\t}\r\n\r\n\tpublic getTradeSummaryData(params) {\r\n\t\tconst url = BASE_URL + 'trade-history/get-trade-summary';\r\n\t\treturn this.getRequest(url, params);\r\n\t}\r\n\r\n\tpublic getUserInfo(){\r\n\t\tconst url = BASE_URL + 'client/get-user-info';\r\n\t\treturn this.postJson(url, '');\r\n\t}\r\n\tpublic savePersonalInfo(params){\r\n\t\tconst url = BASE_URL + 'client/save-personal-info';\r\n\t\treturn this.postKeyValue(url, params);\r\n\t}\r\n\tpublic saveGeneralSettings(params){\r\n\t\tconst url = BASE_URL + 'client/save-general-settings';\r\n\t\treturn this.postKeyValue(url, params);\r\n\t}\r\n\tpublic savePasswordSettings(params){\r\n\t\tconst url = BASE_URL + 'client/save-password-settings';\r\n\t\treturn this.postKeyValue(url, params);\r\n\t}\r\n\tpublic getCountryList(){\r\n\t    const url:string = 'backend/country/list';\r\n\t    return this.getRequest(url,'');\r\n  \t} \r\n  \tpublic getNetworkInterface(){\r\n  \t\tconst url:string = 'network-interface/get-data';\r\n  \t\treturn this.getRequest(url,'');\r\n  \t}\r\n  \tpublic saveNetworkInterface(data,id){\r\n  \t\tlet params:any = {data : data, network_interface_id : id};\r\n  \t\tconst url:string = 'network-interface/save-network-settings';\r\n  \t\treturn this.postJson(url,params);\r\n  \t}\r\n\r\n\t// public setUserSettingsData(form){\r\n\t// \tthis.getUserInfo().subscribe(res=>{\r\n //  \t \t\tlet userInfo = res['data'];\r\n //  \t \t\tform.setValue(userInfo);\r\n //  \t\t});\r\n\t// }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ClientMarketWallet } from '@models/client-market-wallet';\r\nimport { ClientWalletSelectionModel } from '@models/client-wallet-selection-model';\r\nimport { ActiveWalletSelectionModel } from '@models/active-wallet-selection-model';\r\nimport { FrontendService } from '@services/frontend.service';\r\nimport { SOCKET_RECONNECTION_ATTEMPTS, SOCKET_RECONNECTION_MIN_INTERVAL, SOCKET_RECONNECTION_MAX_INTERVAL} from '../config/constant';\r\nimport { DASHBOARD } from '../config/lang';\r\n\r\nimport * as io from 'socket.io-client';\r\n\r\ndeclare let Orbit: any;\r\ndeclare let window: any;\r\n\r\nconst SOCKET_URL: string = window['SOCKET_URL'];\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SocketIoService {\r\n\tpublic socket;\r\n\tpublic refetchJpyRateTimer;\r\n\tpublic reconnectionAttempts:number = SOCKET_RECONNECTION_ATTEMPTS;\r\n\tpublic reconnectionDelay:number = 5000;\r\n\tpublic isReconnectionError:boolean = false;\r\n\tpublic reconnectionErrorMsg:string;\r\n\tpublic reconnectInterval:number = SOCKET_RECONNECTION_MIN_INTERVAL;\r\n\tpublic activeWalletSelModel: ActiveWalletSelectionModel = Orbit['CURRENT_USER']['default_wallet'];\r\n\tpublic walletChange: Subject<boolean> = new Subject<boolean>();\r\n\tpublic isWalletchange: boolean = false;\r\n\tpublic clientWalletSelModel: ClientWalletSelectionModel = {\r\n\t\titems              : [],\r\n\t\tbidRateArr         : {},\r\n\t    askRateArr         : {},\r\n\t    base_balance_arr    : {},\r\n\t    quote_balance_arr    : {},\r\n\t\t// cash_balance_arr   : {},\r\n\t\ttickers            : {},\r\n\t\tmax_bid_market     : '',\r\n\t    min_ask_market     : '',\r\n\t    base_balance_total  : 0,\r\n\t    quote_balance_total : 0,\r\n\t    // cash_balance_total : 0,\r\n\t    base_jpy_rate      : 0,\r\n\t    quote_jpy_rate     : 0,\r\n\t\tsymbol             : Orbit.CURRENT_USER.symbol,\r\n\t\ttradeActionChecked : true\r\n\t  };\r\n    public spredPercentAudio: any = new Audio();\r\n    private oldSpredPercentValue:any;\r\n  \tconstructor(public frontendApi: FrontendService) {\r\n  \t\tthis.walletChange.subscribe((value) => {\r\n        \tthis.isWalletchange = value;\r\n        });\r\n  \t}\r\n\r\n  \t  /**\r\n   * @author SAGIN\r\n   * On spred_percentage greater than min_Spred_percentage\r\n   */\r\n  \tplaySpredPercentAudio() {\r\n    \tthis.spredPercentAudio.play();\r\n  \t}\r\n  \t/**\r\n   * @author ROHAN\r\n   * On wallet selection change,\r\n   * 1. Set active wallet\r\n   * 2. Re-fetch client market wallet\r\n   * 3. Leave old socket rooms.\r\n   * 4. Join new roomw.\r\n   * @param {[Object]} walletItem [selected wallet]\r\n   */\r\n   changeActiveWallet(newWalletInfo){\r\n      const symbol: string = newWalletInfo['code'];\r\n      const [base, quote]  = symbol.split('/');\r\n      const newActiveWallet:ActiveWalletSelectionModel = {\r\n        id     : newWalletInfo['id'],\r\n        symbol : newWalletInfo['code'],\r\n        base   : base, //newWalletInfo['base']\r\n        quote  : quote //newWalletInfo['quote']\r\n      };\r\n      Orbit.CURRENT_USER.default_wallet = newActiveWallet;\r\n      this.activeWalletSelModel = newActiveWallet;\r\n      this.onWalletChangeDisconnect();\r\n      this.isWalletchange = true;\r\n      this.walletChange.next(this.isWalletchange);\r\n    }\r\n\r\n    onWalletChangeDisconnect(){\r\n    \tlet me = this,\r\n        obj:any = {\r\n              items              : [],\r\n              bidRateArr         : {},\r\n              askRateArr         : {},\r\n              base_balance_arr  : {},\r\n              quote_balance_arr    : {},\r\n              // cash_balance_arr   : {},\r\n              tickers            : {},\r\n              max_bid_market     : '',\r\n              min_ask_market     : '',\r\n              base_balance_total: 0,\r\n              quote_balance_total  : 0,\r\n              // cash_balance_total : 0,\r\n              base_jpy_rate       : 0,\r\n              quote_jpy_rate       : 0,\r\n              symbol             : this.activeWalletSelModel['symbol'],\r\n              tradeActionChecked : true\r\n            };\r\n      this.isReconnectionError = false;\r\n      this.reconnectionErrorMsg = '';\r\n      /*for clear refetch jpy rate interval*/\r\n      clearInterval(this.refetchJpyRateTimer);\r\n      this.clientWalletSelModel = Object.assign(this.clientWalletSelModel, obj);\r\n      if(this.socket){\r\n        this.socket.io.disconnect();\r\n      }\r\n    }\r\n\r\n  /**\r\n   * Initialize Socket Conneciton\r\n   * @param {[FormGroup]} bitForm [BitForm]\r\n   */\r\n  \tconnect(bitForm){\r\n\t\tlet me = this;\r\n\t    let user:any = Orbit.CURRENT_USER;\r\n\t\tthis.socket = io(SOCKET_URL, {\r\n\t\t\treconnection: true,\r\n\t\t\treconnectionDelay: me.reconnectionDelay,\r\n\t\t\t// reconnectionDelayMax : 7000,\r\n\t\t\treconnectionAttempts: me.reconnectionAttempts ,//Infinity\r\n\t\t\tquery: 'client_id='+user.user_id+'&access_token='+user.access_token\r\n\t    });\r\n\r\n\t\tthis.socket.on('reconnect_failed', () => {\r\n\t\t\tme.reconnectionErrorMsg = DASHBOARD.errors.reconnectionError;\r\n\t\t\tme.isReconnectionError = true;\r\n\t\t\t/*For clear old bid/ask rate*/\r\n           \tfor (var i = 0 ; i < me.clientWalletSelModel.items.length; i++) {\r\n           \t\tlet obj:any = {\r\n\t\t\t        bid : null,\r\n\t\t\t        ask : null,\r\n\t\t\t        bid_status : null,\r\n\t\t\t        ask_status : null,\r\n\t\t\t        error_msg : '',\r\n\t\t\t        has_error : 0,\r\n\t\t\t      };\r\n      \t\t\tme.clientWalletSelModel.items[i] = Object.assign(me.clientWalletSelModel.items[i], obj);\r\n\r\n\t\t        me.clientWalletSelModel.bidRateArr = {};\r\n\t\t\t\tme.clientWalletSelModel.askRateArr = {};\r\n                if(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.max_bid_market){\r\n\t\t\t        me.clientWalletSelModel.max_bid_market = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.min_ask_market){\r\n\t\t\t\t\tme.clientWalletSelModel.min_ask_market = null;\r\n\t\t\t\t}\r\n            };\r\n\t    \t/*For reset bitform*/\r\n\t        me.resetBitForm(bitForm);\r\n            me.socket.io.disconnect();\r\n            setTimeout(function(){\r\n\t\t        me.reconnectInterval += 60000;\r\n\t\t        if(SOCKET_RECONNECTION_MAX_INTERVAL < me.reconnectInterval){\r\n\t\t\t        me.reconnectInterval = SOCKET_RECONNECTION_MAX_INTERVAL;\r\n\t\t        }\r\n\t\t        me.connect(bitForm);\r\n\t\t    },me.reconnectInterval);\r\n        });\r\n        this.socket.on('connect', function(data) {\r\n\t\t    me.reconnectionErrorMsg = '';\r\n\t\t    me.isReconnectionError = false;\r\n\t        me.reconnectInterval = SOCKET_RECONNECTION_MIN_INTERVAL;\r\n        });\r\n\t\tthis.socket.on('ticker', function(resp){\r\n\t\t\t// alertify.success(data);\r\n\t\t\ttry{\r\n\t\t\t\tlet data:any = JSON.parse(resp);\r\n\t\t\t\tme.clientWalletSelModel.tickers[data['room']] = data;\r\n\t\t\t\tme.setFormData(me,data,data['exchangeId'],bitForm);\r\n\t\t\t\t// return data;\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\t// console.error('Ticker Error:', e);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.socket.on('tickerError', function(data){\r\n\t\t\ttry{\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t    let valid_market_count = 0;\r\n\r\n\t\t\t\tfor (var i = 0 ; i < me.clientWalletSelModel.items.length; i++) {\r\n\t\t            if(me.clientWalletSelModel.items[i]['code'] == data.exchangeId && me.clientWalletSelModel.items[i]['enable_trade'] == 1){\r\n\t\t              \tlet obj:any = {\r\n\t\t\t\t\t        bid : null,\r\n\t\t\t\t\t        ask : null,\r\n\t\t\t\t\t        bid_status : null,\r\n\t\t\t\t\t        ask_status : null,\r\n\t\t\t\t\t        error_msg : data.error_msg,\r\n\t\t\t\t\t        has_error : 1,\r\n\t\t\t\t\t      };\r\n\t      \t\t\t\tme.clientWalletSelModel.items[i] = Object.assign(me.clientWalletSelModel.items[i], obj);\r\n\r\n\t\t                if(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.max_bid_market){\r\n\t\t\t\t\t        me.clientWalletSelModel.max_bid_market = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.min_ask_market){\r\n\t\t\t\t\t\t\tme.clientWalletSelModel.min_ask_market = null;\r\n\t\t\t\t\t\t}\r\n\t\t        \t\tdelete me.clientWalletSelModel.bidRateArr[me.clientWalletSelModel.items[i]['code']];\r\n\t\t\t\t\t\tdelete me.clientWalletSelModel.askRateArr[me.clientWalletSelModel.items[i]['code']];\r\n\t              \t}\r\n\t\t\t\t\tif(me.clientWalletSelModel.items[i]['enable_trade'] == 1 && me.clientWalletSelModel.items[i]['has_error'] == 0 ){\r\n\t\t\t          valid_market_count++;\r\n\t\t\t        }\r\n\t            };\r\n\t\t\t\tif(valid_market_count == 0){\r\n\t\t\t        /*For reset bitform*/\r\n\t\t\t        me.resetBitForm(bitForm);\r\n\t\t\t     }\r\n\t\t\t\t// return data;\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\t// console.error('Ticker Error:', e);\r\n\t\t\t}\r\n        });\r\n\t\tthis.socket.on('loadMarketsError', function(data){\r\n\t\t\ttry{\r\n\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t    let valid_market_count = 0;\r\n\r\n\t\t\t\tfor (var i = 0 ; i < me.clientWalletSelModel.items.length; i++) {\r\n\t              \tif(me.clientWalletSelModel.items[i]['code'] == data.exchangeId && me.clientWalletSelModel.items[i]['enable_trade'] == 1){\r\n\t\t                let obj:any = {\r\n\t\t                \tbid : null,\r\n\t\t\t\t\t        ask : null,\r\n\t\t\t\t\t        bid_status : null,\r\n\t\t\t\t\t        ask_status : null,\r\n\t\t\t\t\t        error_msg : data.error_msg,\r\n\t\t\t\t\t        has_error : 1,\r\n\t\t\t\t\t      };\r\n\t\t      \t\t\tme.clientWalletSelModel.items[i] = Object.assign(me.clientWalletSelModel.items[i], obj);\r\n\t\t                if(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.max_bid_market){\r\n\t\t\t\t\t        me.clientWalletSelModel.max_bid_market = null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.min_ask_market){\r\n\t\t\t\t\t\t\tme.clientWalletSelModel.min_ask_market = null;\r\n\t\t\t\t\t\t}\r\n\t\t        \t\tdelete me.clientWalletSelModel.bidRateArr[me.clientWalletSelModel.items[i]['code']];\r\n\t\t\t\t\t\tdelete me.clientWalletSelModel.askRateArr[me.clientWalletSelModel.items[i]['code']];\r\n\t              \t}\r\n\t\t\t\t\tif(me.clientWalletSelModel.items[i]['enable_trade'] == 1 && me.clientWalletSelModel.items[i]['has_error'] == 0 ){\r\n\t\t\t          valid_market_count++;\r\n\t\t\t        }\r\n\t            };\r\n\t            if(valid_market_count == 0){\r\n\t\t\t        /*For reset bitform*/\r\n\t\t\t        me.resetBitForm(bitForm);\r\n\t\t\t\t}\r\n\t\t\t\t// return data;\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\t// console.error('Ticker Error:', e);\r\n\t\t\t}\r\n\t\t});\r\n    this.socket.on('socketAuthFailed', function(resp){\r\n\t\t\ttry{\r\n\t\t\t\tconst data = JSON.parse(resp);\r\n\t\t\t\t// if(data['status_code'] == 403){\r\n\t\t\t\t\tme.reconnectionErrorMsg = data.msg; //DASHBOARD.errors.multipleConnectionError;\r\n\t\t\t\t\tme.isReconnectionError = true;\r\n\t\t\t\t\tme.socket.io.disconnect();\r\n\t\t\t\t// }\r\n\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\t// console.error('Ticker Error:', e);\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.socket.on('proceed_to_join_room', function(resp){\r\n\t\t\tme.clientWalletSelModel.items.forEach(function(exchangeItem){\r\n\t\t\t\tif(exchangeItem['enable_trade'] == 1){\r\n\t\t\t\t\tlet exchangeId = exchangeItem.code;\r\n\t\t\t\t\tlet room = exchangeId+'_'+me.activeWalletSelModel.symbol;\r\n\t\t\t\t\tme.joinRoom(room);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n    }\r\n\r\n\tsaveTradeLog(params){\r\n        this.socket.emit('saveTradeLog',params);\r\n    }\r\n\r\n    /**\r\n     * Join Room\r\n     * room name format is {exchangeId}_{walletSymbol}, such as poloniex_ETH/BTC\r\n     * @param {[string]} room [name of the room to join]\r\n     */\r\n    joinRoom(room){\r\n        this.socket.emit('join',{room : room});\r\n    }\r\n\r\n    /**\r\n     * Leave room\r\n     * @param {[string]} room [name of the room to leave]\r\n     */\r\n    leaveRoom(room){\r\n        this.socket.emit('leaveRoom',{room : room});\r\n    }\r\n\r\n    setFormData(me,ticker,exchangeId,bitForm){\r\n\t    try{\r\n\t\t\tlet idx = -1;\r\n\r\n\t\t\tfor (var i = 0 ; i < me.clientWalletSelModel.items.length; i++) {\r\n\t\t\t\tif(me.clientWalletSelModel.items[i]['code'] == exchangeId){\r\n\t\t\t\t\tidx = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tlet bid:number = parseFloat(ticker.bid);\r\n\t\t\tlet ask:number = parseFloat(ticker.ask);\r\n\t\t\tlet bid_status:string = ticker.bidStatus;\r\n\t\t\tlet ask_status:string = ticker.askStatus;\r\n\r\n\t\t\tif(!bid && !ask){\r\n\t\t\t\tlet obj:any = {\r\n\t\t\t\t        bid : null,\r\n\t\t\t\t        ask : null,\r\n\t\t\t\t        bid_status : null,\r\n\t\t\t\t        ask_status : null,\r\n\t\t\t\t        error_msg : '',\r\n\t\t\t\t        has_error : 0,\r\n\t\t\t\t      };\r\n\t      \t\tme.clientWalletSelModel.items[idx] = Object.assign(me.clientWalletSelModel.items[idx], obj);\r\n\t      \t\tif(me.clientWalletSelModel.items[idx]['code'] == me.clientWalletSelModel.max_bid_market){\r\n\t\t\t        me.clientWalletSelModel.max_bid_market = null;\r\n\t\t\t\t}\r\n\t\t\t\tif(me.clientWalletSelModel.items[idx]['code'] == me.clientWalletSelModel.min_ask_market){\r\n\t\t\t\t\tme.clientWalletSelModel.min_ask_market = null;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.clientWalletSelModel.bidRateArr[exchangeId] = bid;\r\n\t\t\tme.clientWalletSelModel.askRateArr[exchangeId] = ask;\r\n\r\n\t\t\tlet max_bid:any = 0;\r\n\t\t\tlet min_ask:any = 0;\r\n\r\n\t\t\tlet _max_bid_market = '';\r\n\t\t\tlet _min_ask_market = '';\r\n\r\n\t\t\t/*For get max_bid rate and market*/\r\n\t\t\tObject.keys(me.clientWalletSelModel.bidRateArr).forEach(function(key){\r\n\t\t\t\tif(max_bid < me.clientWalletSelModel.bidRateArr[key]){\r\n\t\t\t\t\t_max_bid_market = key;\r\n\t\t\t\t\tmax_bid = me.clientWalletSelModel.bidRateArr[key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tme.clientWalletSelModel.max_bid_market = _max_bid_market;\r\n\r\n\t\t\t/*For get min_ask rate and market*/\r\n\t\t\tObject.keys(me.clientWalletSelModel.askRateArr).forEach(function(key){\r\n\t\t\t\tif(min_ask > me.clientWalletSelModel.askRateArr[key] || min_ask == 0){\r\n\t\t\t\t\t_min_ask_market = key;\r\n\t\t\t\t\tmin_ask = me.clientWalletSelModel.askRateArr[key];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tme.clientWalletSelModel.min_ask_market = _min_ask_market;\r\n\r\n\t\t\t//for set all bid value and update its classes\r\n            me.clientWalletSelModel.items[idx]['has_error'] = 0;\r\n\t\t\tme.clientWalletSelModel.items[idx]['error_msg'] = '';\r\n\t\t\tme.clientWalletSelModel.items[idx]['bid'] = bid;\r\n\t\t\tme.clientWalletSelModel.items[idx]['bid_status'] = bid_status;\r\n\r\n\t\t\t//for set all ask value and update its classes\r\n\t\t\tme.clientWalletSelModel.items[idx]['ask'] = ask;\r\n\t\t\tme.clientWalletSelModel.items[idx]['ask_status'] = ask_status;\r\n\r\n\t\t\tlet max_bid_jpy:any = me.activeWalletSelModel.symbol=='BTC/JPY' ? me.toComma(Math.floor(max_bid)) : me.toComma((max_bid* (me.clientWalletSelModel.quote_jpy_rate || 0)).toFixed());\r\n\t\t\tlet min_ask_jpy:any = me.activeWalletSelModel.symbol=='BTC/JPY' ? me.toComma(Math.ceil(min_ask)) : me.toComma((min_ask*(me.clientWalletSelModel.quote_jpy_rate || 0)).toFixed());\r\n\t\t\tlet max_bid_quote:any = me.activeWalletSelModel.symbol=='BTC/JPY' ? max_bid.toFixed(3) : max_bid.toFixed(8);\r\n\t\t\tlet min_ask_quote:any =  me.activeWalletSelModel.symbol=='BTC/JPY' ?  min_ask.toFixed(3) : min_ask.toFixed(8);\r\n\t\t\tlet spredAmt:any = max_bid_quote - min_ask_quote;\r\n\t\t\tlet spredPercent:any = (((spredAmt / min_ask_quote) * 100)|| 0).toFixed(3);\r\n\r\n\t      /*calculate and set ETH bid/ask and estimated profit*/\r\n\t\t\tvar btcAmt = parseFloat(bitForm.value['trade_quote_amount']) || 0;\r\n\t\t\tme.calculateEthBidAskAndProfit(max_bid_quote,min_ask_quote,btcAmt,bitForm);\r\n\r\n\t\t\tmax_bid = me.activeWalletSelModel.symbol=='BTC/JPY' ? Math.floor(max_bid) : max_bid.toFixed(8);\r\n\t\t\tmin_ask = me.activeWalletSelModel.symbol=='BTC/JPY' ? Math.ceil(min_ask) : min_ask.toFixed(8);\r\n\t\t\tspredAmt = me.activeWalletSelModel.symbol=='BTC/JPY' ? Math.ceil(spredAmt) : (spredAmt).toFixed(8);\r\n\t\t\t// var btcAmt = bitForm.value['trade_quote_amount'],\r\n\t\t\t// estProfit:any = (spredPercent/100) * btcAmt * me.clientWalletSelModel.quote_jpy_rate;\r\n\r\n\t\t\tlet max_bid_idx = -1,\r\n\t\t\t\tmin_ask_idx = -1;\r\n\t\t\tfor (var i = 0 ; i < me.clientWalletSelModel.items.length; i++) {\r\n\t\t\t\tif(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.max_bid_market){\r\n\t\t\t\t\tmax_bid_idx = i;\r\n\t\t\t\t}\r\n\t\t\t\tif(me.clientWalletSelModel.items[i]['code'] == me.clientWalletSelModel.min_ask_market){\r\n\t\t\t\t\tmin_ask_idx = i;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tlet max_bid_taker_fee = me.clientWalletSelModel.items[max_bid_idx]['taker_fee'],\r\n\t\t\t\tmin_ask_taker_fee = me.clientWalletSelModel.items[min_ask_idx]['taker_fee'],\r\n        min_spred_percent = max_bid_taker_fee > min_ask_taker_fee ? max_bid_taker_fee : min_ask_taker_fee;\r\n\r\n        min_spred_percent = (!me.frontendApi.min_spred_percent || me.frontendApi.min_spred_percent == 0) ? min_spred_percent : me.frontendApi.min_spred_percent;\r\n\t\t\tlet obj = {\r\n\t\t\t\t'market_buy'       : me.clientWalletSelModel.min_ask_market,\r\n\t\t\t\t'market_sell'      : me.clientWalletSelModel.max_bid_market,\r\n\t\t\t\t'max_bid_rate'     : max_bid,\r\n\t\t\t\t'min_ask_rate'     : min_ask,\r\n\t\t\t\t'max_bid_jpy'      : max_bid_jpy,\r\n\t\t\t\t'min_ask_jpy'      : min_ask_jpy,\r\n\t\t\t\t'spred_jpy'        : spredAmt,\r\n\t\t\t\t'spred_percent'    : spredPercent,\r\n\t\t\t\t'spred_quote'        : spredAmt,\r\n\t\t\t\t'max_bid_taker_fee': max_bid_taker_fee,\r\n\t\t\t\t'min_ask_taker_fee': min_ask_taker_fee,\r\n\t\t\t\t'min_spred_percent': min_spred_percent,\r\n\t\t\t\t// 'estimated_profit' : me.toComma(parseFloat(estProfit).toFixed(3))\r\n\t\t\t};\r\n\t\t\tme.createUpdatedForm(obj,bitForm);\r\n\t    }\r\n\t    catch(e){\r\n\t\t\t// console.error(\"setFormData error\",e);\r\n\t    }\r\n    }\r\n\r\n    createUpdatedForm(valueObj,bitForm){\r\n\t    try{\r\n\t\t\tlet obj:any = bitForm.value;\r\n\t\t\tobj = Object.assign(obj, valueObj);\r\n\t\t\tbitForm.setValue(obj);\r\n\t\t\t// bitForm = bitForm.group(obj);\r\n\t    }\r\n\t    catch(e){\r\n      \t\t// console.error(\"createUpdateForm Error:\",e);\r\n      }\r\n\t    // if(this.frontendApi.min_spred_percent<bitForm.controls.spred_percent.value)//Min Spred < spred_percentage\r\n\t    if(this.oldSpredPercentValue != bitForm.value.spred_percent){\r\n\t    {\r\n        // console.log('Old Spred Percent Value',this.oldSpredPercentValue);\r\n        // console.log('Form Spred Percent Value',bitForm.value.spred_percent);\r\n        this.oldSpredPercentValue = bitForm.value.spred_percent;\r\n        if(bitForm.value.min_spred_percent<bitForm.value.spred_percent)//Min Spred < spred_percentage\r\n          this.playSpredPercentAudio();\r\n        }\r\n\t    }\r\n\t}\r\n\r\n    resetBitForm(bitForm){\r\n    \t/*For reset bitform*/\r\n          let obj = {\r\n            'trade_quote_amount'   : '',\r\n            'trade_base_bid'      : '',\r\n            'trade_base_ask'      : '',\r\n            'spred_base'      : '',\r\n            'estimated_profit'   : '',\r\n            'market_buy'         : '',\r\n            'market_sell'        : '',\r\n            'max_bid_rate'       : '',\r\n            'min_ask_rate'       : '',\r\n            'max_bid_jpy'        : '',\r\n            'min_ask_jpy'        : '',\r\n            'spred_jpy'          : '',\r\n            'spred_percent'      : '',\r\n            'spred_quote'          : '',\r\n            'max_bid_taker_fee'  : '',\r\n            'min_ask_taker_fee'  : '',\r\n            'min_spred_percent'  : '',\r\n          };\r\n        this.createUpdatedForm(obj,bitForm);\r\n    }\r\n\r\n  \tcalculateEthBidAskAndProfit(max_bid_quote, min_ask_quote, btcAmt, bitForm){\r\n\t    let trade_base_bid:number  = max_bid_quote == 0 ? 0 : parseFloat(((1/max_bid_quote) * btcAmt).toFixed(8)),\r\n\t\t\ttrade_base_ask:number  = min_ask_quote == 0 ? 0 : parseFloat(((1/min_ask_quote) * btcAmt).toFixed(8)),\r\n\t\t\tspred_base:number      = trade_base_ask - trade_base_bid,\r\n\t\t\testProfit:any \t\t  = (spred_base) * this.clientWalletSelModel.base_jpy_rate;\r\n\r\n\t    let obj = {\r\n\t        'trade_quote_amount'  : btcAmt.toFixed(3),\r\n\t        'trade_base_bid'     : trade_base_bid.toFixed(8),\r\n\t        'trade_base_ask'     : trade_base_ask.toFixed(8),\r\n\t        'spred_base'\t\t\t: spred_base.toFixed(8),\r\n\t        'estimated_profit' \t: this.toComma(parseFloat(estProfit).toFixed())\r\n      \t};\r\n    \tthis.createUpdatedForm(obj,bitForm);\r\n  \t}\r\n\ttoComma(value){\r\n\t\tlet newVal = value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\t\treturn newVal;\r\n\t}\r\n\tgetMarketBalance(exchangeId) {\r\n\t    const me = this;\r\n\t    try {\r\n\t      me.frontendApi.getMarketBalance(exchangeId).subscribe(result => {\r\n\t        if(result['success'] && result['data']){\r\n\t          let idx = -1;\r\n\t        //   // if(me.exchangeList[exchangeId]['enable_trade'] == 0){\r\n\t          for (let i = 0 ; i < me.clientWalletSelModel.items.length; i++) {\r\n\t            const clientMarketWalletRec: ClientMarketWallet = me.clientWalletSelModel.items[i];\r\n\t            if (clientMarketWalletRec['code'] === exchangeId) {\r\n\t              if (clientMarketWalletRec['enable_trade'] == 0) {\r\n\t                return false;\r\n\t              }\r\n\t              idx = i;\r\n\t              break;\r\n\t            }\r\n\t          }\r\n\t          const data: any = result['data'],\r\n\t            quote_balance: number = data['btc'] ? parseFloat(data['btc']) : 0,\r\n\t            base_balance: number = data['eth'] ? parseFloat(data['eth']) : 0;\r\n\r\n\r\n            if(me.clientWalletSelModel.items[idx]){\r\n              // me.clientWalletSelModel.items[idx]['jpy_balance'] = quote_balance*me.clientWalletSelModel.quote_jpy_rate;\r\n\r\n              me.clientWalletSelModel.items[idx]['quote_balance'] = quote_balance;\r\n              me.clientWalletSelModel.items[idx]['base_balance'] = base_balance;\r\n            }\r\n\t          me.clientWalletSelModel.quote_balance_arr[exchangeId] = quote_balance;\r\n\t          me.clientWalletSelModel.base_balance_arr[exchangeId] = base_balance;\r\n\t          // me.clientWalletSelModel.cash_balance_arr[exchangeId] = quote_balance*me.clientWalletSelModel.quote_jpy_rate;\r\n\t          me.calculateTotal();\r\n\t        } else {\r\n\t          // alertify.error('Fatch Balance Error!!!');\r\n\t        }\r\n\t      });\r\n\t    } catch (e) {\r\n\t      //\r\n\t    }\r\n\t}\r\n  \t/**\r\n  \t * Client Market Wallet Grid's Balance Summary Calculation\r\n   \t * @param {[type]} me [description]\r\n   */\r\n  \tcalculateTotal() {\r\n\t    const me = this;\r\n\t    let base_total = 0;\r\n\t    Object.keys(me.clientWalletSelModel.base_balance_arr).forEach(function(key){\r\n\t      base_total += me.clientWalletSelModel.base_balance_arr[key];\r\n\t    });\r\n\t    let quote_total = 0;\r\n\t    Object.keys(me.clientWalletSelModel.quote_balance_arr).forEach(function(key){\r\n\t      quote_total += me.clientWalletSelModel.quote_balance_arr[key];\r\n\t    });\r\n\t    // let cash_total:number = 0;\r\n\t    // Object.keys(me.clientWalletSelModel.cash_balance_arr).forEach(function(key){\r\n\t    //   cash_total += me.clientWalletSelModel.cash_balance_arr[key];\r\n\t    // });\r\n\r\n\t    me.clientWalletSelModel.base_balance_total = base_total;\r\n\t    me.clientWalletSelModel.quote_balance_total = quote_total;\r\n\t    // me.clientWalletSelModel.cash_balance_total = cash_total;\r\n  \t}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}